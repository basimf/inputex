{
    "project": {
        "name": "InputEx",
        "description": "InputEx - form and fields framework for YUI3",
        "version": "4.0.0",
        "url": "http://clicrdv.github.com/inputex"
    },
    "files": {
        "src/autocomplete/js/autocomplete.js": {
            "name": "src/autocomplete/js/autocomplete.js",
            "modules": {
                "inputex-autocomplete": 1
            },
            "classes": {
                "inputEx.AutoComplete": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/base/js/base.js": {
            "name": "src/base/js/base.js",
            "modules": {
                "inputex-base": 1
            },
            "classes": {
                "inputEx.Base": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/button/js/button.js": {
            "name": "src/button/js/button.js",
            "modules": {
                "inputex-button": 1
            },
            "classes": {
                "inputEx.widget.Button": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/calendar-today-highlight-plugin/js/calendar-today-highlight-plugin.js": {
            "name": "src/calendar-today-highlight-plugin/js/calendar-today-highlight-plugin.js",
            "modules": {},
            "classes": {
                "Plugin.CalendarTodayHighlight": 1
            },
            "fors": {},
            "namespaces": {
                "Plugin": 1
            }
        },
        "src/calendar-week-number-plugin/js/calendar-week-number-plugin.js": {
            "name": "src/calendar-week-number-plugin/js/calendar-week-number-plugin.js",
            "modules": {},
            "classes": {
                "Plugin.CalendarWeekNumber": 1
            },
            "fors": {},
            "namespaces": {
                "Plugin": 1
            }
        },
        "src/calendar-year-navigator-plugin/js/calendar-year-navigator-plugin.js": {
            "name": "src/calendar-year-navigator-plugin/js/calendar-year-navigator-plugin.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/checkbox/js/checkbox.js": {
            "name": "src/checkbox/js/checkbox.js",
            "modules": {
                "inputex-checkbox": 1
            },
            "classes": {
                "inputEx.CheckBox": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/checkbox-multi-state/js/checkbox-multi-state.js": {
            "name": "src/checkbox-multi-state/js/checkbox-multi-state.js",
            "modules": {
                "checkbox-multi-state": 1
            },
            "classes": {
                "inputEx.CheckboxMultiState": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/choice/js/choice.js": {
            "name": "src/choice/js/choice.js",
            "modules": {
                "inputex-choice": 1
            },
            "classes": {
                "inputEx.mixin.choice": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/color/js/color.js": {
            "name": "src/color/js/color.js",
            "modules": {
                "inputex-color": 1
            },
            "classes": {
                "inputEx.ColorField": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/combine/js/combine.js": {
            "name": "src/combine/js/combine.js",
            "modules": {
                "inputex-combine": 1
            },
            "classes": {
                "inputEx.CombineField": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/datatable/js/datatable.js": {
            "name": "src/datatable/js/datatable.js",
            "modules": {
                "inputex-datatable": 1
            },
            "classes": {
                "inputEx.Plugin.InputExDataTable": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/date/js/date.js": {
            "name": "src/date/js/date.js",
            "modules": {
                "inputex-date": 1
            },
            "classes": {
                "inputEx.DateField": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/datepicker/js/datepicker.js": {
            "name": "src/datepicker/js/datepicker.js",
            "modules": {
                "inputex-datepicker": 1
            },
            "classes": {
                "inputEx.DatePickerField": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/dateselectmonth/js/dateselectmonth.js": {
            "name": "src/dateselectmonth/js/dateselectmonth.js",
            "modules": {
                "inputex-dateselectmonth": 1
            },
            "classes": {
                "inputEx.DateSelectMonthField": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/datesplit/js/datesplit.js": {
            "name": "src/datesplit/js/datesplit.js",
            "modules": {
                "inputex-datesplit": 1
            },
            "classes": {
                "inputEx.DateSplitField": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/datetime/js/datetime.js": {
            "name": "src/datetime/js/datetime.js",
            "modules": {
                "inputex-datetime": 1
            },
            "classes": {
                "inputEx.DateTimeField": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/ddlist/js/ddlist.js": {
            "name": "src/ddlist/js/ddlist.js",
            "modules": {
                "inputex-ddlist": 1
            },
            "classes": {
                "inputEx.DDListField": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/domain-name/js/inputex-domain-name.js": {
            "name": "src/domain-name/js/inputex-domain-name.js",
            "modules": {},
            "classes": {
                "inputEx.DomainNameField": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/dsselect/js/dsselect.js": {
            "name": "src/dsselect/js/dsselect.js",
            "modules": {
                "inputex-dsselect": 1
            },
            "classes": {
                "inputEx.DSSelectField": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/email/js/email.js": {
            "name": "src/email/js/email.js",
            "modules": {
                "inputex-email": 1
            },
            "classes": {
                "inputEx.EmailField": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/field/js/field.js": {
            "name": "src/field/js/field.js",
            "modules": {
                "inputex-field": 1
            },
            "classes": {
                "inputEx.constructor": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/file/js/file.js": {
            "name": "src/file/js/file.js",
            "modules": {
                "inputex-file": 1
            },
            "classes": {
                "inputEx.FileField": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/form/js/form.js": {
            "name": "src/form/js/form.js",
            "modules": {
                "inputex-form": 1
            },
            "classes": {
                "inputEx.Form": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/group/js/group.js": {
            "name": "src/group/js/group.js",
            "modules": {
                "inputex-group": 1
            },
            "classes": {
                "inputEx.Group": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/hidden/js/hidden.js": {
            "name": "src/hidden/js/hidden.js",
            "modules": {
                "inputex-hidden": 1
            },
            "classes": {
                "inputEx.HiddenField": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/imagecropper/js/imagecropper.js": {
            "name": "src/imagecropper/js/imagecropper.js",
            "modules": {
                "inputex-imagecropper": 1
            },
            "classes": {
                "inputEx.ImageCropperField": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/inplaceedit/js/inplaceedit.js": {
            "name": "src/inplaceedit/js/inplaceedit.js",
            "modules": {
                "inputex-inplaceedit": 1
            },
            "classes": {
                "inputEx.InPlaceEdit": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/inputex/js/inputex.js": {
            "name": "src/inputex/js/inputex.js",
            "modules": {
                "inputex": 1
            },
            "classes": {
                "inputEx": 1,
                "inputEx.widget": 1,
                "inputEx.mixin": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/inputex-accent-remover/js/inputex-accent-remover.js": {
            "name": "src/inputex-accent-remover/js/inputex-accent-remover.js",
            "modules": {
                "inputex-accent-remover\n\nAs you may guess, this module will help you on the way you will handle your accent.\nThere is a by instance configuration and you can easilly change it. see the example below\n\nex:\n\n var myAccentRemover1 = new Y.inputEx.AccentRemover(); // check the default configuration for 'e' below\n var myAccentRemover2 = new Y.inputEx.AccentRemover();\n myAccentRemover2.conf.e.regexp = /[èêẽēĕėëẻěȅȇẹȩęḙḛềếễểḕḗệḝǝɛ]/gi; // we remove the é in the regexp\n\n myAccentRemover1.removeAccents(\"treétreè\"); // treetree\n myAccentRemover2.removeAccents(\"treétreè\"); // treétree": 1
            },
            "classes": {
                "Y.InputexAccentRemover": 1
            },
            "fors": {},
            "namespaces": {
                "Y": 1
            }
        },
        "src/integer/js/integer.js": {
            "name": "src/integer/js/integer.js",
            "modules": {
                "inputex-integer": 1
            },
            "classes": {
                "inputEx.IntegerField": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/ipv4/js/ipv4.js": {
            "name": "src/ipv4/js/ipv4.js",
            "modules": {
                "inputex-ipv4": 1
            },
            "classes": {
                "inputEx.IPv4Field": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/jsonschema/js/jsonschema.js": {
            "name": "src/jsonschema/js/jsonschema.js",
            "modules": {
                "inputex-jsonschema": 1
            },
            "classes": {
                "inputEx.JsonSchema": 1,
                "inputEx.JsonSchema.Builder": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/jsontreeinspector/js/jsontreeinspector.js": {
            "name": "src/jsontreeinspector/js/jsontreeinspector.js",
            "modules": {
                "inputex-jsontreeinspector": 1
            },
            "classes": {
                "inputEx.widget.JsonTreeInspector": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/keyopvalue/js/keyopvalue.js": {
            "name": "src/keyopvalue/js/keyopvalue.js",
            "modules": {
                "inputex-keyopvalue": 1
            },
            "classes": {
                "inputEx.KeyOpValueField": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/keyvalue/js/keyvalue.js": {
            "name": "src/keyvalue/js/keyvalue.js",
            "modules": {
                "inputex-keyvalue": 1
            },
            "classes": {
                "inputEx.KeyValueField": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/lens/js/lens.js": {
            "name": "src/lens/js/lens.js",
            "modules": {
                "inputex-lens": 1
            },
            "classes": {
                "inputEx.Lens": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/linkedcombo/js/linkedcombo.js": {
            "name": "src/linkedcombo/js/linkedcombo.js",
            "modules": {
                "inputex-linkedcombo": 1
            },
            "classes": {
                "inputEx.LinkedComboField": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/list/js/list.js": {
            "name": "src/list/js/list.js",
            "modules": {
                "inputex-list": 1
            },
            "classes": {
                "inputEx.ListField": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/map/js/map.js": {
            "name": "src/map/js/map.js",
            "modules": {
                "inputex-map": 1
            },
            "classes": {
                "inputEx.MapField": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/menu/js/menu.js": {
            "name": "src/menu/js/menu.js",
            "modules": {
                "inputex-menu": 1
            },
            "classes": {
                "inputEx.MenuField": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/multiautocomplete/js/multiautocomplete.js": {
            "name": "src/multiautocomplete/js/multiautocomplete.js",
            "modules": {
                "inputex-multiautocomplete": 1
            },
            "classes": {
                "inputEx.MultiAutoComplete": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/multiselect/js/multiselect.js": {
            "name": "src/multiselect/js/multiselect.js",
            "modules": {
                "inputex-multiselect": 1
            },
            "classes": {
                "inputEx.MultiSelectField": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/node-menunav-improved/js/node-menunav-improved.js": {
            "name": "src/node-menunav-improved/js/node-menunav-improved.js",
            "modules": {},
            "classes": {
                "Plugin.NodeMenuNavImproved": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/number/js/number.js": {
            "name": "src/number/js/number.js",
            "modules": {
                "inputex-number": 1
            },
            "classes": {
                "inputEx.NumberField": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/object/js/object.js": {
            "name": "src/object/js/object.js",
            "modules": {
                "inputex-object": 1
            },
            "classes": {
                "inputEx.ObjectField": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/panel/js/panel.js": {
            "name": "src/panel/js/panel.js",
            "modules": {
                "inputex-panel": 1
            },
            "classes": {
                "inputEx.Panel": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/password/js/password.js": {
            "name": "src/password/js/password.js",
            "modules": {
                "inputex-password": 1
            },
            "classes": {
                "inputEx.PasswordField": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/phone/js/phone.js": {
            "name": "src/phone/js/phone.js",
            "modules": {
                "inputex-phone": 1
            },
            "classes": {
                "inputEx.PhoneField": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/radio/js/radio.js": {
            "name": "src/radio/js/radio.js",
            "modules": {
                "inputex-radio": 1
            },
            "classes": {
                "inputEx.RadioField": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/ratingstars/js/ratingstars.js": {
            "name": "src/ratingstars/js/ratingstars.js",
            "modules": {
                "inputex-ratingstars": 1
            },
            "classes": {
                "inputEx.RatingStars": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/ratingstarsform/js/ratingstarsform.js": {
            "name": "src/ratingstarsform/js/ratingstarsform.js",
            "modules": {
                "inputex-ratingstarsform": 1
            },
            "classes": {
                "inputEx.RatingStarsForm": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/rpc/js/rpc.js": {
            "name": "src/rpc/js/rpc.js",
            "modules": {
                "inputex-rpc": 1
            },
            "classes": {
                "inputEx.RPC": 1,
                "inputEx.RPC.Service": 1,
                "inputEx.RPC.Transport": 1,
                "inputEx.RPC.Envelope": 1,
                "inputEx.RPC.Envelope.URL": 1,
                "inputEx.RPC.Envelope.PATH": 1,
                "inputEx.RPC.Envelope.JSON": 1,
                "inputEx.RPC.Envelope.JSON-RPC-1.0": 1,
                "inputEx.RPC.Envelope.JSON-RPC-2.0": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/rte/js/rte.js": {
            "name": "src/rte/js/rte.js",
            "modules": {
                "inputex-rte": 1
            },
            "classes": {
                "inputEx.RTEField": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/select/js/select.js": {
            "name": "src/select/js/select.js",
            "modules": {
                "inputex-select": 1
            },
            "classes": {
                "inputEx.SelectField": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/serialize/js/serialize.js": {
            "name": "src/serialize/js/serialize.js",
            "modules": {
                "inputex-serialize": 1
            },
            "classes": {
                "inputEx.SerializeField": 1,
                "inputEx.SerializeField.serializers": 1,
                "inputEx.SerializeField.serializers.json": 1,
                "inputEx.SerializeField.serializers.xml": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/slider/js/slider.js": {
            "name": "src/slider/js/slider.js",
            "modules": {
                "inputex-slider": 1
            },
            "classes": {
                "inputEx.SliderField": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/smdtester/js/smdtester.js": {
            "name": "src/smdtester/js/smdtester.js",
            "modules": {
                "inputex-smdtester": 1
            },
            "classes": {
                "inputEx.RPC.SMDTester": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/string/js/string.js": {
            "name": "src/string/js/string.js",
            "modules": {
                "inputex-string": 1
            },
            "classes": {
                "inputEx.StringField": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/stringavailability/js/stringavailability.js": {
            "name": "src/stringavailability/js/stringavailability.js",
            "modules": {
                "inputex-stringavailability": 1
            },
            "classes": {
                "inputEx.StringAvailability": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/textarea/js/textarea.js": {
            "name": "src/textarea/js/textarea.js",
            "modules": {
                "inputex-textarea": 1
            },
            "classes": {
                "inputEx.Textarea": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/textautotag/js/textautotag.js": {
            "name": "src/textautotag/js/textautotag.js",
            "modules": {
                "inputex-textautotag": 1
            },
            "classes": {
                "inputEx.TextAutoTag": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/time/js/time.js": {
            "name": "src/time/js/time.js",
            "modules": {
                "inputex-time": 1
            },
            "classes": {
                "inputEx.TimeField": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/timeinterval/js/timeinterval.js": {
            "name": "src/timeinterval/js/timeinterval.js",
            "modules": {
                "inputex-timeinterval": 1
            },
            "classes": {
                "inputEx.TimeIntervalField": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/timerange/js/timerange.js": {
            "name": "src/timerange/js/timerange.js",
            "modules": {
                "inputex-timerange": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/tinymce/js/tinymce.js": {
            "name": "src/tinymce/js/tinymce.js",
            "modules": {
                "inputex-tinymce": 1
            },
            "classes": {
                "inputEx.TinyMCEField": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/tree/js/tree.js": {
            "name": "src/tree/js/tree.js",
            "modules": {
                "inputex-tree": 1
            },
            "classes": {
                "inputEx.TreeField": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/type/js/type.js": {
            "name": "src/type/js/type.js",
            "modules": {
                "inputex-type": 1
            },
            "classes": {
                "inputEx.TypeField": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/uneditable/js/uneditable.js": {
            "name": "src/uneditable/js/uneditable.js",
            "modules": {
                "inputex-uneditable": 1
            },
            "classes": {
                "inputEx.UneditableField": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/uppercase/js/uppercase.js": {
            "name": "src/uppercase/js/uppercase.js",
            "modules": {
                "inputex-uppercase": 1
            },
            "classes": {
                "inputEx.UpperCaseField": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/url/js/url.js": {
            "name": "src/url/js/url.js",
            "modules": {
                "inputex-url": 1
            },
            "classes": {
                "inputEx.UrlField": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/vector/js/vector.js": {
            "name": "src/vector/js/vector.js",
            "modules": {
                "inputex-vector": 1
            },
            "classes": {
                "inputEx.VectorField": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/visus/js/visus.js": {
            "name": "src/visus/js/visus.js",
            "modules": {
                "inputex-visus": 1
            },
            "classes": {
                "inputEx.visus": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "inputex-autocomplete": {
            "name": "inputex-autocomplete",
            "submodules": {},
            "elements": {},
            "classes": {
                "inputEx.AutoComplete": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/autocomplete/js/autocomplete.js",
            "line": 7
        },
        "inputex-base": {
            "name": "inputex-base",
            "submodules": {},
            "elements": {},
            "classes": {
                "inputEx.Base": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/base/js/base.js",
            "line": 7,
            "description": "A widget-stdmod-level extension that provides ability to render a form within the body"
        },
        "inputex-button": {
            "name": "inputex-button",
            "submodules": {},
            "elements": {},
            "classes": {
                "inputEx.widget.Button": 1,
                "Plugin.CalendarTodayHighlight": 1,
                "Plugin.CalendarWeekNumber": 1
            },
            "fors": {},
            "namespaces": {
                "Plugin": 1
            },
            "tag": "module",
            "file": "src/calendar-week-number-plugin/js/calendar-week-number-plugin.js",
            "line": 4
        },
        "inputex-checkbox": {
            "name": "inputex-checkbox",
            "submodules": {},
            "elements": {},
            "classes": {
                "inputEx.CheckBox": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/checkbox/js/checkbox.js",
            "line": 6
        },
        "checkbox-multi-state": {
            "name": "checkbox-multi-state",
            "submodules": {},
            "elements": {},
            "classes": {
                "inputEx.CheckboxMultiState": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/checkbox-multi-state/js/checkbox-multi-state.js",
            "line": 6
        },
        "inputex-choice": {
            "name": "inputex-choice",
            "submodules": {},
            "elements": {},
            "classes": {
                "inputEx.mixin.choice": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/choice/js/choice.js",
            "line": 7
        },
        "inputex-color": {
            "name": "inputex-color",
            "submodules": {},
            "elements": {},
            "classes": {
                "inputEx.ColorField": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/color/js/color.js",
            "line": 6
        },
        "inputex-combine": {
            "name": "inputex-combine",
            "submodules": {},
            "elements": {},
            "classes": {
                "inputEx.CombineField": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/combine/js/combine.js",
            "line": 7
        },
        "inputex-datatable": {
            "name": "inputex-datatable",
            "submodules": {},
            "elements": {},
            "classes": {
                "inputEx.Plugin.InputExDataTable": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/datatable/js/datatable.js",
            "line": 12,
            "description": "The inputex-datatable module provides the inputEx.Plugin.InputExDataTable class which is a plugin."
        },
        "inputex-date": {
            "name": "inputex-date",
            "submodules": {},
            "elements": {},
            "classes": {
                "inputEx.DateField": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/date/js/date.js",
            "line": 6
        },
        "inputex-datepicker": {
            "name": "inputex-datepicker",
            "submodules": {},
            "elements": {},
            "classes": {
                "inputEx.DatePickerField": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/datepicker/js/datepicker.js",
            "line": 6
        },
        "inputex-dateselectmonth": {
            "name": "inputex-dateselectmonth",
            "submodules": {},
            "elements": {},
            "classes": {
                "inputEx.DateSelectMonthField": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/dateselectmonth/js/dateselectmonth.js",
            "line": 7
        },
        "inputex-datesplit": {
            "name": "inputex-datesplit",
            "submodules": {},
            "elements": {},
            "classes": {
                "inputEx.DateSplitField": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/datesplit/js/datesplit.js",
            "line": 7
        },
        "inputex-datetime": {
            "name": "inputex-datetime",
            "submodules": {},
            "elements": {},
            "classes": {
                "inputEx.DateTimeField": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/datetime/js/datetime.js",
            "line": 7
        },
        "inputex-ddlist": {
            "name": "inputex-ddlist",
            "submodules": {},
            "elements": {},
            "classes": {
                "inputEx.DDListField": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/ddlist/js/ddlist.js",
            "line": 9
        },
        "inputex-url": {
            "name": "inputex-url",
            "submodules": {},
            "elements": {},
            "classes": {
                "inputEx.DomainNameField": 1,
                "inputEx.UrlField": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/url/js/url.js",
            "line": 7
        },
        "inputex-dsselect": {
            "name": "inputex-dsselect",
            "submodules": {},
            "elements": {},
            "classes": {
                "inputEx.DSSelectField": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/dsselect/js/dsselect.js",
            "line": 6
        },
        "inputex-email": {
            "name": "inputex-email",
            "submodules": {},
            "elements": {},
            "classes": {
                "inputEx.EmailField": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/email/js/email.js",
            "line": 5
        },
        "inputex-field": {
            "name": "inputex-field",
            "submodules": {},
            "elements": {},
            "classes": {
                "inputEx.constructor": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/field/js/field.js",
            "line": 8,
            "description": "Provides the base \"field\" abstract class"
        },
        "inputex-file": {
            "name": "inputex-file",
            "submodules": {},
            "elements": {},
            "classes": {
                "inputEx.FileField": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/file/js/file.js",
            "line": 6
        },
        "inputex-form": {
            "name": "inputex-form",
            "submodules": {},
            "elements": {},
            "classes": {
                "inputEx.Form": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/form/js/form.js",
            "line": 7
        },
        "inputex-group": {
            "name": "inputex-group",
            "submodules": {},
            "elements": {},
            "classes": {
                "inputEx.Group": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/group/js/group.js",
            "line": 7
        },
        "inputex-hidden": {
            "name": "inputex-hidden",
            "submodules": {},
            "elements": {},
            "classes": {
                "inputEx.HiddenField": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/hidden/js/hidden.js",
            "line": 6
        },
        "inputex-imagecropper": {
            "name": "inputex-imagecropper",
            "submodules": {},
            "elements": {},
            "classes": {
                "inputEx.ImageCropperField": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/imagecropper/js/imagecropper.js",
            "line": 7
        },
        "inputex-inplaceedit": {
            "name": "inputex-inplaceedit",
            "submodules": {},
            "elements": {},
            "classes": {
                "inputEx.InPlaceEdit": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/inplaceedit/js/inplaceedit.js",
            "line": 8
        },
        "inputex": {
            "name": "inputex",
            "submodules": {},
            "elements": {},
            "classes": {
                "inputEx": 1,
                "inputEx.widget": 1,
                "inputEx.mixin": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/inputex/js/inputex.js",
            "line": 106,
            "description": "The inputEx Library"
        },
        "inputex-accent-remover\n\nAs you may guess, this module will help you on the way you will handle your accent.\nThere is a by instance configuration and you can easilly change it. see the example below\n\nex:\n\n var myAccentRemover1 = new Y.inputEx.AccentRemover(); // check the default configuration for 'e' below\n var myAccentRemover2 = new Y.inputEx.AccentRemover();\n myAccentRemover2.conf.e.regexp = /[èêẽēĕėëẻěȅȇẹȩęḙḛềếễểḕḗệḝǝɛ]/gi; // we remove the é in the regexp\n\n myAccentRemover1.removeAccents(\"treétreè\"); // treetree\n myAccentRemover2.removeAccents(\"treétreè\"); // treétree": {
            "name": "inputex-accent-remover\n\nAs you may guess, this module will help you on the way you will handle your accent.\nThere is a by instance configuration and you can easilly change it. see the example below\n\nex:\n\n var myAccentRemover1 = new Y.inputEx.AccentRemover(); // check the default configuration for 'e' below\n var myAccentRemover2 = new Y.inputEx.AccentRemover();\n myAccentRemover2.conf.e.regexp = /[èêẽēĕėëẻěȅȇẹȩęḙḛềếễểḕḗệḝǝɛ]/gi; // we remove the é in the regexp\n\n myAccentRemover1.removeAccents(\"treétreè\"); // treetree\n myAccentRemover2.removeAccents(\"treétreè\"); // treétree",
            "submodules": {},
            "elements": {},
            "classes": {
                "Y.InputexAccentRemover": 1
            },
            "fors": {},
            "namespaces": {
                "Y": 1
            },
            "tag": "module",
            "file": "src/inputex-accent-remover/js/inputex-accent-remover.js",
            "line": 21
        },
        "inputex-integer": {
            "name": "inputex-integer",
            "submodules": {},
            "elements": {},
            "classes": {
                "inputEx.IntegerField": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/integer/js/integer.js",
            "line": 7
        },
        "inputex-ipv4": {
            "name": "inputex-ipv4",
            "submodules": {},
            "elements": {},
            "classes": {
                "inputEx.IPv4Field": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/ipv4/js/ipv4.js",
            "line": 6
        },
        "inputex-jsonschema": {
            "name": "inputex-jsonschema",
            "submodules": {},
            "elements": {},
            "classes": {
                "inputEx.JsonSchema": 1,
                "inputEx.JsonSchema.Builder": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/jsonschema/js/jsonschema.js",
            "line": 171
        },
        "inputex-jsontreeinspector": {
            "name": "inputex-jsontreeinspector",
            "submodules": {},
            "elements": {},
            "classes": {
                "inputEx.widget.JsonTreeInspector": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/jsontreeinspector/js/jsontreeinspector.js",
            "line": 7
        },
        "inputex-keyopvalue": {
            "name": "inputex-keyopvalue",
            "submodules": {},
            "elements": {},
            "classes": {
                "inputEx.KeyOpValueField": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/keyopvalue/js/keyopvalue.js",
            "line": 6
        },
        "inputex-keyvalue": {
            "name": "inputex-keyvalue",
            "submodules": {},
            "elements": {},
            "classes": {
                "inputEx.KeyValueField": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/keyvalue/js/keyvalue.js",
            "line": 6
        },
        "inputex-lens": {
            "name": "inputex-lens",
            "submodules": {},
            "elements": {},
            "classes": {
                "inputEx.Lens": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/lens/js/lens.js",
            "line": 7
        },
        "inputex-linkedcombo": {
            "name": "inputex-linkedcombo",
            "submodules": {},
            "elements": {},
            "classes": {
                "inputEx.LinkedComboField": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/linkedcombo/js/linkedcombo.js",
            "line": 7
        },
        "inputex-list": {
            "name": "inputex-list",
            "submodules": {},
            "elements": {},
            "classes": {
                "inputEx.ListField": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/list/js/list.js",
            "line": 7
        },
        "inputex-map": {
            "name": "inputex-map",
            "submodules": {},
            "elements": {},
            "classes": {
                "inputEx.MapField": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/map/js/map.js",
            "line": 18
        },
        "inputex-menu": {
            "name": "inputex-menu",
            "submodules": {},
            "elements": {},
            "classes": {
                "inputEx.MenuField": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/menu/js/menu.js",
            "line": 11
        },
        "inputex-multiautocomplete": {
            "name": "inputex-multiautocomplete",
            "submodules": {},
            "elements": {},
            "classes": {
                "inputEx.MultiAutoComplete": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/multiautocomplete/js/multiautocomplete.js",
            "line": 7
        },
        "inputex-multiselect": {
            "name": "inputex-multiselect",
            "submodules": {},
            "elements": {},
            "classes": {
                "inputEx.MultiSelectField": 1,
                "Plugin.NodeMenuNavImproved": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/node-menunav-improved/js/node-menunav-improved.js",
            "line": 26
        },
        "inputex-number": {
            "name": "inputex-number",
            "submodules": {},
            "elements": {},
            "classes": {
                "inputEx.NumberField": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/number/js/number.js",
            "line": 7
        },
        "inputex-object": {
            "name": "inputex-object",
            "submodules": {},
            "elements": {},
            "classes": {
                "inputEx.ObjectField": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/object/js/object.js",
            "line": 6
        },
        "inputex-panel": {
            "name": "inputex-panel",
            "submodules": {},
            "elements": {},
            "classes": {
                "inputEx.Panel": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/panel/js/panel.js",
            "line": 9,
            "description": "Provides a Panel widget, a widget that mimics the functionality of a regular OS window.\nComes with Standard Module support, XY Positioning, Alignment Support, Stack (z-index) support,\nmodality, auto-focus and auto-hide functionality, and header/footer button support."
        },
        "inputex-password": {
            "name": "inputex-password",
            "submodules": {},
            "elements": {},
            "classes": {
                "inputEx.PasswordField": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/password/js/password.js",
            "line": 7
        },
        "inputex-phone": {
            "name": "inputex-phone",
            "submodules": {},
            "elements": {},
            "classes": {
                "inputEx.PhoneField": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/phone/js/phone.js",
            "line": 6
        },
        "inputex-radio": {
            "name": "inputex-radio",
            "submodules": {},
            "elements": {},
            "classes": {
                "inputEx.RadioField": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/radio/js/radio.js",
            "line": 7
        },
        "inputex-ratingstars": {
            "name": "inputex-ratingstars",
            "submodules": {},
            "elements": {},
            "classes": {
                "inputEx.RatingStars": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/ratingstars/js/ratingstars.js",
            "line": 7
        },
        "inputex-ratingstarsform": {
            "name": "inputex-ratingstarsform",
            "submodules": {},
            "elements": {},
            "classes": {
                "inputEx.RatingStarsForm": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/ratingstarsform/js/ratingstarsform.js",
            "line": 7
        },
        "inputex-rpc": {
            "name": "inputex-rpc",
            "submodules": {},
            "elements": {},
            "classes": {
                "inputEx.RPC": 1,
                "inputEx.RPC.Service": 1,
                "inputEx.RPC.Transport": 1,
                "inputEx.RPC.Envelope": 1,
                "inputEx.RPC.Envelope.URL": 1,
                "inputEx.RPC.Envelope.PATH": 1,
                "inputEx.RPC.Envelope.JSON": 1,
                "inputEx.RPC.Envelope.JSON-RPC-1.0": 1,
                "inputEx.RPC.Envelope.JSON-RPC-2.0": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/rpc/js/rpc.js",
            "line": 495
        },
        "inputex-rte": {
            "name": "inputex-rte",
            "submodules": {},
            "elements": {},
            "classes": {
                "inputEx.RTEField": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/rte/js/rte.js",
            "line": 9,
            "description": "WARNING: this field requires YUI2 (for the YUI2 Riche Text Editor)"
        },
        "inputex-select": {
            "name": "inputex-select",
            "submodules": {},
            "elements": {},
            "classes": {
                "inputEx.SelectField": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/select/js/select.js",
            "line": 7
        },
        "inputex-serialize": {
            "name": "inputex-serialize",
            "submodules": {},
            "elements": {},
            "classes": {
                "inputEx.SerializeField": 1,
                "inputEx.SerializeField.serializers": 1,
                "inputEx.SerializeField.serializers.json": 1,
                "inputEx.SerializeField.serializers.xml": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/serialize/js/serialize.js",
            "line": 132
        },
        "inputex-slider": {
            "name": "inputex-slider",
            "submodules": {},
            "elements": {},
            "classes": {
                "inputEx.SliderField": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/slider/js/slider.js",
            "line": 6
        },
        "inputex-smdtester": {
            "name": "inputex-smdtester",
            "submodules": {},
            "elements": {},
            "classes": {
                "inputEx.RPC.SMDTester": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/smdtester/js/smdtester.js",
            "line": 6
        },
        "inputex-string": {
            "name": "inputex-string",
            "submodules": {},
            "elements": {},
            "classes": {
                "inputEx.StringField": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/string/js/string.js",
            "line": 7
        },
        "inputex-stringavailability": {
            "name": "inputex-stringavailability",
            "submodules": {},
            "elements": {},
            "classes": {
                "inputEx.StringAvailability": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/stringavailability/js/stringavailability.js",
            "line": 7
        },
        "inputex-textarea": {
            "name": "inputex-textarea",
            "submodules": {},
            "elements": {},
            "classes": {
                "inputEx.Textarea": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/textarea/js/textarea.js",
            "line": 6
        },
        "inputex-textautotag": {
            "name": "inputex-textautotag",
            "submodules": {},
            "elements": {},
            "classes": {
                "inputEx.TextAutoTag": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/textautotag/js/textautotag.js",
            "line": 6
        },
        "inputex-time": {
            "name": "inputex-time",
            "submodules": {},
            "elements": {},
            "classes": {
                "inputEx.TimeField": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/time/js/time.js",
            "line": 7
        },
        "inputex-timeinterval": {
            "name": "inputex-timeinterval",
            "submodules": {},
            "elements": {},
            "classes": {
                "inputEx.TimeIntervalField": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/timeinterval/js/timeinterval.js",
            "line": 6
        },
        "inputex-timerange": {
            "name": "inputex-timerange",
            "submodules": {},
            "elements": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/timerange/js/timerange.js",
            "line": 1
        },
        "inputex-tinymce": {
            "name": "inputex-tinymce",
            "submodules": {},
            "elements": {},
            "classes": {
                "inputEx.TinyMCEField": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/tinymce/js/tinymce.js",
            "line": 7
        },
        "inputex-tree": {
            "name": "inputex-tree",
            "submodules": {},
            "elements": {},
            "classes": {
                "inputEx.TreeField": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/tree/js/tree.js",
            "line": 7
        },
        "inputex-type": {
            "name": "inputex-type",
            "submodules": {},
            "elements": {},
            "classes": {
                "inputEx.TypeField": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/type/js/type.js",
            "line": 7
        },
        "inputex-uneditable": {
            "name": "inputex-uneditable",
            "submodules": {},
            "elements": {},
            "classes": {
                "inputEx.UneditableField": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/uneditable/js/uneditable.js",
            "line": 6
        },
        "inputex-uppercase": {
            "name": "inputex-uppercase",
            "submodules": {},
            "elements": {},
            "classes": {
                "inputEx.UpperCaseField": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/uppercase/js/uppercase.js",
            "line": 7
        },
        "inputex-vector": {
            "name": "inputex-vector",
            "submodules": {},
            "elements": {},
            "classes": {
                "inputEx.VectorField": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/vector/js/vector.js",
            "line": 6
        },
        "inputex-visus": {
            "name": "inputex-visus",
            "submodules": {},
            "elements": {},
            "classes": {
                "inputEx.visus": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/visus/js/visus.js",
            "line": 7,
            "description": "Used by InPlaceEdit and Uneditable fields"
        }
    },
    "classes": {
        "inputEx.AutoComplete": {
            "name": "inputEx.AutoComplete",
            "shortname": "inputEx.AutoComplete",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "inputex-autocomplete",
            "namespace": "",
            "file": "src/autocomplete/js/autocomplete.js",
            "line": 7,
            "description": "An autocomplete field that wraps the YUI autocompleter",
            "is_constructor": 1,
            "extends": "inputEx.StringField",
            "params": [
                {
                    "name": "options",
                    "description": "Added options for Autocompleter\n<ul>\n <li>source: the datasource</li>\n <li>autoComp: autocompleter options</li>\n  <li>returnValue: function to format the returned value (optional)</li>\n</ul>",
                    "type": "Object"
                }
            ]
        },
        "inputEx.Base": {
            "name": "inputEx.Base",
            "shortname": "inputEx.Base",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "inputEx.Panel"
            ],
            "module": "inputex-base",
            "namespace": "",
            "file": "src/base/js/base.js",
            "line": 7,
            "description": "The inputExBase class provides the hideOn attribute which can\nbe used to hide the widget when certain events occur.",
            "params": [
                {
                    "name": "config",
                    "description": "User configuration object",
                    "type": "Object"
                }
            ]
        },
        "inputEx.widget.Button": {
            "name": "inputEx.widget.Button",
            "shortname": "inputEx.widget.Button",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "inputex-button",
            "namespace": "",
            "file": "src/button/js/button.js",
            "line": 7,
            "description": "Create a button",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "The following options are available for Button :\n<ul>\n   <li><b>id</b>: id of the created A element (default is auto-generated)</li>\n   <li><b>className</b>: CSS class added to the button\n       (default is either \"inputEx-Button-Link\" or \"inputEx-Button-Submit-Link\",\n        depending on \"type\")\n   </li>\n   <li><b>parentEl</b>: The DOM element where we should append the button</li>\n   <li><b>type</b>: \"link\", \"submit-link\" or \"submit\"</li>\n   <li><b>value</b>: text displayed inside the button</li>\n   <li><b>disabled</b>: Disable the button after creation</li>\n   <li><b>onClick</b>: Custom click event handler</li>\n</ul>",
                    "type": "Object"
                }
            ]
        },
        "Plugin.CalendarTodayHighlight": {
            "name": "Plugin.CalendarTodayHighlight",
            "shortname": "Plugin.CalendarTodayHighlight",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "inputex-button",
            "namespace": "Plugin",
            "file": "src/calendar-today-highlight-plugin/js/calendar-today-highlight-plugin.js",
            "line": 1,
            "description": "A plugin class which adds week numbers to Calendar.",
            "extends": "Plugin.Base"
        },
        "Plugin.CalendarWeekNumber": {
            "name": "Plugin.CalendarWeekNumber",
            "shortname": "Plugin.CalendarWeekNumber",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "inputex-button",
            "namespace": "Plugin",
            "file": "src/calendar-week-number-plugin/js/calendar-week-number-plugin.js",
            "line": 4,
            "description": "A plugin class which adds week numbers to Calendar.",
            "extends": "Plugin.Base"
        },
        "inputEx.CheckBox": {
            "name": "inputEx.CheckBox",
            "shortname": "inputEx.CheckBox",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "inputex-checkbox",
            "namespace": "",
            "file": "src/checkbox/js/checkbox.js",
            "line": 6,
            "description": "Create a checkbox.",
            "extends": "inputEx.Field",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "Added options for CheckBoxes:\n<ul>\n  <li>sentValues: 2D vector of values for checked/unchecked states (default is [true, false])</li>\n</ul>",
                    "type": "Object"
                }
            ]
        },
        "inputEx.CheckboxMultiState": {
            "name": "inputEx.CheckboxMultiState",
            "shortname": "inputEx.CheckboxMultiState",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "checkbox-multi-state",
            "namespace": "",
            "file": "src/checkbox-multi-state/js/checkbox-multi-state.js",
            "line": 6,
            "description": "Create a checkbox with 3 states (checked, unchecked, middle)",
            "extends": "inputEx.Field",
            "is_constructor": 1
        },
        "inputEx.mixin.choice": {
            "name": "inputEx.mixin.choice",
            "shortname": "inputEx.mixin.choice",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "inputex-choice",
            "namespace": "",
            "file": "src/choice/js/choice.js",
            "line": 7,
            "description": "This static class is used to provide basic choices functionnalities such as in \"select\" and \"radio\" fields\nWe use it by mixin the methods below to the target prototype:\n eg.  Y.mix(inputEx.SelectField.prototype, inputEx.mixin.choice);\nIt provides the following methods : addChoice, removeChoice, removeAllChoices, hideChoice, showChoice,\ndisableChoice, enableChoice, and getChoicePosition"
        },
        "inputEx.ColorField": {
            "name": "inputEx.ColorField",
            "shortname": "inputEx.ColorField",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "inputex-color",
            "namespace": "",
            "file": "src/color/js/color.js",
            "line": 6,
            "description": "Create a Color picker input field",
            "extends": "inputEx.Field",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "Added options for ColorField:\n<ul>\n  <li>colors: list of colors to load as palette</li>\n  <li>palette: default palette to be used (if colors option not provided)</li>\n  <li>cellPerLine: how many colored cells in a row on the palette</li>\n  <li>ratio: screen-like ratio to display the palette, syntax: [with,height], default: [16,9] (if cellPerLine not provided)</li>\n  <li>zIndex: zIndex of the overlay</li>\n</ul>",
                    "type": "Object"
                }
            ]
        },
        "inputEx.CombineField": {
            "name": "inputEx.CombineField",
            "shortname": "inputEx.CombineField",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "inputex-combine",
            "namespace": "",
            "file": "src/combine/js/combine.js",
            "line": 7,
            "description": "A meta field to put N fields on the same line, separated by separators",
            "extends": "inputEx.Group",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "Added options:\n<ul>\n   <li>separators: array of string inserted</li>\n</ul>",
                    "type": "Object"
                }
            ]
        },
        "inputEx.Plugin.InputExDataTable": {
            "name": "inputEx.Plugin.InputExDataTable",
            "shortname": "inputEx.Plugin.InputExDataTable",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "inputex-datatable",
            "namespace": "",
            "file": "src/datatable/js/datatable.js",
            "line": 12,
            "description": "Provide add/modify/delete functionalities on a dataTable as a plugin",
            "extends": "Plugin.Base",
            "is_constructor": 1,
            "params": [
                {
                    "name": "configuration",
                    "description": "object",
                    "type": "Object"
                }
            ]
        },
        "inputEx.DateField": {
            "name": "inputEx.DateField",
            "shortname": "inputEx.DateField",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "inputex-date",
            "namespace": "",
            "file": "src/date/js/date.js",
            "line": 6,
            "description": "A Date Field.",
            "extends": "inputEx.StringField",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "Add the folowing options:\n<ul>\n   <li>dateFormat: Editor format (the one which is presented to the user) default to 'm/d/Y'</li>\n   <li>valueFormat: if falsy, the field will return a javascript Date instance.\n         Otherwise, this format will be used for input parsing/output formatting</li>\n</ul>",
                    "type": "Object"
                }
            ]
        },
        "inputEx.DatePickerField": {
            "name": "inputEx.DatePickerField",
            "shortname": "inputEx.DatePickerField",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "inputex-datepicker",
            "namespace": "",
            "file": "src/datepicker/js/datepicker.js",
            "line": 6,
            "description": "A DatePicker Field.",
            "extends": "inputEx.DateField",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "No added option for this field (same as DateField)\n<ul>\n  <li>calendarOpts: yui calendar configuration object</li>\n  <li>zIndex: calendar overlay zIndex</li>\n</ul>",
                    "type": "Object"
                }
            ]
        },
        "inputEx.DateSelectMonthField": {
            "name": "inputEx.DateSelectMonthField",
            "shortname": "inputEx.DateSelectMonthField",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "inputex-dateselectmonth",
            "namespace": "",
            "file": "src/dateselectmonth/js/dateselectmonth.js",
            "line": 7,
            "description": "A field to enter a date with 2 strings and a select",
            "extends": "inputEx.CombineField"
        },
        "inputEx.DateSplitField": {
            "name": "inputEx.DateSplitField",
            "shortname": "inputEx.DateSplitField",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "inputex-datesplit",
            "namespace": "",
            "file": "src/datesplit/js/datesplit.js",
            "line": 7,
            "description": "inputEx.DateSplitField",
            "extends": "inputEx.CombineField"
        },
        "inputEx.DateTimeField": {
            "name": "inputEx.DateTimeField",
            "shortname": "inputEx.DateTimeField",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "inputex-datetime",
            "namespace": "",
            "file": "src/datetime/js/datetime.js",
            "line": 7,
            "description": "A field limited to number inputs (floating)",
            "extends": "inputEx.CombineField",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "Added options\n<ul>\n   <li>dateFormat: same as DateField (deprecated, use \"dateFieldOptions.dateFormat\" instead)</li>\n   <li>dateFieldOptions: options passed to the datepicker field</li>\n   <li>timeFieldOptions: options passed to the time field</li>\n</ul>",
                    "type": "Object"
                }
            ]
        },
        "inputEx.DDListField": {
            "name": "inputEx.DDListField",
            "shortname": "inputEx.DDListField",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "inputex-ddlist",
            "namespace": "",
            "file": "src/ddlist/js/ddlist.js",
            "line": 9,
            "description": "Create a sortable list field with drag and drop",
            "extends": "inputEx.Field",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "Added options:\n<ul>\n   <li>items: list of option elements configurations</li>\n   <li>name: hidden inputs name</li>\n   <li>valueKey: value key</li>\n   <li>labelKey: label key</li>\n</ul>",
                    "type": "Object"
                }
            ]
        },
        "inputEx.DomainNameField": {
            "name": "inputEx.DomainNameField",
            "shortname": "inputEx.DomainNameField",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "inputex-url",
            "namespace": "",
            "file": "src/domain-name/js/inputex-domain-name.js",
            "line": 8,
            "description": "Simple domain name field",
            "extends": "inputEx.StringField",
            "is_constructor": 1
        },
        "inputEx.DSSelectField": {
            "name": "inputEx.DSSelectField",
            "shortname": "inputEx.DSSelectField",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "inputex-dsselect",
            "namespace": "",
            "file": "src/dsselect/js/dsselect.js",
            "line": 6,
            "description": "Create a select field from a datasource",
            "extends": "inputEx.SelectField",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "Added options:\n<ul>\n     <li>options: list of option elements configurations</li>\n   <li>datasource: the datasource</li>\n   <li>valueKey: value key</li>\n   <li>labelKey: label key</li>\n</ul>",
                    "type": "Object"
                }
            ]
        },
        "inputEx.EmailField": {
            "name": "inputEx.EmailField",
            "shortname": "inputEx.EmailField",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "inputex-email",
            "namespace": "",
            "file": "src/email/js/email.js",
            "line": 5,
            "description": "Field that adds the email regexp for validation. Result is always lower case.",
            "extends": "inputEx.StringField",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "inputEx.Field options object",
                    "type": "Object"
                }
            ]
        },
        "inputEx.constructor": {
            "name": "inputEx.constructor",
            "shortname": "inputEx.constructor",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "inputex-field",
            "namespace": "",
            "file": "src/field/js/field.js",
            "line": 8,
            "description": "An abstract class (never instantiated) that contains the shared features for all fields.",
            "field": "",
            "params": [
                {
                    "name": "options",
                    "description": "Configuration object\n<ul>\n  <li>name: the name of the field</li>\n  <li>required: boolean, the field cannot be null if true</li>\n  <li>className: CSS class name for the div wrapper (default 'inputEx-Field')</li>\n  <li>value: initial value</li>\n  <li>parentEl: HTMLElement or String id, append the field to this DOM element</li>\n</ul>",
                    "type": "Object"
                }
            ]
        },
        "inputEx.FileField": {
            "name": "inputEx.FileField",
            "shortname": "inputEx.FileField",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "inputex-file",
            "namespace": "",
            "file": "src/file/js/file.js",
            "line": 6,
            "description": "Create a file input",
            "extends": "inputEx.Field",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "Added options:\n<ul>\n</ul>",
                    "type": "Object"
                }
            ]
        },
        "inputEx.Form": {
            "name": "inputEx.Form",
            "shortname": "inputEx.Form",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "inputex-form",
            "namespace": "",
            "file": "src/form/js/form.js",
            "line": 7,
            "description": "Create a group of fields within a FORM tag and adds buttons",
            "extends": "inputEx.Group",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "The following options are added for Forms:\n<ul>\n  <li>buttons: list of button definition objects {value: 'Click Me', type: 'submit'}</li>\n  <li>ajax: send the form through an ajax request (submit button should be present):\n      {method: 'POST', uri: 'myScript.php', callback: same as Y.io callback}</li>\n  <li>showMask: adds a mask over the form while the request is running (default is false)</li>\n</ul>",
                    "type": "Object"
                }
            ]
        },
        "inputEx.Group": {
            "name": "inputEx.Group",
            "shortname": "inputEx.Group",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "inputex-group",
            "namespace": "",
            "file": "src/group/js/group.js",
            "line": 7,
            "description": "Handle a group of fields",
            "extends": "inputEx.Field",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "The following options are added for Groups and subclasses:\n<ul>\n  <li>fields: Array of input fields declared like\n      { label: 'Enter the value:' , type: 'text' or fieldClass: inputEx.Field, optional: true/false, ... }\n  </li>\n  <li>legend: The legend for the fieldset (default is an empty string)</li>\n  <li>collapsible: Boolean to make the group collapsible (default is false)</li>\n  <li>collapsed: If collapsible only, will be collapsed at creation (default is false)</li>\n  <li>flatten:</li>\n</ul>",
                    "type": "Object"
                }
            ]
        },
        "inputEx.HiddenField": {
            "name": "inputEx.HiddenField",
            "shortname": "inputEx.HiddenField",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "inputex-hidden",
            "namespace": "",
            "file": "src/hidden/js/hidden.js",
            "line": 6,
            "description": "Create a hidden input, inherits from inputEx.Field",
            "extends": "inputEx.Field",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "inputEx.Field options object",
                    "type": "Object"
                }
            ]
        },
        "inputEx.ImageCropperField": {
            "name": "inputEx.ImageCropperField",
            "shortname": "inputEx.ImageCropperField",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "inputex-imagecropper",
            "namespace": "",
            "file": "src/imagecropper/js/imagecropper.js",
            "line": 7,
            "description": "Basic image cropper field.\nReturns an object with the following properties :\n  - origin <array> [x,y]\n  - size   <array> [width, height]",
            "extends": "inputEx.Field",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "Added options:\n<ul>\n  <li>url: image url</li>\n  <li>ratio: null or array like [width, height]</li>\n  <li>minSize: null or array like [width, height]</li>\n  <li>value: object, initial value. See returned value</li>\n  <li>padding: integer, padding </li>\n</ul>",
                    "type": "Object"
                }
            ]
        },
        "inputEx.InPlaceEdit": {
            "name": "inputEx.InPlaceEdit",
            "shortname": "inputEx.InPlaceEdit",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "inputex-inplaceedit",
            "namespace": "",
            "file": "src/inplaceedit/js/inplaceedit.js",
            "line": 8,
            "description": "Meta field providing in place editing (the editor appears when you click on the formatted value).",
            "extends": "inputEx.Field",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "Added options:\n<ul>\n  <li>visu</li>\n  <li>editorField</li>\n  <li>animColors</li>\n</ul>",
                    "type": "Object"
                }
            ]
        },
        "inputEx": {
            "name": "inputEx",
            "shortname": "inputEx",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "inputex",
            "namespace": "",
            "file": "src/inputex/js/inputex.js",
            "line": 6,
            "description": "The inputEx method lets you create a field from the JSON definition:\n<pre>\n   Y.inputEx({type: 'string', name: 'company', label: 'Your company' })\n</pre>\nBuild a field from an object like: { type: 'color' or fieldClass: inputEx.ColorField, ... }<br />\nIf the neither type or fieldClass are found, it uses inputEx.StringField",
            "itemtype": "method",
            "static": 1,
            "params": [
                {
                    "name": "fieldOptions",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "(optional)",
                    "description": "parentField The parent field instance",
                    "type": "inputEx.Group|inputEx.Form|inputEx.ListField|inputEx.CombineField"
                }
            ],
            "return": {
                "description": "Created field instance",
                "type": "inputEx.Field"
            }
        },
        "inputEx.widget": {
            "name": "inputEx.widget",
            "shortname": "inputEx.widget",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "inputex",
            "namespace": "",
            "file": "src/inputex/js/inputex.js",
            "line": 99,
            "description": "inputEx widget namespace",
            "static": 1
        },
        "inputEx.mixin": {
            "name": "inputEx.mixin",
            "shortname": "inputEx.mixin",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "inputex",
            "namespace": "",
            "file": "src/inputex/js/inputex.js",
            "line": 106,
            "description": "inputEx mixin namespace",
            "static": 1
        },
        "Y.InputexAccentRemover": {
            "name": "Y.InputexAccentRemover",
            "shortname": "Y.InputexAccentRemover",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "inputex-accent-remover\n\nAs you may guess, this module will help you on the way you will handle your accent.\nThere is a by instance configuration and you can easilly change it. see the example below\n\nex:\n\n var myAccentRemover1 = new Y.inputEx.AccentRemover(); // check the default configuration for 'e' below\n var myAccentRemover2 = new Y.inputEx.AccentRemover();\n myAccentRemover2.conf.e.regexp = /[èêẽēĕėëẻěȅȇẹȩęḙḛềếễểḕḗệḝǝɛ]/gi; // we remove the é in the regexp\n\n myAccentRemover1.removeAccents(\"treétreè\"); // treetree\n myAccentRemover2.removeAccents(\"treétreè\"); // treétree",
            "namespace": "Y",
            "file": "src/inputex-accent-remover/js/inputex-accent-remover.js",
            "line": 21,
            "description": "Inputex-accent-remover"
        },
        "inputEx.IntegerField": {
            "name": "inputEx.IntegerField",
            "shortname": "inputEx.IntegerField",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "inputex-integer",
            "namespace": "",
            "file": "src/integer/js/integer.js",
            "line": 7,
            "description": "A field limited to number inputs",
            "extends": "inputEx.StringField",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "Added options:\n<ul>\n   <li>negative: boolean indicating if we accept negative numbers</li>\n</ul>",
                    "type": "Object"
                }
            ]
        },
        "inputEx.IPv4Field": {
            "name": "inputEx.IPv4Field",
            "shortname": "inputEx.IPv4Field",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "inputex-ipv4",
            "namespace": "",
            "file": "src/ipv4/js/ipv4.js",
            "line": 6,
            "description": "Adds an IPv4 address regexp",
            "extends": "inputEx.StringField",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "inputEx.Field options object",
                    "type": "Object"
                }
            ]
        },
        "inputEx.JsonSchema": {
            "name": "inputEx.JsonSchema",
            "shortname": "inputEx.JsonSchema",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "inputex-jsonschema",
            "namespace": "",
            "file": "src/jsonschema/js/jsonschema.js",
            "line": 7,
            "description": "Namespace containing utility functions for conversion between inputEx JSON format and JSON Schema\n\nbased on \"Json Schema Proposal Working Draft\":\nhttp://groups.google.com/group/json-schema/web/json-schema-proposal-working-draft\nThe proposal is still under discussion and the implementation is very minimalist.\n\n\nTODO:\n   - we should provide a lot of json schema examples and instances that should/should not validate\n   - use the $ref (async calls => provide callbacks to methods)\n   - Inheritance\n\nLimitations:\n   - ??? Please do not trust inputEx: the getValue may return a value which do NOT validate the schema (provide an example ?)\n   - no tuple typing for arrays\n   - no \"Union type definition\"",
            "static": 1
        },
        "inputEx.JsonSchema.Builder": {
            "name": "inputEx.JsonSchema.Builder",
            "shortname": "inputEx.JsonSchema.Builder",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "inputex-jsonschema",
            "namespace": "",
            "file": "src/jsonschema/js/jsonschema.js",
            "line": 171
        },
        "inputEx.widget.JsonTreeInspector": {
            "name": "inputEx.widget.JsonTreeInspector",
            "shortname": "inputEx.widget.JsonTreeInspector",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "inputex-jsontreeinspector",
            "namespace": "",
            "file": "src/jsontreeinspector/js/jsontreeinspector.js",
            "line": 7,
            "description": "Create a treeview to inspect a javascript object",
            "is_constructor": 1,
            "params": [
                {
                    "name": "parentEl",
                    "description": "where to append the tree",
                    "type": "String|HTMLElement"
                },
                {
                    "name": "object",
                    "description": "the object to inspect",
                    "type": "Object"
                },
                {
                    "name": "jsonPath",
                    "description": "JSON Path string (optional) (http://code.google.com/p/jsonpath/wiki/Javascript)",
                    "type": "String"
                }
            ]
        },
        "inputEx.KeyOpValueField": {
            "name": "inputEx.KeyOpValueField",
            "shortname": "inputEx.KeyOpValueField",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "inputex-keyopvalue",
            "namespace": "",
            "file": "src/keyopvalue/js/keyopvalue.js",
            "line": 6,
            "description": "Add an SQL operator select field in the middle of a KeyValueField",
            "is_constructor": 1,
            "extends": "inputEx.KeyValueField",
            "params": [
                {
                    "name": "options",
                    "description": "InputEx definition object with the \"availableFields\"",
                    "type": "Object"
                }
            ]
        },
        "inputEx.KeyValueField": {
            "name": "inputEx.KeyValueField",
            "shortname": "inputEx.KeyValueField",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "inputex-keyvalue",
            "namespace": "",
            "file": "src/keyvalue/js/keyvalue.js",
            "line": 6,
            "description": "Display a selectors for keys and auto-update the value field",
            "is_constructor": 1,
            "extends": "inputEx.CombineField",
            "params": [
                {
                    "name": "options",
                    "description": "InputEx definition object with the \"availableFields\"",
                    "type": "Object"
                }
            ]
        },
        "inputEx.Lens": {
            "name": "inputEx.Lens",
            "shortname": "inputEx.Lens",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "inputex-lens",
            "namespace": "",
            "file": "src/lens/js/lens.js",
            "line": 7,
            "description": "Display a group with inplace edit and custom template",
            "extends": "inputEx.Group",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "Added options:\n<ul>\n   <li>lens: html code for the lens. Fields will be displayed in the div elements that has the classname named \"field-(field name)\"</li>\n   <li>visus: list of visualization for each field</li>\n</ul>",
                    "type": "Object"
                }
            ]
        },
        "inputEx.LinkedComboField": {
            "name": "inputEx.LinkedComboField",
            "shortname": "inputEx.LinkedComboField",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "inputex-linkedcombo",
            "namespace": "",
            "file": "src/linkedcombo/js/linkedcombo.js",
            "line": 7,
            "description": "Create a select field",
            "extends": "inputEx.Field",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "Added options:\n<ul>\n   <li>choices: contains the list of nested choices ([{ value: \"\", choices: [\"\"] }, { value: \"BMW Z Series\", choices: [\"Z1\", \"Z3\", \"Z4\", \"Z8\"] }, ...])</li>\n   <li>valueSeperator: </li>\n</ul>",
                    "type": "Object"
                }
            ]
        },
        "inputEx.ListField": {
            "name": "inputEx.ListField",
            "shortname": "inputEx.ListField",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "inputex-list",
            "namespace": "",
            "file": "src/list/js/list.js",
            "line": 7,
            "description": "Meta field to create a list of other fields",
            "extends": "inputEx.Field",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "Added options:\n<ul>\n  <li>sortable: Add arrows to sort the items if true (default false)</li>\n  <li>elementType: an element type definition (default is )</li>\n  <li>useButtons: use buttons instead of links (default false)</li>\n  <li>unique: require values to be unique (default false)</li>\n  <li>listAddLabel: if useButtons is false, text to add an item</li>\n  <li>listRemoveLabel: if useButtons is false, text to remove an item</li>\n  <li>maxItems: maximum number of items (leave undefined if no maximum, default)</li>\n  <li>minItems: minimum number of items to validate (leave undefined if no minimum, default)</li>\n</ul>",
                    "type": "Type: 'string'"
                }
            ]
        },
        "inputEx.MapField": {
            "name": "inputEx.MapField",
            "shortname": "inputEx.MapField",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "inputex-map",
            "namespace": "",
            "file": "src/map/js/map.js",
            "line": 18,
            "description": "Wrapper for Google Maps APIs",
            "extends": "inputEx.Field",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "Added options:\n<ul>\n   <li>lat</li>\n   <li>lon</li>\n   <li>uzoom</li>\n</ul>",
                    "type": "Object"
                }
            ]
        },
        "inputEx.MenuField": {
            "name": "inputEx.MenuField",
            "shortname": "inputEx.MenuField",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "inputex-menu",
            "namespace": "",
            "file": "src/menu/js/menu.js",
            "line": 11,
            "description": "Create a menu field",
            "extends": "inputEx.Field",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "Added options:\n<ul>\n   <li>typeInvite      : text to display when no selection made</li>\n   <li>menuItems       : contains descriptions of menu items</li>\n   <li>menuTrigger     : (optional, default: 'click') event to trigger menu show, ex: mouseover</li>\n   <li>menuOrientation : (optional, default: 'vertical') menu orientation, ex: 'horizontal'</li>\n   <li>menuConfig      : (optional) object used as a config for the MenuNav node plugin</li>\n   <li>constrained     : (optional) boolean to specify if menu panels should be constrained to the viewport</li>\n</ul>",
                    "type": "Object"
                }
            ]
        },
        "inputEx.MultiAutoComplete": {
            "name": "inputEx.MultiAutoComplete",
            "shortname": "inputEx.MultiAutoComplete",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "inputex-multiautocomplete",
            "namespace": "",
            "file": "src/multiautocomplete/js/multiautocomplete.js",
            "line": 7,
            "description": "Create a multi autocomplete field",
            "extends": "inputEx.AutoComplete",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "Added options:\n<ul>\n</ul>",
                    "type": "Object"
                }
            ]
        },
        "inputEx.MultiSelectField": {
            "name": "inputEx.MultiSelectField",
            "shortname": "inputEx.MultiSelectField",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "inputex-multiselect",
            "namespace": "",
            "file": "src/multiselect/js/multiselect.js",
            "line": 7,
            "description": "Create a multi select field",
            "extends": "inputEx.DDListField",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "Added options:\n<ul>\n   <li>choices: contains the list of choices configs ([{value:'usa'}, {value:'fr', label:'France'}])</li>\n</ul>",
                    "type": "Object"
                }
            ]
        },
        "Plugin.NodeMenuNavImproved": {
            "name": "Plugin.NodeMenuNavImproved",
            "shortname": "Plugin.NodeMenuNavImproved",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "inputex-multiselect",
            "namespace": "",
            "file": "src/node-menunav-improved/js/node-menunav-improved.js",
            "line": 26,
            "description": "Y.Plugin.NodeMenuNavImproved is a subclass of Y.Plugin.NodeMenuNav which\ndisplay scroll bars on menu nodes taller than the viewport.",
            "extends": "Plugin.NodeMenuNav",
            "is_constructor": 1
        },
        "inputEx.NumberField": {
            "name": "inputEx.NumberField",
            "shortname": "inputEx.NumberField",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "inputex-number",
            "namespace": "",
            "file": "src/number/js/number.js",
            "line": 7,
            "description": "A field limited to number inputs (floating)",
            "extends": "inputEx.StringField",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "inputEx.Field options object",
                    "type": "Object"
                }
            ]
        },
        "inputEx.ObjectField": {
            "name": "inputEx.ObjectField",
            "shortname": "inputEx.ObjectField",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "inputex-object",
            "namespace": "",
            "file": "src/object/js/object.js",
            "line": 6,
            "description": "list of PairField where where the returned value is converted to an object",
            "extends": "inputEx.ListField",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "inputEx.Field options object",
                    "type": "Object"
                }
            ]
        },
        "inputEx.Panel": {
            "name": "inputEx.Panel",
            "shortname": "inputEx.Panel",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "inputex-panel",
            "namespace": "",
            "file": "src/panel/js/panel.js",
            "line": 9,
            "description": "A basic Panel Widget, with added support from inputEx.Base",
            "is_constructor": 1,
            "extends": "Panel",
            "uses": [
                "inputEx.Base"
            ],
            "params": [
                {
                    "name": "object",
                    "description": "The user configuration for the instance.",
                    "type": "Object"
                }
            ]
        },
        "inputEx.PasswordField": {
            "name": "inputEx.PasswordField",
            "shortname": "inputEx.PasswordField",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "inputex-password",
            "namespace": "",
            "file": "src/password/js/password.js",
            "line": 7,
            "description": "Create a password field.",
            "extends": "inputEx.StringField",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "inputEx.Field options object\n<ul>\n  <li>confirmPasswordField: the PasswordField instance to compare to when using 2 password fields\n      for password creation (please use the setConfirmationField method)</li>\n  <li>strengthIndicator: display a widget to indicate password strength (default false)</li>\n  <li>capsLockWarning: display a warning if CapsLock is on (default false)</li>\n  <li>confirm: id of the field to compare to</li>\n</ul>",
                    "type": "Object"
                }
            ]
        },
        "inputEx.PhoneField": {
            "name": "inputEx.PhoneField",
            "shortname": "inputEx.PhoneField",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "inputex-phone",
            "namespace": "",
            "file": "src/phone/js/phone.js",
            "line": 6,
            "description": "Create a phone input field",
            "extends": "inputEx.Field",
            "is_constructor": 1
        },
        "inputEx.RadioField": {
            "name": "inputEx.RadioField",
            "shortname": "inputEx.RadioField",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "inputex-radio",
            "namespace": "",
            "file": "src/radio/js/radio.js",
            "line": 7,
            "description": "Create a radio button. Here are the added options :\n<ul>\n  <li>choices: list of choices (array of string)</li>\n  <li>values: list of returned values (array )</li>\n  <li>allowAny: add an option with a string field</li>\n</ul>",
            "extends": "inputEx.Field",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "inputEx.Field options object",
                    "type": "Object"
                }
            ]
        },
        "inputEx.RatingStars": {
            "name": "inputEx.RatingStars",
            "shortname": "inputEx.RatingStars",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "inputex-ratingstars",
            "namespace": "",
            "file": "src/ratingstars/js/ratingstars.js",
            "line": 7,
            "description": "Create a star rating Field\nThis field has been made by integrating script from http://www.unessa.net/en/hoyci/projects/yui-star-rating/\nTo use it with auto data sending, use RatingStars",
            "extends": "inputEx.Field",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "The following options are added for RatingStars :\n<ul>\n <li><b>averageValue</b>: average value before clicking, must be a float number</li>\n <li><b>nRates</b>: numbers of vote</li>\n <li><b>disableRate</b>: Disable the rate but show stars</li>\n <li><b>nStars</b>: <i>integer</i> number of stars (default : 5) </li>\n <li><b>disabled</b>: disable voting  </li>\n <li><b>message</b>: <i>string</i> C-like with % convention string for display Message (default 'Rating: % (% votes cast)') </li>\n <li><b>disableMessage</b>: <i>string</i> String to show when mouse pass hover the stars and stars are disabled</li>\n</ul>",
                    "type": "Object"
                }
            ]
        },
        "inputEx.RatingStarsForm": {
            "name": "inputEx.RatingStarsForm",
            "shortname": "inputEx.RatingStarsForm",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "inputex-ratingstarsform",
            "namespace": "",
            "file": "src/ratingstarsform/js/ratingstarsform.js",
            "line": 7,
            "description": "Create a custom Form that use RatingStars and send it automatically",
            "extends": "inputEx.Form",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "The following options are added for RatingStarsForm :\n<ul>\n <li><b>ratingStarsOptions</b>: see inputEx.RatingStars</li>\n</ul>\n<p>The classical Form options may have no sens here</p>",
                    "type": "Object"
                }
            ]
        },
        "inputEx.RPC": {
            "name": "inputEx.RPC",
            "shortname": "inputEx.RPC",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "inputex-rpc",
            "namespace": "",
            "file": "src/rpc/js/rpc.js",
            "line": 7,
            "description": "inputEx RPC utility functions\nImplements SMD and create forms directly from services",
            "static": 1
        },
        "inputEx.RPC.Service": {
            "name": "inputEx.RPC.Service",
            "shortname": "inputEx.RPC.Service",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "inputex-rpc",
            "namespace": "",
            "file": "src/rpc/js/rpc.js",
            "line": 101,
            "description": "Provide SMD support \nhttp://groups.google.com/group/json-schema/web/service-mapping-description-proposal\nNot implemented: REST envelope, TCP/IP transport\nTake a string as a url to retrieve an smd or an object that is an smd or partial smd to use \nas a definition for the service",
            "is_constructor": 1
        },
        "inputEx.RPC.Transport": {
            "name": "inputEx.RPC.Transport",
            "shortname": "inputEx.RPC.Transport",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "inputex-rpc",
            "namespace": "",
            "file": "src/rpc/js/rpc.js",
            "line": 285,
            "description": "inputEx.RPC.Transport",
            "static": 1
        },
        "inputEx.RPC.Envelope": {
            "name": "inputEx.RPC.Envelope",
            "shortname": "inputEx.RPC.Envelope",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "inputex-rpc",
            "namespace": "",
            "file": "src/rpc/js/rpc.js",
            "line": 359,
            "description": "inputEx.RPC.Envelope",
            "static": 1
        },
        "inputEx.RPC.Envelope.URL": {
            "name": "inputEx.RPC.Envelope.URL",
            "shortname": "inputEx.RPC.Envelope.URL",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "inputex-rpc",
            "namespace": "",
            "file": "src/rpc/js/rpc.js",
            "line": 366,
            "description": "URL envelope",
            "static": 1
        },
        "inputEx.RPC.Envelope.PATH": {
            "name": "inputEx.RPC.Envelope.PATH",
            "shortname": "inputEx.RPC.Envelope.PATH",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "inputex-rpc",
            "namespace": "",
            "file": "src/rpc/js/rpc.js",
            "line": 405,
            "description": "PATH envelope",
            "static": 1
        },
        "inputEx.RPC.Envelope.JSON": {
            "name": "inputEx.RPC.Envelope.JSON",
            "shortname": "inputEx.RPC.Envelope.JSON",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "inputex-rpc",
            "namespace": "",
            "file": "src/rpc/js/rpc.js",
            "line": 442,
            "description": "JSON envelope",
            "static": 1
        },
        "inputEx.RPC.Envelope.JSON-RPC-1.0": {
            "name": "inputEx.RPC.Envelope.JSON-RPC-1.0",
            "shortname": "inputEx.RPC.Envelope.JSON-RPC-1.0",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "inputex-rpc",
            "namespace": "",
            "file": "src/rpc/js/rpc.js",
            "line": 466,
            "description": "JSON-RPC-1.0 envelope",
            "static": 1
        },
        "inputEx.RPC.Envelope.JSON-RPC-2.0": {
            "name": "inputEx.RPC.Envelope.JSON-RPC-2.0",
            "shortname": "inputEx.RPC.Envelope.JSON-RPC-2.0",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "inputex-rpc",
            "namespace": "",
            "file": "src/rpc/js/rpc.js",
            "line": 495,
            "description": "JSON-RPC-2.0 envelope",
            "static": 1
        },
        "inputEx.RTEField": {
            "name": "inputEx.RTEField",
            "shortname": "inputEx.RTEField",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "inputex-rte",
            "namespace": "",
            "file": "src/rte/js/rte.js",
            "line": 9,
            "description": "Wrapper for the Rich Text Editor from YUI",
            "extends": "inputEx.Field",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "Added options:\n<ul>\n  <li>opts: the options to be added when calling the RTE constructor (see YUI RTE)</li>\n  <li>editorType: if == 'simple', the field will use the SimpleEditor. Any other value will use the Editor class.</li>\n</ul>",
                    "type": "Object"
                }
            ]
        },
        "inputEx.SelectField": {
            "name": "inputEx.SelectField",
            "shortname": "inputEx.SelectField",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "inputex-select",
            "namespace": "",
            "file": "src/select/js/select.js",
            "line": 7,
            "description": "Create a select field",
            "extends": "inputEx.Field",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "Added options:\n<ul>\n   <li>choices: contains the list of choices configs ([{value:'usa'}, {value:'fr', label:'France'}])</li>\n</ul>",
                    "type": "Object"
                }
            ]
        },
        "inputEx.SerializeField": {
            "name": "inputEx.SerializeField",
            "shortname": "inputEx.SerializeField",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "inputex-serialize",
            "namespace": "",
            "file": "src/serialize/js/serialize.js",
            "line": 6,
            "description": "SerializeField allows to serialize/deserialize a complex sub-group to a string",
            "extends": "inputEx.Field",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "Standard inputEx options definition",
                    "type": "Object"
                }
            ]
        },
        "inputEx.SerializeField.serializers": {
            "name": "inputEx.SerializeField.serializers",
            "shortname": "inputEx.SerializeField.serializers",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "inputex-serialize",
            "namespace": "",
            "file": "src/serialize/js/serialize.js",
            "line": 99,
            "description": "Default serializers for the SerializeField",
            "static": 1
        },
        "inputEx.SerializeField.serializers.json": {
            "name": "inputEx.SerializeField.serializers.json",
            "shortname": "inputEx.SerializeField.serializers.json",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "inputex-serialize",
            "namespace": "",
            "file": "src/serialize/js/serialize.js",
            "line": 106,
            "description": "JSON Serializer",
            "static": 1
        },
        "inputEx.SerializeField.serializers.xml": {
            "name": "inputEx.SerializeField.serializers.xml",
            "shortname": "inputEx.SerializeField.serializers.xml",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "inputex-serialize",
            "namespace": "",
            "file": "src/serialize/js/serialize.js",
            "line": 132,
            "description": "XML Serializer (uses the ObjTree library)",
            "static": 1
        },
        "inputEx.SliderField": {
            "name": "inputEx.SliderField",
            "shortname": "inputEx.SliderField",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "inputex-slider",
            "namespace": "",
            "file": "src/slider/js/slider.js",
            "line": 6,
            "description": "Create a slider using YUI widgets",
            "extends": "inputEx.Field",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "inputEx.Field options object",
                    "type": "Object"
                }
            ]
        },
        "inputEx.RPC.SMDTester": {
            "name": "inputEx.RPC.SMDTester",
            "shortname": "inputEx.RPC.SMDTester",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "inputex-smdtester",
            "namespace": "",
            "file": "src/smdtester/js/smdtester.js",
            "line": 6,
            "description": "Creates a form to test various SMD files"
        },
        "inputEx.StringField": {
            "name": "inputEx.StringField",
            "shortname": "inputEx.StringField",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "inputex-string",
            "namespace": "",
            "file": "src/string/js/string.js",
            "line": 7,
            "description": "Basic string field (equivalent to the input type \"text\")",
            "extends": "inputEx.Field",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "Added options:\n<ul>\n  <li>regexp: regular expression used to validate (otherwise it always validate)</li>\n  <li>size: size attribute of the input</li>\n  <li>maxLength: maximum size of the string field (no message display, uses the maxlength html attribute)</li>\n  <li>minLength: minimum size of the string field (will display an error message if shorter)</li>\n  <li>placeholder: string displayed when the field is empty</li>\n  <li>readonly: set the field as readonly</li>\n</ul>",
                    "type": "Object"
                }
            ]
        },
        "inputEx.StringAvailability": {
            "name": "inputEx.StringAvailability",
            "shortname": "inputEx.StringAvailability",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "inputex-stringavailability",
            "namespace": "",
            "file": "src/stringavailability/js/stringavailability.js",
            "line": 7,
            "description": "String field that sends an Ajax request to check if it is available\nit can be useful for email availability for example",
            "extends": "inputEx.StringField",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ]
        },
        "inputEx.Textarea": {
            "name": "inputEx.Textarea",
            "shortname": "inputEx.Textarea",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "inputex-textarea",
            "namespace": "",
            "file": "src/textarea/js/textarea.js",
            "line": 6,
            "description": "Create a textarea input",
            "extends": "inputEx.Field",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "Added options:\n<ul>\n   <li>rows: rows attribute</li>\n   <li>cols: cols attribute</li>\n</ul>",
                    "type": "Object"
                }
            ]
        },
        "inputEx.TextAutoTag": {
            "name": "inputEx.TextAutoTag",
            "shortname": "inputEx.TextAutoTag",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "inputex-textautotag",
            "namespace": "",
            "file": "src/textautotag/js/textautotag.js",
            "line": 6,
            "description": "Create a textarea input",
            "extends": "inputEx.Textarea",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "Added options:\n<ul>\n   <li>rows: rows attribute</li>\n   <li>cols: cols attribute</li>\n</ul>",
                    "type": "Object"
                }
            ]
        },
        "inputEx.TimeField": {
            "name": "inputEx.TimeField",
            "shortname": "inputEx.TimeField",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "inputex-time",
            "namespace": "",
            "file": "src/time/js/time.js",
            "line": 7,
            "description": "A field limited to number inputs (floating)",
            "extends": "inputEx.CombineField",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "inputEx.Field options object",
                    "type": "Object"
                }
            ]
        },
        "inputEx.TimeIntervalField": {
            "name": "inputEx.TimeIntervalField",
            "shortname": "inputEx.TimeIntervalField",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "inputex-timeinterval",
            "namespace": "",
            "file": "src/timeinterval/js/timeinterval.js",
            "line": 6,
            "description": "A field limited to number inputs (floating)",
            "extends": "inputEx.CombineField",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "Added options\n<ul>\n   <li>unit: inputEx.TimeIntervalField.units.MYUNIT (SECOND,MINUTE,HOUR,DAY,MONTH,YEAR)</li>\n</ul>",
                    "type": "Object"
                }
            ]
        },
        "inputEx.TinyMCEField": {
            "name": "inputEx.TinyMCEField",
            "shortname": "inputEx.TinyMCEField",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "inputex-tinymce",
            "namespace": "",
            "file": "src/tinymce/js/tinymce.js",
            "line": 7,
            "description": "Wrapper for the TinyMCE Editor",
            "extends": "inputEx.Field",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "Added options:\n<ul>\n  <li>opts: the options to be added when calling the TinyMCE constructor</li>\n</ul>",
                    "type": "Object"
                }
            ]
        },
        "inputEx.TreeField": {
            "name": "inputEx.TreeField",
            "shortname": "inputEx.TreeField",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "inputex-tree",
            "namespace": "",
            "file": "src/tree/js/tree.js",
            "line": 7,
            "description": "Meta field to create trees",
            "extends": "inputEx.ListField",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "inputEx.Field options object",
                    "type": "Object"
                }
            ]
        },
        "inputEx.TypeField": {
            "name": "inputEx.TypeField",
            "shortname": "inputEx.TypeField",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "inputex-type",
            "namespace": "",
            "file": "src/type/js/type.js",
            "line": 7,
            "description": "TypeField is a field to create fields. The user can create any value he wants by switching fields.",
            "extends": "inputEx.Field",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "Standard inputEx options definition",
                    "type": "Object"
                }
            ]
        },
        "inputEx.UneditableField": {
            "name": "inputEx.UneditableField",
            "shortname": "inputEx.UneditableField",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "inputex-uneditable",
            "namespace": "",
            "file": "src/uneditable/js/uneditable.js",
            "line": 6,
            "description": "Create a uneditable field where you can stick the html you want\nAdded Options:\n<ul>\n   <li>visu: inputEx visu type</li>\n</ul>",
            "extends": "inputEx.Field",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "inputEx.Field options object",
                    "type": "Object"
                }
            ]
        },
        "inputEx.UpperCaseField": {
            "name": "inputEx.UpperCaseField",
            "shortname": "inputEx.UpperCaseField",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "inputex-uppercase",
            "namespace": "",
            "file": "src/uppercase/js/uppercase.js",
            "line": 7,
            "description": "A field where the value is always uppercase",
            "extends": "inputEx.StringField",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "inputEx.Field options object",
                    "type": "Object"
                }
            ]
        },
        "inputEx.UrlField": {
            "name": "inputEx.UrlField",
            "shortname": "inputEx.UrlField",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "inputex-url",
            "namespace": "",
            "file": "src/url/js/url.js",
            "line": 7,
            "description": "Adds an url regexp, and display the favicon at this url",
            "extends": "inputEx.StringField",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "inputEx.Field options object\n<ul>\n  <li>favicon: boolean whether the domain favicon.ico should be displayed or not (default is true, except for https)</li>\n</ul>",
                    "type": "Object"
                }
            ]
        },
        "inputEx.VectorField": {
            "name": "inputEx.VectorField",
            "shortname": "inputEx.VectorField",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "inputex-vector",
            "namespace": "",
            "file": "src/vector/js/vector.js",
            "line": 6,
            "description": "A field limited to number inputs (floating)",
            "extends": "inputEx.Field",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "inputEx.Field options object",
                    "type": "Object"
                }
            ]
        },
        "inputEx.visus": {
            "name": "inputEx.visus",
            "shortname": "inputEx.visus",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "inputex-visus",
            "namespace": "",
            "file": "src/visus/js/visus.js",
            "line": 7,
            "description": "Contains the various visualization methods",
            "static": 1
        }
    },
    "elements": {},
    "classitems": [
        {
            "file": "src/autocomplete/js/autocomplete.js",
            "line": 25,
            "description": "Adds autocomplete options",
            "itemtype": "method",
            "name": "setOptions",
            "params": [
                {
                    "name": "options",
                    "description": "Options object as passed to the constructor",
                    "type": "Object"
                }
            ],
            "class": "inputEx.AutoComplete",
            "module": "inputex-autocomplete"
        },
        {
            "file": "src/autocomplete/js/autocomplete.js",
            "line": 41,
            "description": "Custom event init\n<ul>\n  <li>listen to autocompleter textboxBlurEvent instead of this.el \"blur\" event</li>\n  <li>listener to autocompleter textboxBlurEvent added in buildAutocomplete method</li>\n</ul>",
            "itemtype": "method",
            "name": "initEvents",
            "class": "inputEx.AutoComplete",
            "module": "inputex-autocomplete"
        },
        {
            "file": "src/autocomplete/js/autocomplete.js",
            "line": 62,
            "description": "Render the hidden list element",
            "itemtype": "method",
            "name": "renderComponent",
            "class": "inputEx.AutoComplete",
            "module": "inputex-autocomplete"
        },
        {
            "file": "src/autocomplete/js/autocomplete.js",
            "line": 113,
            "description": "Build the YUI autocompleter",
            "itemtype": "method",
            "name": "buildAutocomplete",
            "class": "inputEx.AutoComplete",
            "module": "inputex-autocomplete"
        },
        {
            "file": "src/autocomplete/js/autocomplete.js",
            "line": 131,
            "description": "itemSelect handler",
            "itemtype": "method",
            "name": "itemSelectHandler",
            "params": [
                {
                    "name": "sType",
                    "description": ""
                },
                {
                    "name": "aArgs",
                    "description": ""
                }
            ],
            "class": "inputEx.AutoComplete",
            "module": "inputex-autocomplete"
        },
        {
            "file": "src/autocomplete/js/autocomplete.js",
            "line": 142,
            "itemtype": "method",
            "name": "onBlur",
            "class": "inputEx.AutoComplete",
            "module": "inputex-autocomplete"
        },
        {
            "file": "src/autocomplete/js/autocomplete.js",
            "line": 171,
            "description": "Set the value",
            "itemtype": "method",
            "name": "setValue",
            "params": [
                {
                    "name": "value",
                    "description": "Value to set",
                    "type": "Any"
                },
                {
                    "name": "sendUpdatedEvt",
                    "description": "(optional) Wether this setValue should fire the updated event or not (default is true, pass false to NOT send the event)",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "inputEx.AutoComplete",
            "module": "inputex-autocomplete"
        },
        {
            "file": "src/autocomplete/js/autocomplete.js",
            "line": 184,
            "description": "Return the hidden value (stored in a hidden input)",
            "itemtype": "method",
            "name": "getValue",
            "class": "inputEx.AutoComplete",
            "module": "inputex-autocomplete"
        },
        {
            "file": "src/base/js/base.js",
            "line": 26,
            "description": "inputEx json configuration",
            "itemtype": "attribute",
            "name": "inputEx",
            "type": "Object",
            "class": "inputEx.Base",
            "module": "inputex-base"
        },
        {
            "file": "src/base/js/base.js",
            "line": 36,
            "description": "Instantiated inputEx field (any type)",
            "itemtype": "attribute",
            "name": "field",
            "type": "inputEx.Field",
            "class": "inputEx.Base",
            "module": "inputex-base"
        },
        {
            "file": "src/base/js/base.js",
            "line": 48,
            "itemtype": "method",
            "name": "_renderUIInputEx",
            "access": "private",
            "tagname": "",
            "class": "inputEx.Base",
            "module": "inputex-base"
        },
        {
            "file": "src/base/js/base.js",
            "line": 58,
            "itemtype": "method",
            "name": "_bindUIInputEx",
            "access": "private",
            "tagname": "",
            "class": "inputEx.Base",
            "module": "inputex-base"
        },
        {
            "file": "src/button/js/button.js",
            "line": 38,
            "description": "set the default options",
            "itemtype": "method",
            "name": "setOptions",
            "class": "inputEx.widget.Button",
            "module": "inputex-button"
        },
        {
            "file": "src/button/js/button.js",
            "line": 66,
            "description": "render the button into the parent Element",
            "itemtype": "method",
            "name": "render",
            "params": [
                {
                    "name": "parentEl",
                    "description": "The DOM element where the button should be rendered",
                    "type": "DOMElement"
                }
            ],
            "return": {
                "description": "The created button",
                "type": "DOMElement"
            },
            "class": "inputEx.widget.Button",
            "module": "inputex-button"
        },
        {
            "file": "src/button/js/button.js",
            "line": 103,
            "description": "attach the listeners on \"click\" event and create the custom events",
            "itemtype": "method",
            "name": "initEvents",
            "class": "inputEx.widget.Button",
            "module": "inputex-button"
        },
        {
            "file": "src/button/js/button.js",
            "line": 109,
            "description": "Click Event facade (YUI3 published event)",
            "itemtype": "event",
            "name": "click",
            "class": "inputEx.widget.Button",
            "module": "inputex-button"
        },
        {
            "file": "src/button/js/button.js",
            "line": 115,
            "description": "Submit Event facade (YUI3 published event)",
            "itemtype": "event",
            "name": "submit",
            "class": "inputEx.widget.Button",
            "module": "inputex-button"
        },
        {
            "file": "src/button/js/button.js",
            "line": 159,
            "description": "Disable the button",
            "itemtype": "method",
            "name": "disable",
            "class": "inputEx.widget.Button",
            "module": "inputex-button"
        },
        {
            "file": "src/button/js/button.js",
            "line": 174,
            "description": "Enable the button",
            "itemtype": "method",
            "name": "enable",
            "class": "inputEx.widget.Button",
            "module": "inputex-button"
        },
        {
            "file": "src/button/js/button.js",
            "line": 190,
            "description": "Purge all event listeners and remove the component from the dom",
            "itemtype": "method",
            "name": "destroy",
            "class": "inputEx.widget.Button",
            "module": "inputex-button"
        },
        {
            "file": "src/calendar-today-highlight-plugin/js/calendar-today-highlight-plugin.js",
            "line": 12,
            "description": "The namespace for the plugin. This will be the property on the widget, which will\nreference the plugin instance, when it's plugged in.",
            "itemtype": "property",
            "name": "NS",
            "static": 1,
            "type": "String",
            "default": "\"week_number\"",
            "class": "Plugin.CalendarTodayHighlight",
            "module": "inputex-button",
            "namespace": "Plugin"
        },
        {
            "file": "src/calendar-today-highlight-plugin/js/calendar-today-highlight-plugin.js",
            "line": 26,
            "description": "The initializer lifecycle implementation. Modifies the host widget's\nrender to add navigation controls.",
            "itemtype": "method",
            "name": "initializer",
            "params": [
                {
                    "name": "config",
                    "description": "The user configuration for the plugin",
                    "type": "Object"
                }
            ],
            "class": "Plugin.CalendarTodayHighlight",
            "module": "inputex-button",
            "namespace": "Plugin"
        },
        {
            "file": "src/calendar-today-highlight-plugin/js/calendar-today-highlight-plugin.js",
            "line": 53,
            "description": "The initializer destructor implementation. Responsible for destroying the initialized\ncontrol mechanisms.",
            "itemtype": "method",
            "name": "destructor",
            "class": "Plugin.CalendarTodayHighlight",
            "module": "inputex-button",
            "namespace": "Plugin"
        },
        {
            "file": "src/calendar-week-number-plugin/js/calendar-week-number-plugin.js",
            "line": 15,
            "description": "The namespace for the plugin. This will be the property on the widget, which will\nreference the plugin instance, when it's plugged in.",
            "itemtype": "property",
            "name": "NS",
            "static": 1,
            "type": "String",
            "default": "\"week_number\"",
            "class": "Plugin.CalendarWeekNumber",
            "module": "inputex-button",
            "namespace": "Plugin"
        },
        {
            "file": "src/calendar-week-number-plugin/js/calendar-week-number-plugin.js",
            "line": 37,
            "description": "The initializer lifecycle implementation. Modifies the host widget's\nrender to add navigation controls.",
            "itemtype": "method",
            "name": "initializer",
            "params": [
                {
                    "name": "config",
                    "description": "The user configuration for the plugin",
                    "type": "Object"
                }
            ],
            "class": "Plugin.CalendarWeekNumber",
            "module": "inputex-button",
            "namespace": "Plugin"
        },
        {
            "file": "src/calendar-week-number-plugin/js/calendar-week-number-plugin.js",
            "line": 68,
            "description": "The initializer destructor implementation. Responsible for destroying the initialized\ncontrol mechanisms.",
            "itemtype": "method",
            "name": "destructor",
            "class": "Plugin.CalendarWeekNumber",
            "module": "inputex-button",
            "namespace": "Plugin"
        },
        {
            "file": "src/calendar-week-number-plugin/js/calendar-week-number-plugin.js",
            "line": 149,
            "description": "Calculates the week number for the given date. Can currently support standard\nU.S. week numbers, based on Jan 1st defining the 1st week of the year, and\nISO8601 week numbers, based on Jan 4th defining the 1st week of the year.",
            "itemtype": "method",
            "name": "getWeekNumber",
            "params": [
                {
                    "name": "date",
                    "description": "The JavaScript date for which to find the week number",
                    "type": "Date"
                },
                {
                    "name": "firstDayOfWeek",
                    "description": "The index of the first day of the week (0 = Sun, 1 = Mon ... 6 = Sat).\nDefaults to 0",
                    "type": "Number"
                },
                {
                    "name": "janDate",
                    "description": "The date in the first week of January which defines week one for the year\nDefaults to the value of CalendarWeekNumber.WEEK_ONE_JAN_DATE, which is 1 (Jan 1st).\nFor the U.S, this is normally Jan 1st. ISO8601 uses Jan 4th to define the first week of the year.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The number of the week containing the given date.",
                "type": "Number"
            },
            "class": "Plugin.CalendarWeekNumber",
            "module": "inputex-button",
            "namespace": "Plugin"
        },
        {
            "file": "src/calendar-week-number-plugin/js/calendar-week-number-plugin.js",
            "line": 207,
            "description": "Clears the time fields from a given date, effectively setting the time to 12 noon.",
            "itemtype": "method",
            "name": "clearTime",
            "params": [
                {
                    "name": "date",
                    "description": "The JavaScript Date for which the time fields will be cleared",
                    "type": "Date"
                }
            ],
            "return": {
                "description": "The JavaScript Date cleared of all time fields",
                "type": "Date"
            },
            "class": "Plugin.CalendarWeekNumber",
            "module": "inputex-button",
            "namespace": "Plugin"
        },
        {
            "file": "src/calendar-week-number-plugin/js/calendar-week-number-plugin.js",
            "line": 218,
            "description": "Returns a new JavaScript Date object, representing the given year, month and date. Time fields (hr, min, sec, ms) on the new Date object\nare set to 0. The method allows Date instances to be created with the a year less than 100. \"new Date(year, month, date)\" implementations\nset the year to 19xx if a year (xx) which is less than 100 is provided.\n<p>\n<em>NOTE:</em>Validation on argument values is not performed. It is the caller's responsibility to ensure\narguments are valid as per the ECMAScript-262 Date object specification for the new Date(year, month[, date]) constructor.\n</p>",
            "itemtype": "method",
            "name": "getDate",
            "params": [
                {
                    "name": "y",
                    "description": "Year.",
                    "type": "Number"
                },
                {
                    "name": "m",
                    "description": "Month index from 0 (Jan) to 11 (Dec).",
                    "type": "Number"
                },
                {
                    "name": "d",
                    "description": "(optional) Date from 1 to 31. If not provided, defaults to 1.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The JavaScript date object with year, month, date set as provided.",
                "type": "Date"
            },
            "class": "Plugin.CalendarWeekNumber",
            "module": "inputex-button",
            "namespace": "Plugin"
        },
        {
            "file": "src/calendar-week-number-plugin/js/calendar-week-number-plugin.js",
            "line": 249,
            "description": "Get the first day of the week, for the given date.",
            "itemtype": "method",
            "name": "getFirstDayOfWeek",
            "params": [
                {
                    "name": "dt",
                    "description": "The date in the week for which the first day is required.",
                    "type": "Date"
                },
                {
                    "name": "startOfWeek",
                    "description": "The index for the first day of the week, 0 = Sun, 1 = Mon ... 6 = Sat (defaults to 0)",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The first day of the week",
                "type": "Date"
            },
            "class": "Plugin.CalendarWeekNumber",
            "module": "inputex-button",
            "namespace": "Plugin"
        },
        {
            "file": "src/calendar-year-navigator-plugin/js/calendar-year-navigator-plugin.js",
            "line": 26,
            "description": "Prepare the panel",
            "itemtype": "method",
            "name": "onHeaderClick",
            "class": "inputEx.CheckBox",
            "module": "inputex-button",
            "namespace": "Plugin"
        },
        {
            "file": "src/calendar-year-navigator-plugin/js/calendar-year-navigator-plugin.js",
            "line": 125,
            "itemtype": "method",
            "name": "saveAndHidePanel",
            "class": "inputEx.CheckBox",
            "module": "inputex-button",
            "namespace": "Plugin"
        },
        {
            "file": "src/calendar-year-navigator-plugin/js/calendar-year-navigator-plugin.js",
            "line": 146,
            "itemtype": "method",
            "name": "cancelAndHidePanel",
            "class": "inputEx.CheckBox",
            "module": "inputex-button",
            "namespace": "Plugin"
        },
        {
            "file": "src/calendar-year-navigator-plugin/js/calendar-year-navigator-plugin.js",
            "line": 156,
            "itemtype": "method",
            "name": "validateFormInPanel",
            "class": "inputEx.CheckBox",
            "module": "inputex-button",
            "namespace": "Plugin"
        },
        {
            "file": "src/calendar-year-navigator-plugin/js/calendar-year-navigator-plugin.js",
            "line": 163,
            "itemtype": "method",
            "name": "hidePanel",
            "class": "inputEx.CheckBox",
            "module": "inputex-button",
            "namespace": "Plugin"
        },
        {
            "file": "src/calendar-year-navigator-plugin/js/calendar-year-navigator-plugin.js",
            "line": 170,
            "itemtype": "method",
            "name": "showPanel",
            "class": "inputEx.CheckBox",
            "module": "inputex-button",
            "namespace": "Plugin"
        },
        {
            "file": "src/calendar-year-navigator-plugin/js/calendar-year-navigator-plugin.js",
            "line": 204,
            "description": "Is the Panel visible ?",
            "itemtype": "method",
            "name": "_isPanelVisible",
            "access": "private",
            "tagname": "return isPanelVisible",
            "class": "inputEx.CheckBox",
            "module": "inputex-button",
            "namespace": "Plugin"
        },
        {
            "file": "src/calendar-year-navigator-plugin/js/calendar-year-navigator-plugin.js",
            "line": 219,
            "description": "Namespace of this component.",
            "itemtype": "property",
            "name": "NS",
            "type": "String",
            "static": 1,
            "class": "inputEx.CheckBox",
            "module": "inputex-button",
            "namespace": "Plugin"
        },
        {
            "file": "src/calendar-year-navigator-plugin/js/calendar-year-navigator-plugin.js",
            "line": 227,
            "description": "I18N",
            "itemtype": "attribute",
            "name": "strings",
            "type": "Object",
            "class": "inputEx.CheckBox",
            "module": "inputex-button",
            "namespace": "Plugin"
        },
        {
            "file": "src/calendar-year-navigator-plugin/js/calendar-year-navigator-plugin.js",
            "line": 238,
            "itemtype": "attribute",
            "name": "panel",
            "type": "Object",
            "class": "inputEx.CheckBox",
            "module": "inputex-button",
            "namespace": "Plugin"
        },
        {
            "file": "src/calendar-year-navigator-plugin/js/calendar-year-navigator-plugin.js",
            "line": 244,
            "description": "represents the inputex group inside the panel",
            "itemtype": "attribute",
            "name": "inputexGroup",
            "type": "Object",
            "class": "inputEx.CheckBox",
            "module": "inputex-button",
            "namespace": "Plugin"
        },
        {
            "file": "src/calendar-year-navigator-plugin/js/calendar-year-navigator-plugin.js",
            "line": 252,
            "description": "Namespace of this component.",
            "itemtype": "property",
            "name": "NS",
            "type": "String",
            "static": 1,
            "class": "inputEx.CheckBox",
            "module": "inputex-button",
            "namespace": "Plugin"
        },
        {
            "file": "src/checkbox/js/checkbox.js",
            "line": 22,
            "description": "Adds the CheckBox specific options",
            "itemtype": "method",
            "name": "setOptions",
            "params": [
                {
                    "name": "options",
                    "description": "Options object as passed to the constructor",
                    "type": "Object"
                }
            ],
            "class": "inputEx.CheckBox",
            "module": "inputex-checkbox"
        },
        {
            "file": "src/checkbox/js/checkbox.js",
            "line": 42,
            "description": "Render the checkbox and the hidden field",
            "itemtype": "method",
            "name": "renderComponent",
            "class": "inputEx.CheckBox",
            "module": "inputex-checkbox"
        },
        {
            "file": "src/checkbox/js/checkbox.js",
            "line": 62,
            "description": "Clear the previous events and listen for the \"change\" event",
            "itemtype": "method",
            "name": "initEvents",
            "class": "inputEx.CheckBox",
            "module": "inputex-checkbox"
        },
        {
            "file": "src/checkbox/js/checkbox.js",
            "line": 81,
            "description": "Function called when the checkbox is toggled",
            "itemtype": "method",
            "name": "onChange",
            "params": [
                {
                    "name": "e",
                    "description": "The original 'change' event",
                    "type": "Event"
                }
            ],
            "class": "inputEx.CheckBox",
            "module": "inputex-checkbox"
        },
        {
            "file": "src/checkbox/js/checkbox.js",
            "line": 99,
            "description": "Get the state value",
            "itemtype": "method",
            "name": "getValue",
            "return": {
                "description": "one of [checkedValue,uncheckedValue]",
                "type": "Any"
            },
            "class": "inputEx.CheckBox",
            "module": "inputex-checkbox"
        },
        {
            "file": "src/checkbox/js/checkbox.js",
            "line": 114,
            "description": "Set the value of the checkedbox",
            "itemtype": "method",
            "name": "setValue",
            "params": [
                {
                    "name": "value",
                    "description": "The value schould be one of [checkedValue,uncheckedValue]",
                    "type": "Any"
                },
                {
                    "name": "sendUpdatedEvt",
                    "description": "(optional) Wether this setValue should fire the\n                 'updated' event or not (default is true, pass false to NOT send the event)",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "inputEx.CheckBox",
            "module": "inputex-checkbox"
        },
        {
            "file": "src/checkbox/js/checkbox.js",
            "line": 166,
            "description": "Disable the field",
            "itemtype": "method",
            "name": "disable",
            "class": "inputEx.CheckBox",
            "module": "inputex-checkbox"
        },
        {
            "file": "src/checkbox/js/checkbox.js",
            "line": 175,
            "description": "Enable the field",
            "itemtype": "method",
            "name": "enable",
            "class": "inputEx.CheckBox",
            "module": "inputex-checkbox"
        },
        {
            "file": "src/checkbox-multi-state/js/checkbox-multi-state.js",
            "line": 36,
            "description": "state of the check box",
            "itemtype": "property",
            "name": "state",
            "type": "{String}",
            "default": "\"unchecked\"",
            "class": "inputEx.CheckboxMultiState",
            "module": "checkbox-multi-state"
        },
        {
            "file": "src/choice/js/choice.js",
            "line": 17,
            "description": "Add a choice",
            "itemtype": "method",
            "name": "addChoice",
            "params": [
                {
                    "name": "config",
                    "description": "An object describing the choice to add\n(e.g. { value: 'second' [, label: 'Second' [, position: 1 || after: 'First' || before: 'Third']] })",
                    "type": "Object"
                }
            ],
            "class": "inputEx.mixin.choice",
            "module": "inputex-choice"
        },
        {
            "file": "src/choice/js/choice.js",
            "line": 77,
            "description": "Remove a choice",
            "itemtype": "method",
            "name": "removeChoice",
            "params": [
                {
                    "name": "config",
                    "description": "An object targeting the choice to remove (e.g. { position : 1 } || { value: 'second' } || { label: 'Second' })",
                    "type": "Object"
                }
            ],
            "class": "inputEx.mixin.choice",
            "module": "inputex-choice"
        },
        {
            "file": "src/choice/js/choice.js",
            "line": 112,
            "description": "Remove all choices",
            "itemtype": "method",
            "name": "removeAllChoices",
            "class": "inputEx.mixin.choice",
            "module": "inputex-choice"
        },
        {
            "file": "src/choice/js/choice.js",
            "line": 124,
            "description": "Hide a choice",
            "itemtype": "method",
            "name": "hideChoice",
            "params": [
                {
                    "name": "config",
                    "description": "An object targeting the choice to hide (e.g. { position : 1 } || { value: 'second' } || { label: 'Second' })",
                    "type": "Object"
                }
            ],
            "class": "inputEx.mixin.choice",
            "module": "inputex-choice"
        },
        {
            "file": "src/choice/js/choice.js",
            "line": 158,
            "description": "Show a choice",
            "itemtype": "method",
            "name": "showChoice",
            "params": [
                {
                    "name": "config",
                    "description": "An object targeting the choice to show (e.g. { position : 1 } || { value: 'second' } || { label: 'Second' })",
                    "type": "Object"
                }
            ],
            "class": "inputEx.mixin.choice",
            "module": "inputex-choice"
        },
        {
            "file": "src/choice/js/choice.js",
            "line": 184,
            "description": "Disable a choice",
            "itemtype": "method",
            "name": "disableChoice",
            "params": [
                {
                    "name": "config",
                    "description": "An object targeting the choice to disable (e.g. { position : 1 } || { value: 'second' } || { label: 'Second' })",
                    "type": "Object"
                }
            ],
            "class": "inputEx.mixin.choice",
            "module": "inputex-choice"
        },
        {
            "file": "src/choice/js/choice.js",
            "line": 213,
            "description": "Enable a choice",
            "itemtype": "method",
            "name": "enableChoice",
            "params": [
                {
                    "name": "config",
                    "description": "An object targeting the choice to enable (e.g. { position : 1 } || { value: 'second' } || { label: 'Second' })",
                    "type": "Object"
                }
            ],
            "class": "inputEx.mixin.choice",
            "module": "inputex-choice"
        },
        {
            "file": "src/choice/js/choice.js",
            "line": 234,
            "description": "Get the position of a choice in choicesList (NOT in the DOM)",
            "itemtype": "method",
            "name": "getChoicePosition",
            "params": [
                {
                    "name": "config",
                    "description": "An object targeting the choice (e.g. { position : 1 } || { value: 'second' } || { label: 'Second' })",
                    "type": "Object"
                }
            ],
            "class": "inputEx.mixin.choice",
            "module": "inputex-choice"
        },
        {
            "file": "src/color/js/color.js",
            "line": 25,
            "description": "Adds the 'inputEx-ColorField' default className",
            "itemtype": "method",
            "name": "setOptions",
            "params": [
                {
                    "name": "options",
                    "description": "Options object as passed to the constructor",
                    "type": "Object"
                }
            ],
            "class": "inputEx.ColorField",
            "module": "inputex-color"
        },
        {
            "file": "src/color/js/color.js",
            "line": 45,
            "itemtype": "method",
            "name": "renderOverlay",
            "class": "inputEx.ColorField",
            "module": "inputex-color"
        },
        {
            "file": "src/color/js/color.js",
            "line": 80,
            "itemtype": "method",
            "name": "_toggleOverlay",
            "access": "private",
            "tagname": "",
            "class": "inputEx.ColorField",
            "module": "inputex-color"
        },
        {
            "file": "src/color/js/color.js",
            "line": 94,
            "description": "Render the color button and the colorpicker popup",
            "itemtype": "method",
            "name": "renderComponent",
            "class": "inputEx.ColorField",
            "module": "inputex-color"
        },
        {
            "file": "src/color/js/color.js",
            "line": 137,
            "itemtype": "method",
            "name": "renderPalette",
            "class": "inputEx.ColorField",
            "module": "inputex-color"
        },
        {
            "file": "src/color/js/color.js",
            "line": 176,
            "description": "Set the colors to set in the picker",
            "itemtype": "method",
            "name": "setDefaultColors",
            "params": [
                {
                    "name": "index",
                    "description": "Index of the palette to use",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "List of colors to choose from",
                "type": "Array"
            },
            "class": "inputEx.ColorField",
            "module": "inputex-color"
        },
        {
            "file": "src/color/js/color.js",
            "line": 186,
            "description": "This creates a color grid",
            "itemtype": "method",
            "name": "renderColorGrid",
            "class": "inputEx.ColorField",
            "module": "inputex-color"
        },
        {
            "file": "src/color/js/color.js",
            "line": 222,
            "description": "Handle a color selection",
            "itemtype": "method",
            "name": "onColorClick",
            "params": [
                {
                    "name": "e",
                    "description": "The original click event",
                    "type": "Event"
                }
            ],
            "class": "inputEx.ColorField",
            "module": "inputex-color"
        },
        {
            "file": "src/color/js/color.js",
            "line": 244,
            "description": "Set the value",
            "itemtype": "method",
            "name": "setValue",
            "params": [
                {
                    "name": "value",
                    "description": "Color to set",
                    "type": "String"
                },
                {
                    "name": "sendUpdatedEvt",
                    "description": "(optional) Wether this setValue should fire the 'updated' event or not\n                                            (default is true, pass false to NOT send the event)",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "inputEx.ColorField",
            "module": "inputex-color"
        },
        {
            "file": "src/color/js/color.js",
            "line": 261,
            "description": "Return the color value",
            "itemtype": "method",
            "name": "getValue",
            "return": {
                "description": "Color value",
                "type": "String"
            },
            "class": "inputEx.ColorField",
            "module": "inputex-color"
        },
        {
            "file": "src/color/js/color.js",
            "line": 270,
            "description": "Call overlay when field is removed",
            "itemtype": "method",
            "name": "close",
            "class": "inputEx.ColorField",
            "module": "inputex-color"
        },
        {
            "file": "src/color/js/color.js",
            "line": 280,
            "description": "Purge all event listeners and remove the component from the dom",
            "itemtype": "method",
            "name": "destroy",
            "class": "inputEx.ColorField",
            "module": "inputex-color"
        },
        {
            "file": "src/color/js/color.js",
            "line": 298,
            "itemtype": "method",
            "name": "markSelectedColor",
            "class": "inputEx.ColorField",
            "module": "inputex-color"
        },
        {
            "file": "src/color/js/color.js",
            "line": 332,
            "description": "Default palettes",
            "itemtype": "property",
            "name": "palettes",
            "class": "inputEx.ColorField",
            "module": "inputex-color"
        },
        {
            "file": "src/combine/js/combine.js",
            "line": 22,
            "description": "Set the default values of the options",
            "itemtype": "method",
            "name": "setOptions",
            "params": [
                {
                    "name": "options",
                    "description": "Options object as passed to the constructor",
                    "type": "Object"
                }
            ],
            "class": "inputEx.CombineField",
            "module": "inputex-combine"
        },
        {
            "file": "src/combine/js/combine.js",
            "line": 42,
            "itemtype": "method",
            "name": "render",
            "class": "inputEx.CombineField",
            "module": "inputex-combine"
        },
        {
            "file": "src/combine/js/combine.js",
            "line": 49,
            "description": "Render the subfields",
            "itemtype": "method",
            "name": "renderFields",
            "class": "inputEx.CombineField",
            "module": "inputex-combine"
        },
        {
            "file": "src/combine/js/combine.js",
            "line": 97,
            "description": "Override to force required option on each subfield",
            "itemtype": "method",
            "name": "renderField",
            "params": [
                {
                    "name": "fieldOptions",
                    "description": "The field properties as required by inputEx()",
                    "type": "Object"
                }
            ],
            "class": "inputEx.CombineField",
            "module": "inputex-combine"
        },
        {
            "file": "src/combine/js/combine.js",
            "line": 112,
            "itemtype": "method",
            "name": "setFieldName",
            "class": "inputEx.CombineField",
            "module": "inputex-combine"
        },
        {
            "file": "src/combine/js/combine.js",
            "line": 132,
            "description": "Add a separator to the fieldContainer",
            "itemtype": "method",
            "name": "appendSeparator",
            "class": "inputEx.CombineField",
            "module": "inputex-combine"
        },
        {
            "file": "src/combine/js/combine.js",
            "line": 145,
            "itemtype": "method",
            "name": "initEvents",
            "class": "inputEx.CombineField",
            "module": "inputex-combine"
        },
        {
            "file": "src/combine/js/combine.js",
            "line": 180,
            "description": "Set the value",
            "itemtype": "method",
            "name": "setValue",
            "params": [
                {
                    "name": "values",
                    "description": "[value1, value2, ...]",
                    "type": "Array"
                },
                {
                    "name": "sendUpdatedEvt",
                    "description": "(optional) Wether this setValue should fire the 'updated'\nevent or not (default is true, pass false to NOT send the event)",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "inputEx.CombineField",
            "module": "inputex-combine"
        },
        {
            "file": "src/combine/js/combine.js",
            "line": 206,
            "description": "Specific getValue",
            "itemtype": "method",
            "name": "getValue",
            "return": {
                "description": "An array of values [value1, value2, ...]",
                "type": "Array"
            },
            "class": "inputEx.CombineField",
            "module": "inputex-combine"
        },
        {
            "file": "src/datatable/js/datatable.js",
            "line": 27,
            "itemtype": "method",
            "name": "initializer",
            "class": "inputEx.Plugin.InputExDataTable",
            "module": "inputex-datatable"
        },
        {
            "file": "src/datatable/js/datatable.js",
            "line": 248,
            "description": "add Attributes on the data model depending on the plugin configuration",
            "itemtype": "method",
            "name": "enrichData",
            "class": "inputEx.Plugin.InputExDataTable",
            "module": "inputex-datatable"
        },
        {
            "file": "src/datatable/js/datatable.js",
            "line": 269,
            "description": "add Columns on the DataTable depending on the plugin configuration",
            "itemtype": "method",
            "name": "enrichColumns",
            "class": "inputEx.Plugin.InputExDataTable",
            "module": "inputex-datatable"
        },
        {
            "file": "src/datatable/js/datatable.js",
            "line": 285,
            "description": "Provide the add button in order to add record on the DataTable",
            "itemtype": "method",
            "name": "addAddButton",
            "class": "inputEx.Plugin.InputExDataTable",
            "module": "inputex-datatable"
        },
        {
            "file": "src/datatable/js/datatable.js",
            "line": 322,
            "itemtype": "method",
            "name": "modifyRecord",
            "class": "inputEx.Plugin.InputExDataTable",
            "module": "inputex-datatable"
        },
        {
            "file": "src/datatable/js/datatable.js",
            "line": 338,
            "description": "Called when the user clicked on a link to delete a record",
            "itemtype": "method",
            "name": "deleteRecord",
            "class": "inputEx.Plugin.InputExDataTable",
            "module": "inputex-datatable"
        },
        {
            "file": "src/datatable/js/datatable.js",
            "line": 368,
            "itemtype": "method",
            "name": "deleteExtraColumns",
            "class": "inputEx.Plugin.InputExDataTable",
            "module": "inputex-datatable"
        },
        {
            "file": "src/datatable/js/datatable.js",
            "line": 382,
            "itemtype": "method",
            "name": "_initPanel",
            "access": "private",
            "tagname": "",
            "class": "inputEx.Plugin.InputExDataTable",
            "module": "inputex-datatable"
        },
        {
            "file": "src/datatable/js/datatable.js",
            "line": 500,
            "itemtype": "method",
            "name": "destructor",
            "class": "inputEx.Plugin.InputExDataTable",
            "module": "inputex-datatable"
        },
        {
            "file": "src/datatable/js/datatable.js",
            "line": 541,
            "description": "Add the modify attribute on the data model",
            "itemtype": "method",
            "name": "addModifyAttr",
            "class": "inputEx.Plugin.InputExDataTable",
            "module": "inputex-datatable"
        },
        {
            "file": "src/datatable/js/datatable.js",
            "line": 550,
            "description": "Add the delete attribute on the data model",
            "itemtype": "method",
            "name": "addDeleteAttr",
            "class": "inputEx.Plugin.InputExDataTable",
            "module": "inputex-datatable"
        },
        {
            "file": "src/datatable/js/datatable.js",
            "line": 559,
            "description": "Remove the modify attribute from the data model",
            "itemtype": "method",
            "name": "delModifyAttr",
            "class": "inputEx.Plugin.InputExDataTable",
            "module": "inputex-datatable"
        },
        {
            "file": "src/datatable/js/datatable.js",
            "line": 568,
            "description": "Remove the modify attribute from the data model",
            "itemtype": "method",
            "name": "delDeleteAttr",
            "class": "inputEx.Plugin.InputExDataTable",
            "module": "inputex-datatable"
        },
        {
            "file": "src/datatable/js/datatable.js",
            "line": 577,
            "description": "Add the modify column on the DataTable",
            "itemtype": "method",
            "name": "addModifyColumn",
            "class": "inputEx.Plugin.InputExDataTable",
            "module": "inputex-datatable"
        },
        {
            "file": "src/datatable/js/datatable.js",
            "line": 596,
            "description": "Add the delete column on the DataTable",
            "itemtype": "method",
            "name": "addDeleteColumn",
            "class": "inputEx.Plugin.InputExDataTable",
            "module": "inputex-datatable"
        },
        {
            "file": "src/datatable/js/datatable.js",
            "line": 614,
            "description": "Remove the modify column from the DataTable",
            "itemtype": "method",
            "name": "removeModifyColumn",
            "class": "inputEx.Plugin.InputExDataTable",
            "module": "inputex-datatable"
        },
        {
            "file": "src/datatable/js/datatable.js",
            "line": 623,
            "description": "Remove the delete column from the DataTable",
            "itemtype": "method",
            "name": "removeDeleteColumn",
            "class": "inputEx.Plugin.InputExDataTable",
            "module": "inputex-datatable"
        },
        {
            "file": "src/datatable/js/datatable.js",
            "line": 671,
            "description": "Static property used to define the default attribute configuration of\nthe Plugin.",
            "itemtype": "property",
            "name": "ATTRS",
            "type": "{Object}",
            "static": 1,
            "class": "inputEx.Plugin.InputExDataTable",
            "module": "inputex-datatable"
        },
        {
            "file": "src/datatable/js/datatable.js",
            "line": 681,
            "description": "This is an inputEx field definition. This is used when a user try to create/modify a record",
            "itemtype": "attribute",
            "name": "inputEx",
            "class": "inputEx.Plugin.InputExDataTable",
            "module": "inputex-datatable"
        },
        {
            "file": "src/datatable/js/datatable.js",
            "line": 689,
            "description": "This string is inserted before the generated id",
            "itemtype": "attribute",
            "name": "prefixId",
            "type": "String",
            "example": [
                " prefixId : \"po-\" --> id = po-1342561"
            ],
            "class": "inputEx.Plugin.InputExDataTable",
            "module": "inputex-datatable"
        },
        {
            "file": "src/datatable/js/datatable.js",
            "line": 700,
            "description": "This represents the number of digits used in the id generation",
            "itemtype": "attribute",
            "name": "idSize",
            "type": "Number",
            "class": "inputEx.Plugin.InputExDataTable",
            "module": "inputex-datatable"
        },
        {
            "file": "src/datatable/js/datatable.js",
            "line": 710,
            "description": "If true the add functionality is disabled",
            "itemtype": "attribute",
            "name": "disableAddFunc",
            "type": "boolean",
            "class": "inputEx.Plugin.InputExDataTable",
            "module": "inputex-datatable"
        },
        {
            "file": "src/datatable/js/datatable.js",
            "line": 720,
            "description": "If true the modify functionality is disabled",
            "itemtype": "attribute",
            "name": "disableModifyFunc",
            "type": "boolean",
            "class": "inputEx.Plugin.InputExDataTable",
            "module": "inputex-datatable"
        },
        {
            "file": "src/datatable/js/datatable.js",
            "line": 729,
            "description": "If true the delete functionality is disabled",
            "itemtype": "attribute",
            "name": "disableDeleteFunc",
            "type": "boolean",
            "class": "inputEx.Plugin.InputExDataTable",
            "module": "inputex-datatable"
        },
        {
            "file": "src/datatable/js/datatable.js",
            "line": 739,
            "description": "Labels of the plugin",
            "itemtype": "attribute",
            "name": "modifyColumnLabel",
            "class": "inputEx.Plugin.InputExDataTable",
            "module": "inputex-datatable"
        },
        {
            "file": "src/datatable/js/datatable.js",
            "line": 749,
            "description": "If true a confirmation will be asked to the user when a delete attempt appear",
            "itemtype": "attribute",
            "name": "confirmDelete",
            "type": "boolean",
            "class": "inputEx.Plugin.InputExDataTable",
            "module": "inputex-datatable"
        },
        {
            "file": "src/datatable/js/datatable.js",
            "line": 759,
            "description": "This panel will be displayed on record creation/modication",
            "itemtype": "attribute",
            "name": "panel",
            "type": "Y.inputEx.Panel",
            "class": "inputEx.Plugin.InputExDataTable",
            "module": "inputex-datatable"
        },
        {
            "file": "src/datatable/js/datatable.js",
            "line": 779,
            "description": "Set to true if you want to activate in-cell editing (ALPHA)",
            "itemtype": "attribute",
            "name": "inplaceedit",
            "type": "boolean",
            "class": "inputEx.Plugin.InputExDataTable",
            "module": "inputex-datatable"
        },
        {
            "file": "src/datatable/js/datatable.js",
            "line": 788,
            "description": "Overlay used for the inplace editing",
            "itemtype": "attribute",
            "name": "inplaceOverlay",
            "type": "Y.Overlay",
            "class": "inputEx.Plugin.InputExDataTable",
            "module": "inputex-datatable"
        },
        {
            "file": "src/datatable/js/datatable.js",
            "line": 798,
            "description": "Function used to confirm the creation of a new record.\nYou can perform validation and/or ajax creation.\naddMethod must be a function(record, cb) which calls 'cb' with success status as first argument",
            "itemtype": "attribute",
            "name": "addMethod",
            "type": "function",
            "class": "inputEx.Plugin.InputExDataTable",
            "module": "inputex-datatable"
        },
        {
            "file": "src/datatable/js/datatable.js",
            "line": 811,
            "description": "Function used to confirm the modification of an existing record.\nYou can perform validation and/or ajax update.\nupdateMethod must be a function(id, newValues, cb) which calls 'cb' with success status as first argument",
            "itemtype": "attribute",
            "name": "updateMethod",
            "type": "function",
            "class": "inputEx.Plugin.InputExDataTable",
            "module": "inputex-datatable"
        },
        {
            "file": "src/datatable/js/datatable.js",
            "line": 824,
            "description": "Function used to confirm the deletion of an existing record.\nYou can perform validation and/or ajax deletion.\ndeleteMethod must be a function(record, cb) which calls 'cb' with success status as first argument",
            "itemtype": "attribute",
            "name": "deleteMethod",
            "type": "function",
            "class": "inputEx.Plugin.InputExDataTable",
            "module": "inputex-datatable"
        },
        {
            "file": "src/datatable/js/datatable.js",
            "line": 837,
            "description": "Formatter for the modify column",
            "itemtype": "attribute",
            "name": "modifyColumnFormatter",
            "type": "function",
            "class": "inputEx.Plugin.InputExDataTable",
            "module": "inputex-datatable"
        },
        {
            "file": "src/datatable/js/datatable.js",
            "line": 846,
            "description": "Formatter for the delete column",
            "itemtype": "attribute",
            "name": "deleteColumnFormatter",
            "type": "function",
            "class": "inputEx.Plugin.InputExDataTable",
            "module": "inputex-datatable"
        },
        {
            "file": "src/datatable/js/datatable.js",
            "line": 855,
            "description": "nodeFormatter for the modify column",
            "itemtype": "attribute",
            "name": "modifyColumnNodeFormatter",
            "type": "function",
            "class": "inputEx.Plugin.InputExDataTable",
            "module": "inputex-datatable"
        },
        {
            "file": "src/datatable/js/datatable.js",
            "line": 864,
            "description": "nodeFormatter for the delete column",
            "itemtype": "attribute",
            "name": "deleteColumnNodeFormatter",
            "type": "function",
            "class": "inputEx.Plugin.InputExDataTable",
            "module": "inputex-datatable"
        },
        {
            "file": "src/date/js/date.js",
            "line": 23,
            "description": "Adds the 'inputEx-DateField' default className",
            "itemtype": "method",
            "name": "setOptions",
            "params": [
                {
                    "name": "options",
                    "description": "Options object as passed to the constructor",
                    "type": "Object"
                }
            ],
            "class": "inputEx.DateField",
            "module": "inputex-date"
        },
        {
            "file": "src/date/js/date.js",
            "line": 42,
            "description": "Specific Date validation depending of the 'format' option",
            "itemtype": "method",
            "name": "validate",
            "class": "inputEx.DateField",
            "module": "inputex-date"
        },
        {
            "file": "src/date/js/date.js",
            "line": 81,
            "description": "Format the date according to options.dateFormat",
            "itemtype": "method",
            "name": "setValue",
            "params": [
                {
                    "name": "val",
                    "description": "Date to set",
                    "type": "Date"
                },
                {
                    "name": "sendUpdatedEvt",
                    "description": "(optional) Wether this setValue\n      should fire the updatedEvt or not (default is true, pass false to NOT send the event)",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "inputEx.DateField",
            "module": "inputex-date"
        },
        {
            "file": "src/date/js/date.js",
            "line": 111,
            "description": "Return the date",
            "itemtype": "method",
            "name": "getValue",
            "params": [
                {
                    "name": "forceDate",
                    "description": "Skip the valueFormat option if set to truthy",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "Formatted date using the valueFormat or a javascript Date instance",
                "type": "String || Date"
            },
            "class": "inputEx.DateField",
            "module": "inputex-date"
        },
        {
            "file": "src/date/js/date.js",
            "line": 139,
            "description": "Those methods are limited but largely enough for our usage",
            "itemtype": "method",
            "name": "parseWithFormat",
            "static": 1,
            "class": "inputEx.DateField",
            "module": "inputex-date"
        },
        {
            "file": "src/date/js/date.js",
            "line": 156,
            "description": "Those methods are limited but largely enough for our usage",
            "itemtype": "method",
            "name": "formatDate",
            "static": 1,
            "class": "inputEx.DateField",
            "module": "inputex-date"
        },
        {
            "file": "src/datepicker/js/datepicker.js",
            "line": 27,
            "description": "Set the default date picker CSS classes",
            "itemtype": "method",
            "name": "setOptions",
            "params": [
                {
                    "name": "options",
                    "description": "Options object as passed to the constructor",
                    "type": "Object"
                }
            ],
            "class": "inputEx.DatePickerField",
            "module": "inputex-datepicker"
        },
        {
            "file": "src/datepicker/js/datepicker.js",
            "line": 46,
            "itemtype": "method",
            "name": "renderOverlay",
            "class": "inputEx.DatePickerField",
            "module": "inputex-datepicker"
        },
        {
            "file": "src/datepicker/js/datepicker.js",
            "line": 93,
            "itemtype": "method",
            "name": "_toggleOverlay",
            "access": "private",
            "tagname": "",
            "class": "inputEx.DatePickerField",
            "module": "inputex-datepicker"
        },
        {
            "file": "src/datepicker/js/datepicker.js",
            "line": 111,
            "description": "Render the input field and the minical container",
            "itemtype": "method",
            "name": "renderComponent",
            "class": "inputEx.DatePickerField",
            "module": "inputex-datepicker"
        },
        {
            "file": "src/datepicker/js/datepicker.js",
            "line": 141,
            "description": "Called ONCE to render the calendar lazily",
            "itemtype": "method",
            "name": "renderCalendar",
            "class": "inputEx.DatePickerField",
            "module": "inputex-datepicker"
        },
        {
            "file": "src/datepicker/js/datepicker.js",
            "line": 195,
            "description": "Select the right date and display the right page on calendar, when the field has a value",
            "itemtype": "method",
            "name": "beforeShowOverlay",
            "class": "inputEx.DatePickerField",
            "module": "inputex-datepicker"
        },
        {
            "file": "src/datepicker/js/datepicker.js",
            "line": 223,
            "description": "Call overlay when field is removed",
            "itemtype": "method",
            "name": "close",
            "class": "inputEx.DatePickerField",
            "module": "inputex-datepicker"
        },
        {
            "file": "src/datepicker/js/datepicker.js",
            "line": 233,
            "description": "Disable the field",
            "itemtype": "method",
            "name": "disable",
            "class": "inputEx.DatePickerField",
            "module": "inputex-datepicker"
        },
        {
            "file": "src/datepicker/js/datepicker.js",
            "line": 242,
            "description": "Enable the field",
            "itemtype": "method",
            "name": "enable",
            "class": "inputEx.DatePickerField",
            "module": "inputex-datepicker"
        },
        {
            "file": "src/dateselectmonth/js/dateselectmonth.js",
            "line": 62,
            "itemtype": "method",
            "name": "setOptions",
            "class": "inputEx.DateSelectMonthField",
            "module": "inputex-dateselectmonth"
        },
        {
            "file": "src/dateselectmonth/js/dateselectmonth.js",
            "line": 72,
            "itemtype": "method",
            "name": "setValue",
            "class": "inputEx.DateSelectMonthField",
            "module": "inputex-dateselectmonth"
        },
        {
            "file": "src/dateselectmonth/js/dateselectmonth.js",
            "line": 94,
            "itemtype": "method",
            "name": "getValue",
            "class": "inputEx.DateSelectMonthField",
            "module": "inputex-dateselectmonth"
        },
        {
            "file": "src/dateselectmonth/js/dateselectmonth.js",
            "line": 112,
            "itemtype": "method",
            "name": "validate",
            "class": "inputEx.DateSelectMonthField",
            "module": "inputex-dateselectmonth"
        },
        {
            "file": "src/datesplit/js/datesplit.js",
            "line": 49,
            "itemtype": "method",
            "name": "setOptions",
            "class": "inputEx.DateSplitField",
            "module": "inputex-datesplit"
        },
        {
            "file": "src/datesplit/js/datesplit.js",
            "line": 59,
            "description": "Set the value. Format the date according to options.dateFormat",
            "itemtype": "method",
            "name": "setValue",
            "params": [
                {
                    "name": "val",
                    "description": "Date to set",
                    "type": "Date"
                },
                {
                    "name": "sendUpdatedEvt",
                    "description": "(optional) Wether this setValue should fire the 'updated' event or not (default is true, pass false to NOT send the event)",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "inputEx.DateSplitField",
            "module": "inputex-datesplit"
        },
        {
            "file": "src/datesplit/js/datesplit.js",
            "line": 83,
            "itemtype": "method",
            "name": "ensureTwoChars",
            "class": "inputEx.DateSplitField",
            "module": "inputex-datesplit"
        },
        {
            "file": "src/datesplit/js/datesplit.js",
            "line": 98,
            "itemtype": "method",
            "name": "getValue",
            "class": "inputEx.DateSplitField",
            "module": "inputex-datesplit"
        },
        {
            "file": "src/datesplit/js/datesplit.js",
            "line": 127,
            "itemtype": "method",
            "name": "validate",
            "class": "inputEx.DateSplitField",
            "module": "inputex-datesplit"
        },
        {
            "file": "src/datesplit/js/datesplit.js",
            "line": 156,
            "itemtype": "method",
            "name": "initAutoTab",
            "class": "inputEx.DateSplitField",
            "module": "inputex-datesplit"
        },
        {
            "file": "src/datetime/js/datetime.js",
            "line": 43,
            "description": "Concat the values to return a date",
            "itemtype": "method",
            "name": "getValue",
            "return": {
                "description": "The javascript Date object",
                "type": "Date"
            },
            "class": "inputEx.DateTimeField",
            "module": "inputex-datetime"
        },
        {
            "file": "src/datetime/js/datetime.js",
            "line": 60,
            "description": "Set the value of both subfields",
            "itemtype": "method",
            "name": "setValue",
            "params": [
                {
                    "name": "val",
                    "description": "Date to set",
                    "type": "Date"
                },
                {
                    "name": "sendUpdatedEvt",
                    "description": "(optional) Wether this setValue should fire the 'updated' event or not (default is true, pass false to NOT send the event)",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "inputEx.DateTimeField",
            "module": "inputex-datetime"
        },
        {
            "file": "src/ddlist/js/ddlist.js",
            "line": 39,
            "itemtype": "method",
            "name": "setOptions",
            "class": "inputEx.DDListField",
            "module": "inputex-ddlist"
        },
        {
            "file": "src/ddlist/js/ddlist.js",
            "line": 56,
            "itemtype": "method",
            "name": "renderComponent",
            "class": "inputEx.DDListField",
            "module": "inputex-ddlist"
        },
        {
            "file": "src/ddlist/js/ddlist.js",
            "line": 80,
            "itemtype": "method",
            "name": "renderListItem",
            "class": "inputEx.DDListField",
            "module": "inputex-ddlist"
        },
        {
            "file": "src/ddlist/js/ddlist.js",
            "line": 94,
            "itemtype": "method",
            "name": "addItem",
            "class": "inputEx.DDListField",
            "module": "inputex-ddlist"
        },
        {
            "file": "src/ddlist/js/ddlist.js",
            "line": 106,
            "itemtype": "method",
            "name": "removeItem",
            "class": "inputEx.DDListField",
            "module": "inputex-ddlist"
        },
        {
            "file": "src/ddlist/js/ddlist.js",
            "line": 115,
            "itemtype": "method",
            "name": "removeItemCallback",
            "params": [
                {
                    "name": "event",
                    "description": ""
                }
            ],
            "class": "inputEx.DDListField",
            "module": "inputex-ddlist"
        },
        {
            "file": "src/ddlist/js/ddlist.js",
            "line": 147,
            "itemtype": "method",
            "name": "clear",
            "class": "inputEx.DDListField",
            "module": "inputex-ddlist"
        },
        {
            "file": "src/ddlist/js/ddlist.js",
            "line": 158,
            "itemtype": "method",
            "name": "getValue",
            "class": "inputEx.DDListField",
            "module": "inputex-ddlist"
        },
        {
            "file": "src/ddlist/js/ddlist.js",
            "line": 167,
            "description": "Set the value of the DDList",
            "itemtype": "method",
            "name": "setValue",
            "params": [
                {
                    "name": "value",
                    "description": "The value to set",
                    "type": "String"
                },
                {
                    "name": "sendUpdatedEvt",
                    "description": "Wether this setValue should fire the 'updated' event or not (default is true, pass false to NOT send the event)",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "inputEx.DDListField",
            "module": "inputex-ddlist"
        },
        {
            "file": "src/dsselect/js/dsselect.js",
            "line": 24,
            "description": "Setup the additional options for selectfield",
            "itemtype": "method",
            "name": "setValue",
            "params": [
                {
                    "name": "options",
                    "description": "Options object as passed to the constructor",
                    "type": "Object"
                }
            ],
            "class": "inputEx.DSSelectField",
            "module": "inputex-dsselect"
        },
        {
            "file": "src/dsselect/js/dsselect.js",
            "line": 40,
            "description": "Build a select tag with options",
            "itemtype": "method",
            "name": "renderComponent",
            "class": "inputEx.DSSelectField",
            "module": "inputex-dsselect"
        },
        {
            "file": "src/dsselect/js/dsselect.js",
            "line": 52,
            "description": "Send the datasource request",
            "itemtype": "method",
            "name": "sendDataRequest",
            "class": "inputEx.DSSelectField",
            "module": "inputex-dsselect"
        },
        {
            "file": "src/dsselect/js/dsselect.js",
            "line": 73,
            "description": "Insert the options",
            "itemtype": "method",
            "name": "populateSelect",
            "class": "inputEx.DSSelectField",
            "module": "inputex-dsselect"
        },
        {
            "file": "src/dsselect/js/dsselect.js",
            "line": 92,
            "description": "Callback for request success",
            "itemtype": "method",
            "name": "onDatasourceSuccess",
            "class": "inputEx.DSSelectField",
            "module": "inputex-dsselect"
        },
        {
            "file": "src/dsselect/js/dsselect.js",
            "line": 100,
            "description": "Callback for request failure",
            "itemtype": "method",
            "name": "onDatasourceFailure",
            "class": "inputEx.DSSelectField",
            "module": "inputex-dsselect"
        },
        {
            "file": "src/email/js/email.js",
            "line": 17,
            "description": "Set the email regexp and invalid message",
            "itemtype": "method",
            "name": "setOptions",
            "params": [
                {
                    "name": "options",
                    "description": "Options object as passed to the constructor",
                    "type": "Object"
                }
            ],
            "class": "inputEx.EmailField",
            "module": "inputex-email"
        },
        {
            "file": "src/email/js/email.js",
            "line": 41,
            "itemtype": "method",
            "name": "validateDomain",
            "class": "inputEx.EmailField",
            "module": "inputex-email"
        },
        {
            "file": "src/email/js/email.js",
            "line": 127,
            "itemtype": "method",
            "name": "validateNotDisposable",
            "class": "inputEx.EmailField",
            "module": "inputex-email"
        },
        {
            "file": "src/email/js/email.js",
            "line": 146,
            "itemtype": "method",
            "name": "validate",
            "class": "inputEx.EmailField",
            "module": "inputex-email"
        },
        {
            "file": "src/email/js/email.js",
            "line": 177,
            "description": "Set the value to lower case since email have no case",
            "itemtype": "method",
            "name": "getValue",
            "return": {
                "description": "The email string",
                "type": "String"
            },
            "class": "inputEx.EmailField",
            "module": "inputex-email"
        },
        {
            "file": "src/field/js/field.js",
            "line": 32,
            "description": "Event fired after the user changed the value of the field.\nFired when the field is \"updated\"<br /> subscribe with: myfield.on('updated', function(value) { your code }, this, true);",
            "itemtype": "event",
            "name": "updated",
            "params": [
                {
                    "name": "value",
                    "description": "The new value of the field",
                    "type": "Any"
                }
            ],
            "class": "inputEx.constructor",
            "module": "inputex-field"
        },
        {
            "file": "src/field/js/field.js",
            "line": 63,
            "description": "Set the default values of the options",
            "itemtype": "method",
            "name": "setOptions",
            "params": [
                {
                    "name": "options",
                    "description": "Options object as passed to the constructor",
                    "type": "Object"
                }
            ],
            "class": "inputEx.constructor",
            "module": "inputex-field"
        },
        {
            "file": "src/field/js/field.js",
            "line": 94,
            "description": "Set the name of the field (or hidden field)",
            "itemtype": "method",
            "name": "setFieldName",
            "class": "inputEx.constructor",
            "module": "inputex-field"
        },
        {
            "file": "src/field/js/field.js",
            "line": 100,
            "description": "Default render of the dom element. Create a divEl that wraps the field.",
            "itemtype": "method",
            "name": "render",
            "class": "inputEx.constructor",
            "module": "inputex-field"
        },
        {
            "file": "src/field/js/field.js",
            "line": 160,
            "description": "Fire the \"updated\" event (only if the field validated)\nEscape the stack using a setTimeout",
            "itemtype": "method",
            "name": "fireUpdatedEvt",
            "class": "inputEx.constructor",
            "module": "inputex-field"
        },
        {
            "file": "src/field/js/field.js",
            "line": 173,
            "description": "Render the interface component into this.divEl",
            "itemtype": "method",
            "name": "renderComponent",
            "class": "inputEx.constructor",
            "module": "inputex-field"
        },
        {
            "file": "src/field/js/field.js",
            "line": 181,
            "description": "The default render creates a div to put in the messages",
            "itemtype": "method",
            "name": "getEl",
            "return": {
                "description": "divEl The main DIV wrapper",
                "type": "HTMLElement"
            },
            "class": "inputEx.constructor",
            "module": "inputex-field"
        },
        {
            "file": "src/field/js/field.js",
            "line": 190,
            "description": "Initialize events of the Input",
            "itemtype": "method",
            "name": "initEvents",
            "class": "inputEx.constructor",
            "module": "inputex-field"
        },
        {
            "file": "src/field/js/field.js",
            "line": 198,
            "description": "Return the value of the input",
            "itemtype": "method",
            "name": "getValue",
            "return": {
                "description": "value of the field",
                "type": "Any"
            },
            "class": "inputEx.constructor",
            "module": "inputex-field"
        },
        {
            "file": "src/field/js/field.js",
            "line": 207,
            "description": "Function to set the value",
            "itemtype": "method",
            "name": "setValue",
            "params": [
                {
                    "name": "value",
                    "description": "The new value",
                    "type": "Any"
                },
                {
                    "name": "sendUpdatedEvt",
                    "description": "(optional) Wether this setValue should fire the 'updated' event or not (default is true,\npass false to NOT send the event)",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "inputEx.constructor",
            "module": "inputex-field"
        },
        {
            "file": "src/field/js/field.js",
            "line": 225,
            "description": "Set the styles for valid/invalid state.  If a state is not provided, getState will be called.",
            "itemtype": "method",
            "name": "setClassFromState",
            "params": [
                {
                    "name": "One",
                    "description": "of the following states: 'empty', 'required', 'valid' or 'invalid'",
                    "type": "String"
                }
            ],
            "class": "inputEx.constructor",
            "module": "inputex-field"
        },
        {
            "file": "src/field/js/field.js",
            "line": 257,
            "description": "Get the string for the given state",
            "itemtype": "method",
            "name": "getStateString",
            "class": "inputEx.constructor",
            "module": "inputex-field"
        },
        {
            "file": "src/field/js/field.js",
            "line": 271,
            "description": "Returns the current state (given its value)",
            "itemtype": "method",
            "name": "getState",
            "return": {
                "description": "One of the following states: 'empty', 'required', 'valid' or 'invalid'",
                "type": "String"
            },
            "class": "inputEx.constructor",
            "module": "inputex-field"
        },
        {
            "file": "src/field/js/field.js",
            "line": 284,
            "description": "Validation of the field",
            "itemtype": "method",
            "name": "validate",
            "return": {
                "description": "field validation status (true/false)",
                "type": "Boolean"
            },
            "class": "inputEx.constructor",
            "module": "inputex-field"
        },
        {
            "file": "src/field/js/field.js",
            "line": 294,
            "description": "Function called on the focus event",
            "itemtype": "method",
            "name": "onFocus",
            "params": [
                {
                    "name": "e",
                    "description": "The original 'focus' event",
                    "type": "Event"
                }
            ],
            "class": "inputEx.constructor",
            "module": "inputex-field"
        },
        {
            "file": "src/field/js/field.js",
            "line": 305,
            "description": "Function called on the blur event",
            "itemtype": "method",
            "name": "onBlur",
            "params": [
                {
                    "name": "e",
                    "description": "The original 'blur' event",
                    "type": "Event"
                }
            ],
            "class": "inputEx.constructor",
            "module": "inputex-field"
        },
        {
            "file": "src/field/js/field.js",
            "line": 317,
            "description": "onChange event handler",
            "itemtype": "method",
            "name": "onChange",
            "params": [
                {
                    "name": "e",
                    "description": "The original 'change' event",
                    "type": "Event"
                }
            ],
            "class": "inputEx.constructor",
            "module": "inputex-field"
        },
        {
            "file": "src/field/js/field.js",
            "line": 326,
            "description": "Close the field and eventually opened popups...",
            "itemtype": "method",
            "name": "close",
            "class": "inputEx.constructor",
            "module": "inputex-field"
        },
        {
            "file": "src/field/js/field.js",
            "line": 332,
            "description": "Disable the field",
            "itemtype": "method",
            "name": "disable",
            "class": "inputEx.constructor",
            "module": "inputex-field"
        },
        {
            "file": "src/field/js/field.js",
            "line": 341,
            "description": "Enable the field",
            "itemtype": "method",
            "name": "enable",
            "class": "inputEx.constructor",
            "module": "inputex-field"
        },
        {
            "file": "src/field/js/field.js",
            "line": 350,
            "description": "Check if the field is diabled",
            "itemtype": "method",
            "name": "isDisabled",
            "class": "inputEx.constructor",
            "module": "inputex-field"
        },
        {
            "file": "src/field/js/field.js",
            "line": 358,
            "description": "Focus the field",
            "itemtype": "method",
            "name": "focus",
            "class": "inputEx.constructor",
            "module": "inputex-field"
        },
        {
            "file": "src/field/js/field.js",
            "line": 364,
            "description": "Purge all event listeners and remove the component from the dom",
            "itemtype": "method",
            "name": "destroy",
            "class": "inputEx.constructor",
            "module": "inputex-field"
        },
        {
            "file": "src/field/js/field.js",
            "line": 385,
            "description": "Update the message",
            "itemtype": "method",
            "name": "displayMessage",
            "params": [
                {
                    "name": "msg",
                    "description": "Message to display",
                    "type": "String"
                }
            ],
            "class": "inputEx.constructor",
            "module": "inputex-field"
        },
        {
            "file": "src/field/js/field.js",
            "line": 414,
            "description": "Show the field",
            "itemtype": "method",
            "name": "show",
            "class": "inputEx.constructor",
            "module": "inputex-field"
        },
        {
            "file": "src/field/js/field.js",
            "line": 422,
            "description": "Hide the field",
            "itemtype": "method",
            "name": "hide",
            "class": "inputEx.constructor",
            "module": "inputex-field"
        },
        {
            "file": "src/field/js/field.js",
            "line": 430,
            "description": "Clear the field by setting the field value to this.options.value",
            "itemtype": "method",
            "name": "clear",
            "params": [
                {
                    "name": "sendUpdatedEvt",
                    "description": "(optional) Wether this clear should fire the 'updated' event or not\n(default is true, pass false to NOT send the event)",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "inputEx.constructor",
            "module": "inputex-field"
        },
        {
            "file": "src/field/js/field.js",
            "line": 440,
            "description": "Test if the field is empty",
            "itemtype": "method",
            "name": "isEmpty",
            "return": {
                "description": "field emptiness (true/false)",
                "type": "Boolean"
            },
            "class": "inputEx.constructor",
            "module": "inputex-field"
        },
        {
            "file": "src/field/js/field.js",
            "line": 449,
            "description": "Set the parentField.\nGenerally use by composable fields (ie. Group,Form,ListField,CombineField,...}",
            "itemtype": "method",
            "name": "setParentField",
            "params": [
                {
                    "name": "parentField",
                    "description": "The parent field instance",
                    "type": "inputEx.Group|inputEx.Form|inputEx.ListField|inputEx.CombineField"
                }
            ],
            "class": "inputEx.constructor",
            "module": "inputex-field"
        },
        {
            "file": "src/field/js/field.js",
            "line": 459,
            "description": "Return the parent field instance",
            "itemtype": "method",
            "name": "getParentField",
            "return": {
                "description": "",
                "type": "inputEx.Group|inputEx.Form|inputEx.ListField|inputEx.CombineField"
            },
            "class": "inputEx.constructor",
            "module": "inputex-field"
        },
        {
            "file": "src/file/js/file.js",
            "line": 21,
            "description": "Adds size and accept options",
            "itemtype": "method",
            "name": "setOptions",
            "params": [
                {
                    "name": "options",
                    "description": "Options object as passed to the constructor",
                    "type": "Object"
                }
            ],
            "class": "inputEx.FileField",
            "module": "inputex-file"
        },
        {
            "file": "src/file/js/file.js",
            "line": 32,
            "description": "Render an 'INPUT' DOM node",
            "itemtype": "method",
            "name": "renderComponent",
            "class": "inputEx.FileField",
            "module": "inputex-file"
        },
        {
            "file": "src/form/js/form.js",
            "line": 26,
            "description": "Adds buttons and set ajax default parameters",
            "itemtype": "method",
            "name": "setOptions",
            "params": [
                {
                    "name": "options",
                    "description": "Options object as passed to the constructor",
                    "type": "Object"
                }
            ],
            "class": "inputEx.Form",
            "module": "inputex-form"
        },
        {
            "file": "src/form/js/form.js",
            "line": 69,
            "description": "Render the group",
            "itemtype": "method",
            "name": "render",
            "class": "inputEx.Form",
            "module": "inputex-form"
        },
        {
            "file": "src/form/js/form.js",
            "line": 106,
            "description": "Render the buttons",
            "itemtype": "method",
            "name": "renderButtons",
            "class": "inputEx.Form",
            "module": "inputex-form"
        },
        {
            "file": "src/form/js/form.js",
            "line": 138,
            "description": "Init the events",
            "itemtype": "method",
            "name": "initEvents",
            "class": "inputEx.Form",
            "module": "inputex-form"
        },
        {
            "file": "src/form/js/form.js",
            "line": 185,
            "description": "Intercept the 'onsubmit' event and stop it if !validate\nIf the ajax option object is set, use YUI async Request to send the form",
            "itemtype": "method",
            "name": "onSubmit",
            "params": [
                {
                    "name": "e",
                    "description": "The original onSubmit event",
                    "type": "Event"
                }
            ],
            "class": "inputEx.Form",
            "module": "inputex-form"
        },
        {
            "file": "src/form/js/form.js",
            "line": 209,
            "description": "Send the form value in JSON through an ajax request",
            "itemtype": "method",
            "name": "asyncRequest",
            "class": "inputEx.Form",
            "module": "inputex-form"
        },
        {
            "file": "src/form/js/form.js",
            "line": 289,
            "description": "Create a Mask over the form",
            "itemtype": "method",
            "name": "renderMask",
            "class": "inputEx.Form",
            "module": "inputex-form"
        },
        {
            "file": "src/form/js/form.js",
            "line": 317,
            "description": "Show the form mask",
            "itemtype": "method",
            "name": "showMask",
            "class": "inputEx.Form",
            "module": "inputex-form"
        },
        {
            "file": "src/form/js/form.js",
            "line": 330,
            "description": "Hide the form mask",
            "itemtype": "method",
            "name": "hideMask",
            "class": "inputEx.Form",
            "module": "inputex-form"
        },
        {
            "file": "src/form/js/form.js",
            "line": 342,
            "description": "Method to hide selects in IE 6 when masking the form (else they would appear over the mask)",
            "itemtype": "method",
            "name": "toggleSelectsInIE",
            "class": "inputEx.Form",
            "module": "inputex-form"
        },
        {
            "file": "src/form/js/form.js",
            "line": 357,
            "description": "Enable all fields and buttons in the form",
            "itemtype": "method",
            "name": "enable",
            "class": "inputEx.Form",
            "module": "inputex-form"
        },
        {
            "file": "src/form/js/form.js",
            "line": 369,
            "description": "Disable all fields and buttons in the form",
            "itemtype": "method",
            "name": "disable",
            "class": "inputEx.Form",
            "module": "inputex-form"
        },
        {
            "file": "src/form/js/form.js",
            "line": 382,
            "description": "Purge all event listeners and remove the component from the dom",
            "itemtype": "method",
            "name": "destroy",
            "class": "inputEx.Form",
            "module": "inputex-form"
        },
        {
            "file": "src/group/js/group.js",
            "line": 33,
            "description": "Adds some options: legend, collapsible, fields...",
            "itemtype": "method",
            "name": "setOptions",
            "params": [
                {
                    "name": "options",
                    "description": "Options object as passed to the constructor",
                    "type": "Object"
                }
            ],
            "class": "inputEx.Group",
            "module": "inputex-group"
        },
        {
            "file": "src/group/js/group.js",
            "line": 61,
            "description": "Render the group",
            "itemtype": "method",
            "name": "render",
            "class": "inputEx.Group",
            "module": "inputex-group"
        },
        {
            "file": "src/group/js/group.js",
            "line": 80,
            "description": "Render all the fields.\nWe use the parentEl so that inputEx.Form can append them to the FORM tag",
            "itemtype": "method",
            "name": "renderFields",
            "class": "inputEx.Group",
            "module": "inputex-group"
        },
        {
            "file": "src/group/js/group.js",
            "line": 132,
            "description": "Render a field and add it to the field set",
            "itemtype": "method",
            "name": "addField",
            "params": [
                {
                    "name": "fieldOptions",
                    "description": "The field properties as required by the inputEx() method",
                    "type": "Object"
                }
            ],
            "class": "inputEx.Group",
            "module": "inputex-group"
        },
        {
            "file": "src/group/js/group.js",
            "line": 142,
            "description": "Instanciate one field given its parameters, type or fieldClass",
            "itemtype": "method",
            "name": "renderField",
            "params": [
                {
                    "name": "fieldOptions",
                    "description": "The field properties as required by the inputEx() method",
                    "type": "Object"
                }
            ],
            "class": "inputEx.Group",
            "module": "inputex-group"
        },
        {
            "file": "src/group/js/group.js",
            "line": 178,
            "description": "Add a listener for the 'collapsible' option",
            "itemtype": "method",
            "name": "initEvents",
            "class": "inputEx.Group",
            "module": "inputex-group"
        },
        {
            "file": "src/group/js/group.js",
            "line": 188,
            "description": "Toggle the collapse state",
            "itemtype": "method",
            "name": "toggleCollapse",
            "class": "inputEx.Group",
            "module": "inputex-group"
        },
        {
            "file": "src/group/js/group.js",
            "line": 201,
            "description": "Validate each field",
            "itemtype": "method",
            "name": "validate",
            "return": {
                "description": "true if all fields validate and required fields are not empty",
                "type": "Boolean"
            },
            "class": "inputEx.Group",
            "module": "inputex-group"
        },
        {
            "file": "src/group/js/group.js",
            "line": 224,
            "description": "Alternative method to validate for advanced error handling",
            "itemtype": "method",
            "name": "getFieldsStates",
            "return": {
                "description": "with all Forms's fields state, error message\nand validate containing a boolean for the global Form validation",
                "type": "Object"
            },
            "class": "inputEx.Group",
            "module": "inputex-group"
        },
        {
            "file": "src/group/js/group.js",
            "line": 258,
            "description": "Enable all fields in the group",
            "itemtype": "method",
            "name": "enable",
            "class": "inputEx.Group",
            "module": "inputex-group"
        },
        {
            "file": "src/group/js/group.js",
            "line": 269,
            "description": "Disable all fields in the group",
            "itemtype": "method",
            "name": "disable",
            "class": "inputEx.Group",
            "module": "inputex-group"
        },
        {
            "file": "src/group/js/group.js",
            "line": 280,
            "description": "Set the values of each field from a key/value hash object",
            "itemtype": "method",
            "name": "setValue",
            "params": [
                {
                    "name": "value",
                    "description": "The group value",
                    "type": "Any"
                },
                {
                    "name": "sendUpdatedEvt",
                    "description": "(optional) Wether this setValue should fire\nthe 'updated' event or not (default is true, pass false to NOT send the event)",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "inputEx.Group",
            "module": "inputex-group"
        },
        {
            "file": "src/group/js/group.js",
            "line": 313,
            "description": "Return an object with all the values of the fields",
            "itemtype": "method",
            "name": "getValue",
            "class": "inputEx.Group",
            "module": "inputex-group"
        },
        {
            "file": "src/group/js/group.js",
            "line": 336,
            "description": "Test if all sub-fields are empty",
            "itemtype": "method",
            "name": "isEmpty",
            "return": {
                "description": "field emptiness (true/false)",
                "type": "Boolean"
            },
            "class": "inputEx.Group",
            "module": "inputex-group"
        },
        {
            "file": "src/group/js/group.js",
            "line": 354,
            "description": "Close the group (recursively calls \"close\" on each field, does NOT hide the group )\nCall this function before hidding the group to close any field popup",
            "itemtype": "method",
            "name": "close",
            "class": "inputEx.Group",
            "module": "inputex-group"
        },
        {
            "file": "src/group/js/group.js",
            "line": 365,
            "description": "Set the focus to the first input in the group",
            "itemtype": "method",
            "name": "focus",
            "class": "inputEx.Group",
            "module": "inputex-group"
        },
        {
            "file": "src/group/js/group.js",
            "line": 375,
            "description": "Return the sub-field instance by its name property",
            "itemtype": "method",
            "name": "getFieldByName",
            "params": [
                {
                    "name": "fieldName",
                    "description": "The name property",
                    "type": "String"
                }
            ],
            "class": "inputEx.Group",
            "module": "inputex-group"
        },
        {
            "file": "src/group/js/group.js",
            "line": 387,
            "description": "Find a field anywhere in the hierarchy this group is a part of.",
            "itemtype": "method",
            "name": "findFieldByName",
            "params": [
                {
                    "name": "fieldName",
                    "description": "The name property",
                    "type": "String"
                },
                {
                    "name": "descendOnly",
                    "description": "Set true to only look at children of this group",
                    "type": "Boolean"
                }
            ],
            "class": "inputEx.Group",
            "module": "inputex-group"
        },
        {
            "file": "src/group/js/group.js",
            "line": 421,
            "description": "Called when one of the group subfields is updated.",
            "itemtype": "method",
            "name": "onChange",
            "params": [
                {
                    "name": "eventName",
                    "description": "Event name",
                    "type": "String"
                },
                {
                    "name": "args",
                    "description": "Array of [fieldValue, fieldInstance]",
                    "type": "Array"
                }
            ],
            "class": "inputEx.Group",
            "module": "inputex-group"
        },
        {
            "file": "src/group/js/group.js",
            "line": 437,
            "description": "Run an action (for interactions)",
            "itemtype": "method",
            "name": "runAction",
            "params": [
                {
                    "name": "action",
                    "description": "inputEx action object",
                    "type": "Object"
                },
                {
                    "name": "triggerValue",
                    "description": "The value that triggered the interaction",
                    "type": "Any"
                }
            ],
            "class": "inputEx.Group",
            "module": "inputex-group"
        },
        {
            "file": "src/group/js/group.js",
            "line": 456,
            "description": "Run the interactions for the given field instance",
            "itemtype": "method",
            "name": "runInteractions",
            "params": [
                {
                    "name": "fieldInstance",
                    "description": "Field that just changed",
                    "type": "inputEx.Field"
                },
                {
                    "name": "fieldValue",
                    "description": "Field value",
                    "type": "Any"
                }
            ],
            "class": "inputEx.Group",
            "module": "inputex-group"
        },
        {
            "file": "src/group/js/group.js",
            "line": 486,
            "description": "Run the interactions for all fields",
            "itemtype": "method",
            "name": "runFieldsInteractions",
            "class": "inputEx.Group",
            "module": "inputex-group"
        },
        {
            "file": "src/group/js/group.js",
            "line": 498,
            "description": "Clear all subfields",
            "itemtype": "method",
            "name": "clear",
            "params": [
                {
                    "name": "sendUpdatedEvt",
                    "description": "(optional) Wether this clear should fire the\n'updated' event or not (default is true, pass false to NOT send the event)",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "inputEx.Group",
            "module": "inputex-group"
        },
        {
            "file": "src/group/js/group.js",
            "line": 514,
            "description": "Write error messages for fields as specified in the hash",
            "itemtype": "method",
            "name": "setErrors",
            "params": [
                {
                    "name": "errors",
                    "description": "Hash object containing error messages as Strings\nreferenced by the field name, or array [ [\"fieldName\", \"Message\"], ...]",
                    "type": "Object || Array"
                }
            ],
            "class": "inputEx.Group",
            "module": "inputex-group"
        },
        {
            "file": "src/group/js/group.js",
            "line": 548,
            "description": "Compatibility with classic forms in listField for instance",
            "itemtype": "method",
            "name": "setFieldName",
            "class": "inputEx.Group",
            "module": "inputex-group"
        },
        {
            "file": "src/group/js/group.js",
            "line": 559,
            "description": "Purge all event listeners and remove the component from the dom",
            "itemtype": "method",
            "name": "destroy",
            "class": "inputEx.Group",
            "module": "inputex-group"
        },
        {
            "file": "src/hidden/js/hidden.js",
            "line": 19,
            "description": "Doesn't render much...",
            "itemtype": "method",
            "name": "render",
            "class": "inputEx.HiddenField",
            "module": "inputex-hidden"
        },
        {
            "file": "src/hidden/js/hidden.js",
            "line": 37,
            "description": "Stores the typed value in a local variable, and store the value in the hidden input (cast as string by the input)",
            "itemtype": "method",
            "name": "setValue",
            "params": [
                {
                    "name": "val",
                    "description": "The value to set",
                    "type": "Any"
                },
                {
                    "name": "sendUpdatedEvt",
                    "description": "(optional) Wether this setValue should fire the\n'updated' event or not (default is true, pass false to NOT send the event)",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "inputEx.HiddenField",
            "module": "inputex-hidden"
        },
        {
            "file": "src/hidden/js/hidden.js",
            "line": 56,
            "description": "Get the previously stored value (respect the datatype of the value)",
            "itemtype": "method",
            "name": "getValue",
            "return": {
                "description": "the previously stored value",
                "type": "Any"
            },
            "class": "inputEx.HiddenField",
            "module": "inputex-hidden"
        },
        {
            "file": "src/imagecropper/js/imagecropper.js",
            "line": 31,
            "description": "Set the default values of the options",
            "itemtype": "method",
            "name": "setOptions",
            "params": [
                {
                    "name": "options",
                    "description": "Options object as passed to the constructor",
                    "type": "Object"
                }
            ],
            "class": "inputEx.ImageCropperField",
            "module": "inputex-imagecropper"
        },
        {
            "file": "src/imagecropper/js/imagecropper.js",
            "line": 47,
            "description": "Render",
            "itemtype": "method",
            "name": "renderComponent",
            "class": "inputEx.ImageCropperField",
            "module": "inputex-imagecropper"
        },
        {
            "file": "src/imagecropper/js/imagecropper.js",
            "line": 72,
            "description": "Set the value",
            "itemtype": "method",
            "name": "setValue",
            "class": "inputEx.ImageCropperField",
            "module": "inputex-imagecropper"
        },
        {
            "file": "src/imagecropper/js/imagecropper.js",
            "line": 105,
            "itemtype": "method",
            "name": "getValue",
            "class": "inputEx.ImageCropperField",
            "module": "inputex-imagecropper"
        },
        {
            "file": "src/imagecropper/js/imagecropper.js",
            "line": 112,
            "itemtype": "method",
            "name": "initEvents",
            "class": "inputEx.ImageCropperField",
            "module": "inputex-imagecropper"
        },
        {
            "file": "src/imagecropper/js/imagecropper.js",
            "line": 120,
            "itemtype": "method",
            "name": "_onMouseDown",
            "access": "private",
            "tagname": "",
            "class": "inputEx.ImageCropperField",
            "module": "inputex-imagecropper"
        },
        {
            "file": "src/imagecropper/js/imagecropper.js",
            "line": 149,
            "itemtype": "method",
            "name": "_onMouseMove",
            "access": "private",
            "tagname": "",
            "class": "inputEx.ImageCropperField",
            "module": "inputex-imagecropper"
        },
        {
            "file": "src/imagecropper/js/imagecropper.js",
            "line": 179,
            "itemtype": "method",
            "name": "_contrain",
            "access": "private",
            "tagname": "",
            "class": "inputEx.ImageCropperField",
            "module": "inputex-imagecropper"
        },
        {
            "file": "src/inplaceedit/js/inplaceedit.js",
            "line": 27,
            "description": "Set the default values of the options",
            "itemtype": "method",
            "name": "setOptions",
            "params": [
                {
                    "name": "options",
                    "description": "Options object as passed to the constructor",
                    "type": "Object"
                }
            ],
            "class": "inputEx.InPlaceEdit",
            "module": "inputex-inplaceedit"
        },
        {
            "file": "src/inplaceedit/js/inplaceedit.js",
            "line": 100,
            "description": "Override renderComponent to create 2 divs: the visualization one, and the edit in place form",
            "itemtype": "method",
            "name": "renderComponent",
            "class": "inputEx.InPlaceEdit",
            "module": "inputex-inplaceedit"
        },
        {
            "file": "src/inplaceedit/js/inplaceedit.js",
            "line": 109,
            "description": "Render the editor",
            "itemtype": "method",
            "name": "renderEditor",
            "class": "inputEx.InPlaceEdit",
            "module": "inputex-inplaceedit"
        },
        {
            "file": "src/inplaceedit/js/inplaceedit.js",
            "line": 143,
            "description": "Set the color when hovering the field",
            "itemtype": "method",
            "name": "onVisuMouseOver",
            "params": [
                {
                    "name": "e",
                    "description": "The original mouseover event",
                    "type": "Event"
                }
            ],
            "class": "inputEx.InPlaceEdit",
            "module": "inputex-inplaceedit"
        },
        {
            "file": "src/inplaceedit/js/inplaceedit.js",
            "line": 160,
            "description": "Start the color animation when hovering the field",
            "itemtype": "method",
            "name": "onVisuMouseOut",
            "params": [
                {
                    "name": "e",
                    "description": "The original mouseout event",
                    "type": "Event"
                }
            ],
            "class": "inputEx.InPlaceEdit",
            "module": "inputex-inplaceedit"
        },
        {
            "file": "src/inplaceedit/js/inplaceedit.js",
            "line": 202,
            "description": "Create the div that will contain the visualization of the value",
            "itemtype": "method",
            "name": "renderVisuDiv",
            "class": "inputEx.InPlaceEdit",
            "module": "inputex-inplaceedit"
        },
        {
            "file": "src/inplaceedit/js/inplaceedit.js",
            "line": 223,
            "description": "Adds the events for the editor and color animations",
            "itemtype": "method",
            "name": "initEvents",
            "class": "inputEx.InPlaceEdit",
            "module": "inputex-inplaceedit"
        },
        {
            "file": "src/inplaceedit/js/inplaceedit.js",
            "line": 244,
            "description": "Handle some keys events to close the editor",
            "itemtype": "method",
            "name": "onKeyUp",
            "params": [
                {
                    "name": "e",
                    "description": "The original keyup event",
                    "type": "Event"
                }
            ],
            "class": "inputEx.InPlaceEdit",
            "module": "inputex-inplaceedit"
        },
        {
            "file": "src/inplaceedit/js/inplaceedit.js",
            "line": 260,
            "description": "Handle the tabulation key to close the editor",
            "itemtype": "method",
            "name": "onKeyDown",
            "params": [
                {
                    "name": "e",
                    "description": "The original keydown event",
                    "type": "Event"
                }
            ],
            "class": "inputEx.InPlaceEdit",
            "module": "inputex-inplaceedit"
        },
        {
            "file": "src/inplaceedit/js/inplaceedit.js",
            "line": 272,
            "description": "Validate the editor (ok button, enter key or tabulation key)",
            "itemtype": "method",
            "name": "onOkEditor",
            "class": "inputEx.InPlaceEdit",
            "module": "inputex-inplaceedit"
        },
        {
            "file": "src/inplaceedit/js/inplaceedit.js",
            "line": 293,
            "description": "Close the editor on cancel (cancel button, blur event or escape key)",
            "itemtype": "method",
            "name": "onCancelEditor",
            "params": [
                {
                    "name": "e",
                    "description": "The original event (click, blur or keydown)",
                    "type": "Event"
                }
            ],
            "class": "inputEx.InPlaceEdit",
            "module": "inputex-inplaceedit"
        },
        {
            "file": "src/inplaceedit/js/inplaceedit.js",
            "line": 305,
            "description": "Close the editor on cancel (cancel button, blur event or escape key)",
            "itemtype": "method",
            "name": "closeEditor",
            "params": [
                {
                    "name": "e",
                    "description": "The original event (click, blur or keydown)",
                    "type": "Event"
                }
            ],
            "class": "inputEx.InPlaceEdit",
            "module": "inputex-inplaceedit"
        },
        {
            "file": "src/inplaceedit/js/inplaceedit.js",
            "line": 316,
            "description": "Override enable to Enable openEditor",
            "itemtype": "method",
            "name": "enable",
            "class": "inputEx.InPlaceEdit",
            "module": "inputex-inplaceedit"
        },
        {
            "file": "src/inplaceedit/js/inplaceedit.js",
            "line": 325,
            "description": "Override disable to Disable openEditor",
            "itemtype": "method",
            "name": "disable",
            "class": "inputEx.InPlaceEdit",
            "module": "inputex-inplaceedit"
        },
        {
            "file": "src/inplaceedit/js/inplaceedit.js",
            "line": 334,
            "description": "Display the editor",
            "itemtype": "method",
            "name": "openEditor",
            "class": "inputEx.InPlaceEdit",
            "module": "inputex-inplaceedit"
        },
        {
            "file": "src/inplaceedit/js/inplaceedit.js",
            "line": 361,
            "description": "Returned the previously stored value",
            "itemtype": "method",
            "name": "getValue",
            "return": {
                "description": "The value of the subfield",
                "type": "Any"
            },
            "class": "inputEx.InPlaceEdit",
            "module": "inputex-inplaceedit"
        },
        {
            "file": "src/inplaceedit/js/inplaceedit.js",
            "line": 371,
            "description": "Set the value and update the display",
            "itemtype": "method",
            "name": "setValue",
            "params": [
                {
                    "name": "value",
                    "description": "The value to set",
                    "type": "Any"
                },
                {
                    "name": "sendUpdatedEvt",
                    "description": "(optional) Wether this setValue should fire the 'updated'\nevent or not (default is true, pass false to NOT send the event)",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "inputEx.InPlaceEdit",
            "module": "inputex-inplaceedit"
        },
        {
            "file": "src/inplaceedit/js/inplaceedit.js",
            "line": 397,
            "description": "Close the editor when calling the close function on this field",
            "itemtype": "method",
            "name": "close",
            "class": "inputEx.InPlaceEdit",
            "module": "inputex-inplaceedit"
        },
        {
            "file": "src/inputex/js/inputex.js",
            "line": 58,
            "description": "Url to the spacer image. This url schould be changed according to your project directories",
            "itemtype": "property",
            "name": "spacerUrl",
            "type": "String",
            "class": "inputEx",
            "module": "inputex"
        },
        {
            "file": "src/inputex/js/inputex.js",
            "line": 65,
            "description": "Field empty state constant",
            "itemtype": "property",
            "name": "stateEmpty",
            "type": "String",
            "class": "inputEx",
            "module": "inputex"
        },
        {
            "file": "src/inputex/js/inputex.js",
            "line": 72,
            "description": "Field required state constant",
            "itemtype": "property",
            "name": "stateRequired",
            "type": "String",
            "class": "inputEx",
            "module": "inputex"
        },
        {
            "file": "src/inputex/js/inputex.js",
            "line": 79,
            "description": "Field valid state constant",
            "itemtype": "property",
            "name": "stateValid",
            "type": "String",
            "class": "inputEx",
            "module": "inputex"
        },
        {
            "file": "src/inputex/js/inputex.js",
            "line": 86,
            "description": "Field invalid state constant",
            "itemtype": "property",
            "name": "stateInvalid",
            "type": "String",
            "class": "inputEx",
            "module": "inputex"
        },
        {
            "file": "src/inputex/js/inputex.js",
            "line": 93,
            "description": "Associative array containing field messages => using intl module from YUI",
            "itemtype": "property",
            "name": "messages",
            "class": "inputEx",
            "module": "inputex"
        },
        {
            "file": "src/inputex/js/inputex.js",
            "line": 113,
            "description": "Associative array containing common regular expressions",
            "itemtype": "property",
            "name": "regexps",
            "class": "inputEx.mixin",
            "module": "inputex"
        },
        {
            "file": "src/inputex/js/inputex.js",
            "line": 122,
            "description": "Hash between inputEx types and classes (ex: <code>inputEx.typeClasses.color = inputEx.ColorField</code>)<br />\nPlease register the types with the <code>registerType</code> method",
            "itemtype": "property",
            "name": "typeClasses",
            "class": "inputEx.mixin",
            "module": "inputex"
        },
        {
            "file": "src/inputex/js/inputex.js",
            "line": 129,
            "description": "Property to globally turn on/off the browser autocompletion\nPossible values: \"on\", \"off\"",
            "itemtype": "property",
            "name": "browserAutocomplete",
            "class": "inputEx.mixin",
            "module": "inputex"
        },
        {
            "file": "src/inputex/js/inputex.js",
            "line": 136,
            "description": "When you create a new inputEx Field Class, you can register it to give it a simple type.\nex:   inputEx.registerType(\"color\", inputEx.ColorField);",
            "itemtype": "method",
            "name": "registerType",
            "static": 1,
            "params": [
                {
                    "name": "type",
                    "description": "String used as the inputEx field type",
                    "type": "String"
                },
                {
                    "name": "fieldClass",
                    "description": "Field Class to register as this type",
                    "type": "Class"
                },
                {
                    "name": "groupOptions",
                    "description": "List of inputEx field description for each option",
                    "type": "Array"
                },
                {
                    "name": "dontInherit",
                    "description": "Won't inherhit the parent field properties if set to true",
                    "type": "Boolean"
                }
            ],
            "class": "inputEx.mixin",
            "module": "inputex"
        },
        {
            "file": "src/inputex/js/inputex.js",
            "line": 164,
            "description": "Returns the class for the given type\nex: inputEx.getFieldClass(\"color\") returns inputEx.ColorField",
            "itemtype": "method",
            "name": "getFieldClass",
            "static": 1,
            "params": [
                {
                    "name": "type",
                    "description": "String type of the field",
                    "type": "String"
                }
            ],
            "class": "inputEx.mixin",
            "module": "inputex"
        },
        {
            "file": "src/inputex/js/inputex.js",
            "line": 175,
            "description": "Get the inputex type for the given class (ex: <code>inputEx.getType(inputEx.ColorField)</code> returns \"color\")",
            "itemtype": "method",
            "name": "getType",
            "static": 1,
            "params": [
                {
                    "name": "FieldClass",
                    "description": "An inputEx.Field or derivated class",
                    "type": "inputEx.Field"
                }
            ],
            "return": {
                "description": "returns the inputEx type string or <code>null</code>",
                "type": "String"
            },
            "class": "inputEx.mixin",
            "module": "inputex"
        },
        {
            "file": "src/inputex/js/inputex.js",
            "line": 194,
            "description": "Return recursively the inputex modules from their 'type' property using (modulesByType from loader.js)",
            "itemtype": "method",
            "name": "getRawModulesFromDefinition",
            "static": 1,
            "class": "inputEx.mixin",
            "module": "inputex"
        },
        {
            "file": "src/inputex/js/inputex.js",
            "line": 222,
            "description": "Return unique modules definitions",
            "itemtype": "method",
            "name": "getModulesFromDefinition",
            "static": 1,
            "class": "inputEx.mixin",
            "module": "inputex"
        },
        {
            "file": "src/inputex/js/inputex.js",
            "line": 232,
            "description": "Load the modules from an inputEx definition",
            "itemtype": "method",
            "name": "use",
            "static": 1,
            "class": "inputEx.mixin",
            "module": "inputex"
        },
        {
            "file": "src/inputex/js/inputex.js",
            "line": 249,
            "description": "Helper function to set DOM node attributes and style attributes.",
            "itemtype": "method",
            "name": "sn",
            "static": 1,
            "params": [
                {
                    "name": "el",
                    "description": "The element to set attributes to",
                    "type": "HTMLElement"
                },
                {
                    "name": "domAttributes",
                    "description": "An object containing key/value pairs to set as node attributes (ex: {id: 'myElement', className: 'myCssClass', ...})",
                    "type": "Object"
                },
                {
                    "name": "styleAttributes",
                    "description": "Same thing for style attributes. Please use camelCase for style attributes (ex: backgroundColor for 'background-color')",
                    "type": "Object"
                }
            ],
            "class": "inputEx.mixin",
            "module": "inputex"
        },
        {
            "file": "src/inputex/js/inputex.js",
            "line": 298,
            "description": "Helper function to create a DOM node. (wrapps the document.createElement tag and the inputEx.sn functions)",
            "itemtype": "method",
            "name": "cn",
            "static": 1,
            "params": [
                {
                    "name": "tag",
                    "description": "The tagName to create (ex: 'div', 'a', ...)",
                    "type": "String"
                },
                {
                    "name": "domAttributes",
                    "description": "see inputEx.sn",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "styleAttributes",
                    "description": "see inputEx.sn",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "innerHTML",
                    "description": "The html string to append into the created element",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "The created node",
                "type": "HTMLElement"
            },
            "class": "inputEx.mixin",
            "module": "inputex"
        },
        {
            "file": "src/inputex/js/inputex.js",
            "line": 330,
            "description": "Find the position of the given element. (This method is not available in IE 6)",
            "itemtype": "method",
            "name": "indexOf",
            "static": 1,
            "params": [
                {
                    "name": "el",
                    "description": "Value to search",
                    "type": "Object"
                },
                {
                    "name": "arr",
                    "description": "The array to search",
                    "type": "Array"
                },
                {
                    "name": "(optional)",
                    "description": "fn A function to define another way to test inclusion of el than === (returns a boolean)",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Element position, -1 if not found",
                "type": "Number"
            },
            "class": "inputEx.mixin",
            "module": "inputex"
        },
        {
            "file": "src/inputex/js/inputex.js",
            "line": 352,
            "description": "Create a new array without the null or undefined values",
            "itemtype": "method",
            "name": "compactArray",
            "static": 1,
            "params": [
                {
                    "name": "arr",
                    "description": "The array to compact",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "The new array",
                "type": "Array"
            },
            "class": "inputEx.mixin",
            "module": "inputex"
        },
        {
            "file": "src/inputex/js/inputex.js",
            "line": 368,
            "description": "String replaced by some html entities",
            "itemtype": "method",
            "name": "htmlEntities",
            "static": 1,
            "params": [
                {
                    "name": "str",
                    "description": "The string",
                    "type": "String"
                }
            ],
            "return": {
                "description": "String replaced by some html entities",
                "type": "String"
            },
            "class": "inputEx.mixin",
            "module": "inputex"
        },
        {
            "file": "src/integer/js/integer.js",
            "line": 22,
            "description": "Adds the negative, min, and max options",
            "itemtype": "method",
            "name": "setOptions",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "inputEx.IntegerField",
            "module": "inputex-integer"
        },
        {
            "file": "src/integer/js/integer.js",
            "line": 35,
            "description": "Get the value",
            "itemtype": "method",
            "name": "getValue",
            "return": {
                "description": "The integer value",
                "type": "Int"
            },
            "class": "inputEx.IntegerField",
            "module": "inputex-integer"
        },
        {
            "file": "src/integer/js/integer.js",
            "line": 55,
            "description": "Validate if the value is an integer",
            "itemtype": "method",
            "name": "validate",
            "class": "inputEx.IntegerField",
            "module": "inputex-integer"
        },
        {
            "file": "src/ipv4/js/ipv4.js",
            "line": 18,
            "description": "set IPv4 regexp and invalid string",
            "itemtype": "method",
            "name": "setOptions",
            "params": [
                {
                    "name": "options",
                    "description": "Options object as passed to the constructor",
                    "type": "Object"
                }
            ],
            "class": "inputEx.IPv4Field",
            "module": "inputex-ipv4"
        },
        {
            "file": "src/jsonschema/js/jsonschema.js",
            "line": 30,
            "description": "Convert the inputEx JSON fields to a JSON schema",
            "itemtype": "method",
            "name": "inputExToSchema",
            "static": 1,
            "class": "inputEx.JsonSchema",
            "module": "inputex-jsonschema"
        },
        {
            "file": "src/jsonschema/js/jsonschema.js",
            "line": 197,
            "description": "return a schema based on the reference value default is to look up in map",
            "itemtype": "method",
            "name": "defaultReferenceResolver",
            "class": "inputEx.JsonSchema.Builder",
            "module": "inputex-jsonschema"
        },
        {
            "file": "src/jsonschema/js/jsonschema.js",
            "line": 205,
            "description": "Convert a JSON schema to inputEx JSON",
            "itemtype": "method",
            "name": "schemaToInputEx",
            "params": [
                {
                    "name": "p",
                    "description": "",
                    "type": "JSONSchema"
                }
            ],
            "class": "inputEx.JsonSchema.Builder",
            "module": "inputex-jsonschema"
        },
        {
            "file": "src/jsonschema/js/jsonschema.js",
            "line": 404,
            "description": "Create an inputEx Json form definition from a json schema instance object\nRespect the \"Self-Defined Schema Convention\"",
            "itemtype": "method",
            "name": "formFromInstance",
            "class": "inputEx.JsonSchema.Builder",
            "module": "inputex-jsonschema"
        },
        {
            "file": "src/jsontreeinspector/js/jsontreeinspector.js",
            "line": 17,
            "description": "Hash to contain the values indexed by li ids",
            "itemtype": "property",
            "name": "hash",
            "class": "inputEx.widget.JsonTreeInspector",
            "module": "inputex-jsontreeinspector"
        },
        {
            "file": "src/jsontreeinspector/js/jsontreeinspector.js",
            "line": 23,
            "description": "Main div element",
            "itemtype": "property",
            "name": "el",
            "class": "inputEx.widget.JsonTreeInspector",
            "module": "inputex-jsontreeinspector"
        },
        {
            "file": "src/jsontreeinspector/js/jsontreeinspector.js",
            "line": 41,
            "description": "Destroy the widget",
            "itemtype": "method",
            "name": "destroy",
            "class": "inputEx.widget.JsonTreeInspector",
            "module": "inputex-jsontreeinspector"
        },
        {
            "file": "src/jsontreeinspector/js/jsontreeinspector.js",
            "line": 56,
            "description": "Build the sub-branch for obj",
            "itemtype": "method",
            "name": "buildBranch",
            "class": "inputEx.widget.JsonTreeInspector",
            "module": "inputex-jsontreeinspector"
        },
        {
            "file": "src/jsontreeinspector/js/jsontreeinspector.js",
            "line": 118,
            "description": "When the user click on a node",
            "itemtype": "method",
            "name": "onItemClick",
            "class": "inputEx.widget.JsonTreeInspector",
            "module": "inputex-jsontreeinspector"
        },
        {
            "file": "src/jsontreeinspector/js/jsontreeinspector.js",
            "line": 132,
            "description": "expand the node given the li element",
            "itemtype": "method",
            "name": "expandElement",
            "class": "inputEx.widget.JsonTreeInspector",
            "module": "inputex-jsontreeinspector"
        },
        {
            "file": "src/jsontreeinspector/js/jsontreeinspector.js",
            "line": 157,
            "description": "Expand a branch given a li element",
            "itemtype": "method",
            "name": "expandBranch",
            "params": [
                {
                    "name": "li",
                    "description": "",
                    "type": "HTMLElement"
                },
                {
                    "name": "maxLevel",
                    "description": "",
                    "type": "Integer"
                }
            ],
            "class": "inputEx.widget.JsonTreeInspector",
            "module": "inputex-jsontreeinspector"
        },
        {
            "file": "src/jsontreeinspector/js/jsontreeinspector.js",
            "line": 177,
            "description": "Expand the root node",
            "itemtype": "method",
            "name": "expandAll",
            "params": [
                {
                    "name": "maxLevel",
                    "description": "",
                    "type": "Integer"
                }
            ],
            "class": "inputEx.widget.JsonTreeInspector",
            "module": "inputex-jsontreeinspector"
        },
        {
            "file": "src/keyopvalue/js/keyopvalue.js",
            "line": 19,
            "description": "Setup the options.fields from the availableFields option",
            "itemtype": "method",
            "name": "setOptions",
            "class": "inputEx.KeyOpValueField",
            "module": "inputex-keyopvalue"
        },
        {
            "file": "src/keyvalue/js/keyvalue.js",
            "line": 19,
            "description": "Subscribe the \"updated\" event on the key selector",
            "itemtype": "method",
            "name": "initEvents",
            "class": "inputEx.KeyValueField",
            "module": "inputex-keyvalue"
        },
        {
            "file": "src/keyvalue/js/keyvalue.js",
            "line": 30,
            "description": "Generate",
            "itemtype": "method",
            "name": "generateSelectConfig",
            "class": "inputEx.KeyValueField",
            "module": "inputex-keyvalue"
        },
        {
            "file": "src/keyvalue/js/keyvalue.js",
            "line": 62,
            "description": "Setup the options.fields from the availableFields option",
            "itemtype": "method",
            "name": "setOptions",
            "class": "inputEx.KeyValueField",
            "module": "inputex-keyvalue"
        },
        {
            "file": "src/keyvalue/js/keyvalue.js",
            "line": 83,
            "description": "Rebuild the value field",
            "itemtype": "method",
            "name": "onSelectFieldChange",
            "class": "inputEx.KeyValueField",
            "module": "inputex-keyvalue"
        },
        {
            "file": "src/lens/js/lens.js",
            "line": 24,
            "description": "Set additional options",
            "itemtype": "method",
            "name": "setOptions",
            "class": "inputEx.Lens",
            "module": "inputex-lens"
        },
        {
            "file": "src/lens/js/lens.js",
            "line": 48,
            "description": "Render each the fields in each div which class attribute is \"field-\"+fieldName",
            "itemtype": "method",
            "name": "renderFields",
            "class": "inputEx.Lens",
            "module": "inputex-lens"
        },
        {
            "file": "src/linkedcombo/js/linkedcombo.js",
            "line": 29,
            "description": "Set the default values of the options",
            "itemtype": "method",
            "name": "setOptions",
            "params": [
                {
                    "name": "options",
                    "description": "Options object as passed to the constructor",
                    "type": "Object"
                }
            ],
            "class": "inputEx.LinkedComboField",
            "module": "inputex-linkedcombo"
        },
        {
            "file": "src/linkedcombo/js/linkedcombo.js",
            "line": 40,
            "description": "Build two select fields",
            "itemtype": "method",
            "name": "renderComponent",
            "class": "inputEx.LinkedComboField",
            "module": "inputex-linkedcombo"
        },
        {
            "file": "src/linkedcombo/js/linkedcombo.js",
            "line": 108,
            "itemtype": "method",
            "name": "initEvents",
            "class": "inputEx.LinkedComboField",
            "module": "inputex-linkedcombo"
        },
        {
            "file": "src/linkedcombo/js/linkedcombo.js",
            "line": 138,
            "description": "adapt choices of 2nd select relatively to 1st select value",
            "itemtype": "method",
            "name": "updateSecondSelectChoices",
            "class": "inputEx.LinkedComboField",
            "module": "inputex-linkedcombo"
        },
        {
            "file": "src/linkedcombo/js/linkedcombo.js",
            "line": 168,
            "description": "Set the value",
            "itemtype": "method",
            "name": "setValue",
            "params": [
                {
                    "name": "value",
                    "description": "The value to set",
                    "type": "String"
                },
                {
                    "name": "sendUpdatedEvt",
                    "description": "(optional) Whether this setValue should fire the 'updated' event or not (default is true, pass false to NOT send the event)",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "inputEx.LinkedComboField",
            "module": "inputex-linkedcombo"
        },
        {
            "file": "src/linkedcombo/js/linkedcombo.js",
            "line": 189,
            "description": "Return the value",
            "itemtype": "method",
            "name": "getValue",
            "return": {
                "description": "the selected value",
                "type": "Any"
            },
            "class": "inputEx.LinkedComboField",
            "module": "inputex-linkedcombo"
        },
        {
            "file": "src/linkedcombo/js/linkedcombo.js",
            "line": 199,
            "description": "Custom way of detecting the emptiness of the field",
            "itemtype": "method",
            "name": "isEmpty",
            "return": {
                "description": "field emptiness (true/false)",
                "type": "Boolean"
            },
            "class": "inputEx.LinkedComboField",
            "module": "inputex-linkedcombo"
        },
        {
            "file": "src/linkedcombo/js/linkedcombo.js",
            "line": 208,
            "description": "Validation of the field",
            "itemtype": "method",
            "name": "validate",
            "return": {
                "description": "field validation status (true/false)",
                "type": "Boolean"
            },
            "class": "inputEx.LinkedComboField",
            "module": "inputex-linkedcombo"
        },
        {
            "file": "src/list/js/list.js",
            "line": 26,
            "description": "List of all the subField instances",
            "itemtype": "property",
            "name": "subFields",
            "class": "inputEx.ListField",
            "module": "inputex-list"
        },
        {
            "file": "src/list/js/list.js",
            "line": 36,
            "description": "Colors for the animation",
            "itemtype": "property",
            "name": "arrowAnimColors",
            "class": "inputEx.ListField",
            "module": "inputex-list"
        },
        {
            "file": "src/list/js/list.js",
            "line": 45,
            "description": "Set the ListField classname",
            "itemtype": "method",
            "name": "setOptions",
            "params": [
                {
                    "name": "options",
                    "description": "Options object as passed to the constructor",
                    "type": "Object"
                }
            ],
            "class": "inputEx.ListField",
            "module": "inputex-list"
        },
        {
            "file": "src/list/js/list.js",
            "line": 69,
            "description": "Render the addButton",
            "itemtype": "method",
            "name": "renderComponent",
            "class": "inputEx.ListField",
            "module": "inputex-list"
        },
        {
            "file": "src/list/js/list.js",
            "line": 95,
            "description": "Handle the click event on the add button",
            "itemtype": "method",
            "name": "initEvents",
            "class": "inputEx.ListField",
            "module": "inputex-list"
        },
        {
            "file": "src/list/js/list.js",
            "line": 103,
            "description": "Validate each field",
            "itemtype": "method",
            "name": "validate",
            "return": {
                "description": "true if all fields validate, required fields are not empty and unique constraint (if specified) is not violated",
                "type": "Boolean"
            },
            "class": "inputEx.ListField",
            "module": "inputex-list"
        },
        {
            "file": "src/list/js/list.js",
            "line": 143,
            "description": "Set the value of all the subfields",
            "itemtype": "method",
            "name": "setValue",
            "params": [
                {
                    "name": "value",
                    "description": "The list of values to set",
                    "type": "Array"
                },
                {
                    "name": "sendUpdatedEvt",
                    "description": "(optional) Wether this setValue should fire the 'updated' event or not (default is true, pass false to NOT send the event)",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "inputEx.ListField",
            "module": "inputex-list"
        },
        {
            "file": "src/list/js/list.js",
            "line": 176,
            "description": "Return the array of values",
            "itemtype": "method",
            "name": "getValue",
            "return": {
                "description": "The array",
                "type": "Array"
            },
            "class": "inputEx.ListField",
            "module": "inputex-list"
        },
        {
            "file": "src/list/js/list.js",
            "line": 189,
            "description": "Adds an element",
            "itemtype": "method",
            "name": "addElement",
            "params": [
                {
                    "name": "The",
                    "description": "initial value of the subfield to create",
                    "type": "Any"
                }
            ],
            "return": {
                "description": "SubField added instance",
                "type": "inputEx.Field"
            },
            "class": "inputEx.ListField",
            "module": "inputex-list"
        },
        {
            "file": "src/list/js/list.js",
            "line": 210,
            "description": "Re-set the name of all the fields (when we remove an element)",
            "itemtype": "method",
            "name": "resetAllNames",
            "class": "inputEx.ListField",
            "module": "inputex-list"
        },
        {
            "file": "src/list/js/list.js",
            "line": 223,
            "description": "Add a new element to the list and fire updated event",
            "itemtype": "method",
            "name": "onAddButton",
            "params": [
                {
                    "name": "e",
                    "description": "The original click event",
                    "type": "Event"
                }
            ],
            "class": "inputEx.ListField",
            "module": "inputex-list"
        },
        {
            "file": "src/list/js/list.js",
            "line": 246,
            "description": "Adds a new line to the List Field",
            "itemtype": "method",
            "name": "renderSubField",
            "params": [
                {
                    "name": "The",
                    "description": "initial value of the subfield to create",
                    "type": "Any"
                }
            ],
            "return": {
                "description": "instance of the created field (inputEx.Field or derivative)",
                "type": "inputEx.Field"
            },
            "class": "inputEx.ListField",
            "module": "inputex-list"
        },
        {
            "file": "src/list/js/list.js",
            "line": 306,
            "description": "Switch a subField with its previous one\nCalled when the user clicked on the up arrow of a sortable list",
            "itemtype": "method",
            "name": "onArrowUp",
            "params": [
                {
                    "name": "e",
                    "description": "Original click event",
                    "type": "Event"
                }
            ],
            "class": "inputEx.ListField",
            "module": "inputex-list"
        },
        {
            "file": "src/list/js/list.js",
            "line": 355,
            "description": "Switch a subField with its next one\nCalled when the user clicked on the down arrow of a sortable list",
            "itemtype": "method",
            "name": "onArrowDown",
            "params": [
                {
                    "name": "e",
                    "description": "Original click event",
                    "type": "Event"
                }
            ],
            "class": "inputEx.ListField",
            "module": "inputex-list"
        },
        {
            "file": "src/list/js/list.js",
            "line": 403,
            "description": "Called when the user clicked on a delete button.",
            "itemtype": "method",
            "name": "onDelete",
            "params": [
                {
                    "name": "e",
                    "description": "The original click event",
                    "type": "Event"
                }
            ],
            "class": "inputEx.ListField",
            "module": "inputex-list"
        },
        {
            "file": "src/list/js/list.js",
            "line": 443,
            "description": "Remove the line from the dom and the subField from the list.",
            "itemtype": "method",
            "name": "removeElement",
            "params": [
                {
                    "name": "index",
                    "description": "The index of the element to remove",
                    "type": "Integer"
                }
            ],
            "class": "inputEx.ListField",
            "module": "inputex-list"
        },
        {
            "file": "src/list/js/list.js",
            "line": 458,
            "description": "Clear the field by setting the field value to this.options.value",
            "itemtype": "method",
            "name": "clear",
            "params": [
                {
                    "name": "sendUpdatedEvt",
                    "description": "(optional) Wether this clear should fire the 'updated' event or not (default is true, pass false to NOT send the event)",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "inputEx.ListField",
            "module": "inputex-list"
        },
        {
            "file": "src/map/js/map.js",
            "line": 36,
            "itemtype": "method",
            "name": "setOptions",
            "class": "inputEx.MapField",
            "module": "inputex-map"
        },
        {
            "file": "src/map/js/map.js",
            "line": 56,
            "description": "Render the field using the appropriate mapping function",
            "itemtype": "method",
            "name": "renderComponent",
            "class": "inputEx.MapField",
            "module": "inputex-map"
        },
        {
            "file": "src/map/js/map.js",
            "line": 122,
            "itemtype": "method",
            "name": "initEvents",
            "class": "inputEx.MapField",
            "module": "inputex-map"
        },
        {
            "file": "src/map/js/map.js",
            "line": 150,
            "itemtype": "method",
            "name": "setValue",
            "class": "inputEx.MapField",
            "module": "inputex-map"
        },
        {
            "file": "src/map/js/map.js",
            "line": 167,
            "itemtype": "method",
            "name": "getValue",
            "class": "inputEx.MapField",
            "module": "inputex-map"
        },
        {
            "file": "src/menu/js/menu.js",
            "line": 46,
            "description": "Set the default values of the options",
            "itemtype": "method",
            "name": "setOptions",
            "params": [
                {
                    "name": "options",
                    "description": "Options object as passed to the constructor",
                    "type": "Object"
                }
            ],
            "class": "inputEx.MenuField",
            "module": "inputex-menu"
        },
        {
            "file": "src/menu/js/menu.js",
            "line": 73,
            "description": "Build a menu",
            "itemtype": "method",
            "name": "renderComponent",
            "class": "inputEx.MenuField",
            "module": "inputex-menu"
        },
        {
            "file": "src/menu/js/menu.js",
            "line": 84,
            "description": "Parse menuItems option to add ids, listeners, etc.",
            "itemtype": "method",
            "name": "renderMenu",
            "class": "inputEx.MenuField",
            "module": "inputex-menu"
        },
        {
            "file": "src/menu/js/menu.js",
            "line": 184,
            "itemtype": "method",
            "name": "initEvents",
            "class": "inputEx.MenuField",
            "module": "inputex-menu"
        },
        {
            "file": "src/menu/js/menu.js",
            "line": 191,
            "itemtype": "method",
            "name": "onItemClick",
            "class": "inputEx.MenuField",
            "module": "inputex-menu"
        },
        {
            "file": "src/menu/js/menu.js",
            "line": 228,
            "itemtype": "method",
            "name": "getValue",
            "class": "inputEx.MenuField",
            "module": "inputex-menu"
        },
        {
            "file": "src/menu/js/menu.js",
            "line": 235,
            "itemtype": "method",
            "name": "setValue",
            "class": "inputEx.MenuField",
            "module": "inputex-menu"
        },
        {
            "file": "src/multiautocomplete/js/multiautocomplete.js",
            "line": 22,
            "description": "Build the DDList",
            "itemtype": "method",
            "name": "renderComponent",
            "class": "inputEx.MultiAutoComplete",
            "module": "inputex-multiautocomplete"
        },
        {
            "file": "src/multiautocomplete/js/multiautocomplete.js",
            "line": 37,
            "description": "Additional options",
            "itemtype": "method",
            "name": "setOptions",
            "class": "inputEx.MultiAutoComplete",
            "module": "inputex-multiautocomplete"
        },
        {
            "file": "src/multiautocomplete/js/multiautocomplete.js",
            "line": 48,
            "description": "Handle item selection in the autocompleter to add it to the list",
            "itemtype": "method",
            "name": "itemSelectHandler",
            "class": "inputEx.MultiAutoComplete",
            "module": "inputex-multiautocomplete"
        },
        {
            "file": "src/multiautocomplete/js/multiautocomplete.js",
            "line": 66,
            "description": "Set the value",
            "itemtype": "method",
            "name": "setValue",
            "params": [
                {
                    "name": "value",
                    "description": "The value to set",
                    "type": "String"
                },
                {
                    "name": "sendUpdatedEvt",
                    "description": "(optional) Wether this setValue should fire the 'updated' event or not (default is true, pass false to NOT send the event)",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "inputEx.MultiAutoComplete",
            "module": "inputex-multiautocomplete"
        },
        {
            "file": "src/multiautocomplete/js/multiautocomplete.js",
            "line": 89,
            "description": "Return the value",
            "itemtype": "method",
            "name": "getValue",
            "return": {
                "description": "an array of selected values",
                "type": "Any"
            },
            "class": "inputEx.MultiAutoComplete",
            "module": "inputex-multiautocomplete"
        },
        {
            "file": "src/multiautocomplete/js/multiautocomplete.js",
            "line": 102,
            "description": "onChange event handler",
            "itemtype": "method",
            "name": "onChange",
            "params": [
                {
                    "name": "e",
                    "description": "The original 'change' event",
                    "type": "Event"
                }
            ],
            "class": "inputEx.MultiAutoComplete",
            "module": "inputex-multiautocomplete"
        },
        {
            "file": "src/multiautocomplete/js/multiautocomplete.js",
            "line": 114,
            "itemtype": "method",
            "name": "onBlur",
            "class": "inputEx.MultiAutoComplete",
            "module": "inputex-multiautocomplete"
        },
        {
            "file": "src/multiautocomplete/js/multiautocomplete.js",
            "line": 126,
            "itemtype": "method",
            "name": "stringifyValue",
            "class": "inputEx.MultiAutoComplete",
            "module": "inputex-multiautocomplete"
        },
        {
            "file": "src/multiselect/js/multiselect.js",
            "line": 24,
            "description": "Build the DDList",
            "itemtype": "method",
            "name": "renderComponent",
            "class": "inputEx.MultiSelectField",
            "module": "inputex-multiselect"
        },
        {
            "file": "src/multiselect/js/multiselect.js",
            "line": 40,
            "description": "Register the \"change\" event",
            "itemtype": "method",
            "name": "initEvents",
            "class": "inputEx.MultiSelectField",
            "module": "inputex-multiselect"
        },
        {
            "file": "src/multiselect/js/multiselect.js",
            "line": 49,
            "description": "Re-enable the option element when an item is removed by the user",
            "itemtype": "method",
            "name": "onItemRemoved",
            "class": "inputEx.MultiSelectField",
            "module": "inputex-multiselect"
        },
        {
            "file": "src/multiselect/js/multiselect.js",
            "line": 61,
            "description": "Add an item to the list when the select changed",
            "itemtype": "method",
            "name": "onAddNewItem",
            "class": "inputEx.MultiSelectField",
            "module": "inputex-multiselect"
        },
        {
            "file": "src/multiselect/js/multiselect.js",
            "line": 95,
            "description": "Set the value of the list",
            "itemtype": "method",
            "name": "setValue",
            "params": [
                {
                    "name": "value",
                    "description": "The value to set",
                    "type": "String"
                },
                {
                    "name": "sendUpdatedEvt",
                    "description": "(optional) Wether this setValue should fire the 'updated' event or not (default is true, pass false to NOT send the event)",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "inputEx.MultiSelectField",
            "module": "inputex-multiselect"
        },
        {
            "file": "src/number/js/number.js",
            "line": 19,
            "description": "Adds the min, and max options",
            "itemtype": "method",
            "name": "setOptions",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "inputEx.NumberField",
            "module": "inputex-number"
        },
        {
            "file": "src/number/js/number.js",
            "line": 30,
            "description": "Return a parsed float (javascript type number)",
            "itemtype": "method",
            "name": "getValue",
            "return": {
                "description": "The parsed float",
                "type": "Number"
            },
            "class": "inputEx.NumberField",
            "module": "inputex-number"
        },
        {
            "file": "src/number/js/number.js",
            "line": 50,
            "description": "Validate  if is a number",
            "itemtype": "method",
            "name": "validate",
            "class": "inputEx.NumberField",
            "module": "inputex-number"
        },
        {
            "file": "src/object/js/object.js",
            "line": 26,
            "description": "Convert the array of 2d elements to an javascript object",
            "itemtype": "method",
            "name": "getValue",
            "class": "inputEx.ObjectField",
            "module": "inputex-object"
        },
        {
            "file": "src/object/js/object.js",
            "line": 43,
            "description": "Convert the object into a list of pairs",
            "itemtype": "method",
            "name": "setValue",
            "class": "inputEx.ObjectField",
            "module": "inputex-object"
        },
        {
            "file": "src/panel/js/panel.js",
            "line": 19,
            "description": "Hide the panel\n(Must overide because the favicon on the UrlField stay do not desappear)",
            "itemtype": "method",
            "name": "hide",
            "class": "inputEx.Panel",
            "module": "inputex-panel"
        },
        {
            "file": "src/panel/js/panel.js",
            "line": 30,
            "description": "Show the panel",
            "itemtype": "method",
            "name": "show",
            "class": "inputEx.Panel",
            "module": "inputex-panel"
        },
        {
            "file": "src/password/js/password.js",
            "line": 25,
            "description": "Keep track of all instances, indexed by ids, for the password confirmation field",
            "itemtype": "property",
            "name": "byId",
            "static": 1,
            "class": "inputEx.PasswordField",
            "module": "inputex-password"
        },
        {
            "file": "src/password/js/password.js",
            "line": 34,
            "description": "Add the password regexp, strengthIndicator, capsLockWarning",
            "itemtype": "method",
            "name": "setOptions",
            "params": [
                {
                    "name": "options",
                    "description": "Options object as passed to the constructor",
                    "type": "Object"
                }
            ],
            "class": "inputEx.PasswordField",
            "module": "inputex-password"
        },
        {
            "file": "src/password/js/password.js",
            "line": 60,
            "description": "Set the el type to 'password'",
            "itemtype": "method",
            "name": "renderComponent",
            "class": "inputEx.PasswordField",
            "module": "inputex-password"
        },
        {
            "file": "src/password/js/password.js",
            "line": 114,
            "description": "Set this field as the confirmation for the targeted password field:",
            "itemtype": "method",
            "name": "setConfirmationField",
            "params": [
                {
                    "name": "passwordField",
                    "description": "The target password field",
                    "type": "inputEx.PasswordField"
                }
            ],
            "class": "inputEx.PasswordField",
            "module": "inputex-password"
        },
        {
            "file": "src/password/js/password.js",
            "line": 125,
            "description": "The validation adds the confirmation password field support",
            "itemtype": "method",
            "name": "validate",
            "class": "inputEx.PasswordField",
            "module": "inputex-password"
        },
        {
            "file": "src/password/js/password.js",
            "line": 138,
            "description": "Update the state of the confirmation field",
            "itemtype": "method",
            "name": "onInput",
            "params": [
                {
                    "name": "e",
                    "description": "The original input event",
                    "type": "Event"
                }
            ],
            "class": "inputEx.PasswordField",
            "module": "inputex-password"
        },
        {
            "file": "src/password/js/password.js",
            "line": 150,
            "description": "callback to display the capsLockWarning",
            "itemtype": "method",
            "name": "onKeyPress",
            "class": "inputEx.PasswordField",
            "module": "inputex-password"
        },
        {
            "file": "src/password/js/password.js",
            "line": 191,
            "description": "onkeyup callback to update the strength indicator",
            "itemtype": "method",
            "name": "onKeyUp",
            "class": "inputEx.PasswordField",
            "module": "inputex-password"
        },
        {
            "file": "src/password/js/password.js",
            "line": 202,
            "description": "Show or hide the caps lock warning given the status",
            "itemtype": "method",
            "name": "setCapsLockWarning",
            "class": "inputEx.PasswordField",
            "module": "inputex-password"
        },
        {
            "file": "src/password/js/password.js",
            "line": 210,
            "description": "Update the strength indicator (called by onKeyPress)",
            "itemtype": "method",
            "name": "updateStrenghtIndicator",
            "class": "inputEx.PasswordField",
            "module": "inputex-password"
        },
        {
            "file": "src/password/js/password.js",
            "line": 226,
            "description": "Return an integer within [0,100] that quantify the password strength\nFunction taken from Mozilla Code: (changed a little bit the values)\nhttp://lxr.mozilla.org/seamonkey/source/security/manager/pki/resources/content/password.js",
            "itemtype": "method",
            "name": "getPasswordStrength",
            "static": 1,
            "class": "inputEx.PasswordField",
            "module": "inputex-password"
        },
        {
            "file": "src/phone/js/phone.js",
            "line": 17,
            "description": "Adds the 'inputEx-PhoneField' default className",
            "itemtype": "method",
            "name": "setOptions",
            "params": [
                {
                    "name": "options",
                    "description": "Options object as passed to the constructor",
                    "type": "Object"
                }
            ],
            "class": "inputEx.PhoneField",
            "module": "inputex-phone"
        },
        {
            "file": "src/phone/js/phone.js",
            "line": 36,
            "description": "Render the color button and the colorpicker popup",
            "itemtype": "method",
            "name": "renderComponent",
            "class": "inputEx.PhoneField",
            "module": "inputex-phone"
        },
        {
            "file": "src/phone/js/phone.js",
            "line": 76,
            "itemtype": "method",
            "name": "getValue",
            "class": "inputEx.PhoneField",
            "module": "inputex-phone"
        },
        {
            "file": "src/phone/js/phone.js",
            "line": 83,
            "itemtype": "method",
            "name": "setValue",
            "class": "inputEx.PhoneField",
            "module": "inputex-phone"
        },
        {
            "file": "src/phone/js/phone.js",
            "line": 93,
            "itemtype": "method",
            "name": "_onPhoneClick",
            "access": "private",
            "tagname": "",
            "class": "inputEx.PhoneField",
            "module": "inputex-phone"
        },
        {
            "file": "src/radio/js/radio.js",
            "line": 25,
            "description": "Adds the Radio button specific options",
            "itemtype": "method",
            "name": "setOptions",
            "params": [
                {
                    "name": "options",
                    "description": "Options object as passed to the constructor",
                    "type": "Object"
                }
            ],
            "class": "inputEx.RadioField",
            "module": "inputex-radio"
        },
        {
            "file": "src/radio/js/radio.js",
            "line": 75,
            "description": "Render the checkbox and the hidden field",
            "itemtype": "method",
            "name": "renderComponent",
            "class": "inputEx.RadioField",
            "module": "inputex-radio"
        },
        {
            "file": "src/radio/js/radio.js",
            "line": 132,
            "description": "Listen for change events on all radios",
            "itemtype": "method",
            "name": "initEvents",
            "class": "inputEx.RadioField",
            "module": "inputex-radio"
        },
        {
            "file": "src/radio/js/radio.js",
            "line": 178,
            "description": "Add an additional class to the currently selected inputEx-RadioField-choice",
            "itemtype": "method",
            "name": "setSelectedClass",
            "class": "inputEx.RadioField",
            "module": "inputex-radio"
        },
        {
            "file": "src/radio/js/radio.js",
            "line": 197,
            "itemtype": "method",
            "name": "setClassFromState",
            "class": "inputEx.RadioField",
            "module": "inputex-radio"
        },
        {
            "file": "src/radio/js/radio.js",
            "line": 209,
            "description": "Function called when the checkbox is toggled",
            "itemtype": "method",
            "name": "onChange",
            "params": [
                {
                    "name": "e",
                    "description": "The original 'change' event",
                    "type": "Event"
                }
            ],
            "class": "inputEx.RadioField",
            "module": "inputex-radio"
        },
        {
            "file": "src/radio/js/radio.js",
            "line": 238,
            "description": "Get the field value",
            "itemtype": "method",
            "name": "getValue",
            "return": {
                "description": "",
                "type": "Any"
            },
            "class": "inputEx.RadioField",
            "module": "inputex-radio"
        },
        {
            "file": "src/radio/js/radio.js",
            "line": 264,
            "description": "Set the value of the Radio",
            "itemtype": "method",
            "name": "setValue",
            "params": [
                {
                    "name": "value",
                    "description": "The value schould be one of this.options.values (which defaults to this.options.choices if missing) if allowAny option not true.",
                    "type": "Any"
                },
                {
                    "name": "sendUpdatedEvt",
                    "description": "(optional) Wether this setValue should fire the updated event or not (default is true, pass false to NOT send the event)",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "inputEx.RadioField",
            "module": "inputex-radio"
        },
        {
            "file": "src/radio/js/radio.js",
            "line": 337,
            "description": "Clear the field by setting the field value to this.options.value",
            "itemtype": "method",
            "name": "clear",
            "params": [
                {
                    "name": "sendUpdatedEvt",
                    "description": "(optional) Wether this clear should fire the updated event or not (default is true, pass false to NOT send the event)",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "inputEx.RadioField",
            "module": "inputex-radio"
        },
        {
            "file": "src/radio/js/radio.js",
            "line": 351,
            "description": "Should return true if empty",
            "itemtype": "method",
            "name": "isEmpty",
            "class": "inputEx.RadioField",
            "module": "inputex-radio"
        },
        {
            "file": "src/radio/js/radio.js",
            "line": 385,
            "description": "Add extra validation if allowAny.validator is provided",
            "itemtype": "method",
            "name": "validate",
            "class": "inputEx.RadioField",
            "module": "inputex-radio"
        },
        {
            "file": "src/radio/js/radio.js",
            "line": 419,
            "description": "Disable the field",
            "itemtype": "method",
            "name": "disable",
            "class": "inputEx.RadioField",
            "module": "inputex-radio"
        },
        {
            "file": "src/radio/js/radio.js",
            "line": 435,
            "description": "Enable the field",
            "itemtype": "method",
            "name": "enable",
            "class": "inputEx.RadioField",
            "module": "inputex-radio"
        },
        {
            "file": "src/radio/js/radio.js",
            "line": 451,
            "itemtype": "method",
            "name": "createChoiceNode",
            "class": "inputEx.RadioField",
            "module": "inputex-radio"
        },
        {
            "file": "src/radio/js/radio.js",
            "line": 479,
            "itemtype": "method",
            "name": "removeChoiceNode",
            "class": "inputEx.RadioField",
            "module": "inputex-radio"
        },
        {
            "file": "src/radio/js/radio.js",
            "line": 493,
            "itemtype": "method",
            "name": "disableChoiceNode",
            "class": "inputEx.RadioField",
            "module": "inputex-radio"
        },
        {
            "file": "src/radio/js/radio.js",
            "line": 502,
            "itemtype": "method",
            "name": "enableChoiceNode",
            "class": "inputEx.RadioField",
            "module": "inputex-radio"
        },
        {
            "file": "src/radio/js/radio.js",
            "line": 512,
            "description": "Attach an <option> node to the <select> at the specified position",
            "itemtype": "method",
            "name": "appendChoiceNode",
            "params": [
                {
                    "name": "node",
                    "description": "The <option> node to attach to the <select>",
                    "type": "HTMLElement"
                },
                {
                    "name": "position",
                    "description": "The position of the choice in choicesList (may not be the \"real\" position in DOM)",
                    "type": "Int"
                }
            ],
            "class": "inputEx.RadioField",
            "module": "inputex-radio"
        },
        {
            "file": "src/ratingstars/js/ratingstars.js",
            "line": 59,
            "description": "Set message options of the selectField",
            "itemtype": "method",
            "name": "setMessage",
            "class": "inputEx.RatingStars",
            "module": "inputex-ratingstars"
        },
        {
            "file": "src/ratingstars/js/ratingstars.js",
            "line": 74,
            "description": "render stars",
            "itemtype": "method",
            "name": "render",
            "class": "inputEx.RatingStars",
            "module": "inputex-ratingstars"
        },
        {
            "file": "src/ratingstars/js/ratingstars.js",
            "line": 107,
            "description": "When mouse is over a star",
            "itemtype": "method",
            "name": "onHoverStar",
            "class": "inputEx.RatingStars",
            "module": "inputex-ratingstars"
        },
        {
            "file": "src/ratingstars/js/ratingstars.js",
            "line": 139,
            "description": "InitEvents",
            "itemtype": "method",
            "name": "initEvents",
            "class": "inputEx.RatingStars",
            "module": "inputex-ratingstars"
        },
        {
            "file": "src/ratingstars/js/ratingstars.js",
            "line": 146,
            "description": "reset Stars and note",
            "itemtype": "method",
            "name": "resetStars",
            "class": "inputEx.RatingStars",
            "module": "inputex-ratingstars"
        },
        {
            "file": "src/ratingstars/js/ratingstars.js",
            "line": 184,
            "description": "Tell something under the stars",
            "itemtype": "method",
            "name": "showMessage",
            "class": "inputEx.RatingStars",
            "module": "inputex-ratingstars"
        },
        {
            "file": "src/ratingstars/js/ratingstars.js",
            "line": 195,
            "description": "onAsync is called by the containing form when request is Send",
            "itemtype": "method",
            "name": "onAsync",
            "class": "inputEx.RatingStars",
            "module": "inputex-ratingstars"
        },
        {
            "file": "src/ratingstars/js/ratingstars.js",
            "line": 205,
            "itemtype": "method",
            "name": "onClickRating",
            "class": "inputEx.RatingStars",
            "module": "inputex-ratingstars"
        },
        {
            "file": "src/ratingstarsform/js/ratingstarsform.js",
            "line": 33,
            "description": "Set Options change default className and set fields options",
            "itemtype": "method",
            "name": "setOptions",
            "class": "inputEx.RatingStarsForm",
            "module": "inputex-ratingstarsform"
        },
        {
            "file": "src/ratingstarsform/js/ratingstarsform.js",
            "line": 51,
            "description": "Set fields option of the form",
            "itemtype": "method",
            "name": "setFields",
            "class": "inputEx.RatingStarsForm",
            "module": "inputex-ratingstarsform"
        },
        {
            "file": "src/ratingstarsform/js/ratingstarsform.js",
            "line": 65,
            "description": "subscribe rateEvt on each Field",
            "itemtype": "method",
            "name": "renderStatusEl",
            "class": "inputEx.RatingStarsForm",
            "module": "inputex-ratingstarsform"
        },
        {
            "file": "src/rpc/js/rpc.js",
            "line": 15,
            "description": "Build a form to run a service !",
            "itemtype": "method",
            "name": "generateServiceForm",
            "static": 1,
            "params": [
                {
                    "name": "method",
                    "description": "A method created through inputEx.RPC.Service",
                    "type": "Function"
                },
                {
                    "name": "formOpts",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "inputEx.RPC",
            "module": "inputex-rpc"
        },
        {
            "file": "src/rpc/js/rpc.js",
            "line": 64,
            "description": "Return the inputEx form options from a method",
            "itemtype": "method",
            "name": "formForMethod",
            "static": 1,
            "params": [
                {
                    "name": "method",
                    "description": "A method created through inputEx.RPC.Service",
                    "type": "Function"
                }
            ],
            "class": "inputEx.RPC",
            "module": "inputex-rpc"
        },
        {
            "file": "src/rpc/js/rpc.js",
            "line": 129,
            "description": "Generate the function from a service definition",
            "itemtype": "method",
            "name": "_generateService",
            "params": [
                {
                    "name": "serviceName",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "method",
                    "description": "",
                    "type": "Method definition"
                }
            ],
            "class": "inputEx.RPC.Service",
            "module": "inputex-rpc"
        },
        {
            "file": "src/rpc/js/rpc.js",
            "line": 207,
            "description": "Process the SMD definition",
            "itemtype": "method",
            "name": "process",
            "class": "inputEx.RPC.Service",
            "module": "inputex-rpc"
        },
        {
            "file": "src/rpc/js/rpc.js",
            "line": 238,
            "description": "Download the SMD at the given url",
            "itemtype": "method",
            "name": "fetch",
            "params": [
                {
                    "name": "Absolute",
                    "description": "or relative url",
                    "type": "String"
                }
            ],
            "class": "inputEx.RPC.Service",
            "module": "inputex-rpc"
        },
        {
            "file": "src/rpc/js/rpc.js",
            "line": 292,
            "description": "Build a ajax request using 'POST' method",
            "itemtype": "method",
            "name": "POST",
            "params": [
                {
                    "name": "r",
                    "description": "Object specifying target, callback and data attributes",
                    "type": "Object"
                }
            ],
            "class": "inputEx.RPC.Transport",
            "module": "inputex-rpc"
        },
        {
            "file": "src/rpc/js/rpc.js",
            "line": 307,
            "description": "Build a ajax request using 'GET' method",
            "itemtype": "method",
            "name": "GET",
            "params": [
                {
                    "name": "r",
                    "description": "Object specifying target, callback and data attributes",
                    "type": "Object"
                }
            ],
            "class": "inputEx.RPC.Transport",
            "module": "inputex-rpc"
        },
        {
            "file": "src/rpc/js/rpc.js",
            "line": 321,
            "description": "Build an ajax request using the right HTTP method",
            "itemtype": "method",
            "name": "REST",
            "params": [
                {
                    "name": "r",
                    "description": "Object specifying target, callback and data attributes",
                    "type": "Object"
                }
            ],
            "class": "inputEx.RPC.Transport",
            "module": "inputex-rpc"
        },
        {
            "file": "src/rpc/js/rpc.js",
            "line": 330,
            "description": "Receive data through JSONP (insert a script tag within the page)",
            "itemtype": "method",
            "name": "JSONP",
            "params": [
                {
                    "name": "r",
                    "description": "Object specifying target, callback and data attributes",
                    "type": "Object"
                }
            ],
            "class": "inputEx.RPC.Transport",
            "module": "inputex-rpc"
        },
        {
            "file": "src/rpc/js/rpc.js",
            "line": 348,
            "description": "NOT implemented",
            "itemtype": "method",
            "name": "TCP/IP",
            "class": "inputEx.RPC.Transport",
            "module": "inputex-rpc"
        },
        {
            "file": "src/rpc/js/rpc.js",
            "line": 373,
            "description": "Serialize data into URI encoded parameters",
            "itemtype": "method",
            "name": "serialize",
            "class": "inputEx.RPC.Envelope.URL",
            "module": "inputex-rpc"
        },
        {
            "file": "src/rpc/js/rpc.js",
            "line": 396,
            "description": "Deserialize",
            "itemtype": "method",
            "name": "deserialize",
            "class": "inputEx.RPC.Envelope.URL",
            "module": "inputex-rpc"
        },
        {
            "file": "src/rpc/js/rpc.js",
            "line": 411,
            "description": "serialize",
            "itemtype": "method",
            "name": "serialize",
            "class": "inputEx.RPC.Envelope.PATH",
            "module": "inputex-rpc"
        },
        {
            "file": "src/rpc/js/rpc.js",
            "line": 433,
            "description": "deserialize",
            "itemtype": "method",
            "name": "deserialize",
            "class": "inputEx.RPC.Envelope.PATH",
            "module": "inputex-rpc"
        },
        {
            "file": "src/rpc/js/rpc.js",
            "line": 448,
            "description": "serialize",
            "itemtype": "method",
            "name": "serialize",
            "class": "inputEx.RPC.Envelope.JSON",
            "module": "inputex-rpc"
        },
        {
            "file": "src/rpc/js/rpc.js",
            "line": 457,
            "description": "deserialize",
            "itemtype": "method",
            "name": "deserialize",
            "class": "inputEx.RPC.Envelope.JSON",
            "module": "inputex-rpc"
        },
        {
            "file": "src/rpc/js/rpc.js",
            "line": 472,
            "description": "serialize",
            "itemtype": "method",
            "name": "serialize",
            "class": "inputEx.RPC.Envelope.JSON-RPC-1.0",
            "module": "inputex-rpc"
        },
        {
            "file": "src/rpc/js/rpc.js",
            "line": 486,
            "description": "deserialize",
            "itemtype": "method",
            "name": "deserialize",
            "class": "inputEx.RPC.Envelope.JSON-RPC-1.0",
            "module": "inputex-rpc"
        },
        {
            "file": "src/rpc/js/rpc.js",
            "line": 501,
            "description": "serialize",
            "itemtype": "method",
            "name": "serialize",
            "class": "inputEx.RPC.Envelope.JSON-RPC-2.0",
            "module": "inputex-rpc"
        },
        {
            "file": "src/rpc/js/rpc.js",
            "line": 516,
            "description": "serialize",
            "itemtype": "method",
            "name": "deserialize",
            "class": "inputEx.RPC.Envelope.JSON-RPC-2.0",
            "module": "inputex-rpc"
        },
        {
            "file": "src/rte/js/rte.js",
            "line": 24,
            "description": "Set the default values of the options",
            "itemtype": "method",
            "name": "setOptions",
            "params": [
                {
                    "name": "options",
                    "description": "Options object as passed to the constructor",
                    "type": "Object"
                }
            ],
            "class": "inputEx.RTEField",
            "module": "inputex-rte"
        },
        {
            "file": "src/rte/js/rte.js",
            "line": 36,
            "description": "Render the field using the YUI Editor widget",
            "itemtype": "method",
            "name": "renderComponent",
            "class": "inputEx.RTEField",
            "module": "inputex-rte"
        },
        {
            "file": "src/rte/js/rte.js",
            "line": 104,
            "description": "Set the html content",
            "itemtype": "method",
            "name": "setValue",
            "params": [
                {
                    "name": "value",
                    "description": "The html string",
                    "type": "String"
                },
                {
                    "name": "sendUpdatedEvt",
                    "description": "(optional) Wether this setValue should fire the 'updated' event or not (default is true, pass false to NOT send the event)",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "inputEx.RTEField",
            "module": "inputex-rte"
        },
        {
            "file": "src/rte/js/rte.js",
            "line": 130,
            "description": "Get the html string",
            "itemtype": "method",
            "name": "getValue",
            "return": {
                "description": "the html string",
                "type": "String"
            },
            "class": "inputEx.RTEField",
            "module": "inputex-rte"
        },
        {
            "file": "src/select/js/select.js",
            "line": 23,
            "description": "Set the default values of the options",
            "itemtype": "method",
            "name": "setOptions",
            "params": [
                {
                    "name": "options",
                    "description": "Options object as passed to the constructor",
                    "type": "Object"
                }
            ],
            "class": "inputEx.SelectField",
            "module": "inputex-select"
        },
        {
            "file": "src/select/js/select.js",
            "line": 64,
            "description": "Build a select tag with options",
            "itemtype": "method",
            "name": "renderComponent",
            "class": "inputEx.SelectField",
            "module": "inputex-select"
        },
        {
            "file": "src/select/js/select.js",
            "line": 92,
            "description": "Register the \"change\" event",
            "itemtype": "method",
            "name": "initEventgs",
            "class": "inputEx.SelectField",
            "module": "inputex-select"
        },
        {
            "file": "src/select/js/select.js",
            "line": 102,
            "description": "Set the value",
            "itemtype": "method",
            "name": "setValue",
            "params": [
                {
                    "name": "value",
                    "description": "The value to set",
                    "type": "String"
                },
                {
                    "name": "sendUpdatedEvt",
                    "description": "(optional) Wether this setValue should fire the 'updated' event\nor not (default is true, pass false to NOT send the event)",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "inputEx.SelectField",
            "module": "inputex-select"
        },
        {
            "file": "src/select/js/select.js",
            "line": 187,
            "description": "Return the value",
            "itemtype": "method",
            "name": "getValue",
            "return": {
                "description": "the selected value",
                "type": "Any"
            },
            "class": "inputEx.SelectField",
            "module": "inputex-select"
        },
        {
            "file": "src/select/js/select.js",
            "line": 211,
            "description": "Disable the field",
            "itemtype": "method",
            "name": "disable",
            "class": "inputEx.SelectField",
            "module": "inputex-select"
        },
        {
            "file": "src/select/js/select.js",
            "line": 220,
            "description": "Enable the field",
            "itemtype": "method",
            "name": "enable",
            "class": "inputEx.SelectField",
            "module": "inputex-select"
        },
        {
            "file": "src/select/js/select.js",
            "line": 229,
            "itemtype": "method",
            "name": "createChoiceNode",
            "class": "inputEx.SelectField",
            "module": "inputex-select"
        },
        {
            "file": "src/select/js/select.js",
            "line": 238,
            "itemtype": "method",
            "name": "removeChoiceNode",
            "class": "inputEx.SelectField",
            "module": "inputex-select"
        },
        {
            "file": "src/select/js/select.js",
            "line": 252,
            "itemtype": "method",
            "name": "disableChoiceNode",
            "class": "inputEx.SelectField",
            "module": "inputex-select"
        },
        {
            "file": "src/select/js/select.js",
            "line": 261,
            "itemtype": "method",
            "name": "enableChoiceNode",
            "class": "inputEx.SelectField",
            "module": "inputex-select"
        },
        {
            "file": "src/select/js/select.js",
            "line": 270,
            "description": "Attach an <option> node to the <select> at the specified position",
            "itemtype": "method",
            "name": "appendChoiceNode",
            "params": [
                {
                    "name": "node",
                    "description": "The <option> node to attach to the <select>",
                    "type": "HTMLElement"
                },
                {
                    "name": "position",
                    "description": "The position of the choice in choicesList (may not be the \"real\" position in DOM)",
                    "type": "Int"
                }
            ],
            "class": "inputEx.SelectField",
            "module": "inputex-select"
        },
        {
            "file": "src/select/js/select.js",
            "line": 303,
            "description": "Add stringField setFieldName for classic form in group in listField",
            "itemtype": "method",
            "name": "setFieldName",
            "class": "inputEx.SelectField",
            "module": "inputex-select"
        },
        {
            "file": "src/serialize/js/serialize.js",
            "line": 19,
            "description": "Adds some options: subfield & serializer",
            "itemtype": "method",
            "name": "setOptions",
            "params": [
                {
                    "name": "options",
                    "description": "Options object as passed to the constructor",
                    "type": "Object"
                }
            ],
            "class": "inputEx.SerializeField",
            "module": "inputex-serialize"
        },
        {
            "file": "src/serialize/js/serialize.js",
            "line": 32,
            "description": "Render the subfield",
            "itemtype": "method",
            "name": "renderComponent",
            "class": "inputEx.SerializeField",
            "module": "inputex-serialize"
        },
        {
            "file": "src/serialize/js/serialize.js",
            "line": 46,
            "description": "Subscribe the subField",
            "itemtype": "method",
            "name": "initEvents",
            "class": "inputEx.SerializeField",
            "module": "inputex-serialize"
        },
        {
            "file": "src/serialize/js/serialize.js",
            "line": 55,
            "description": "Use the subField getValue and serialize it with the selected serializing method",
            "itemtype": "method",
            "name": "getValue",
            "class": "inputEx.SerializeField",
            "module": "inputex-serialize"
        },
        {
            "file": "src/serialize/js/serialize.js",
            "line": 64,
            "description": "Use the deserialize method and set the value of the subField",
            "itemtype": "method",
            "name": "setValue",
            "class": "inputEx.SerializeField",
            "module": "inputex-serialize"
        },
        {
            "file": "src/serialize/js/serialize.js",
            "line": 73,
            "description": "Use the configured serializer",
            "itemtype": "method",
            "name": "serialize",
            "class": "inputEx.SerializeField",
            "module": "inputex-serialize"
        },
        {
            "file": "src/serialize/js/serialize.js",
            "line": 81,
            "description": "Use the configured deserializer",
            "itemtype": "method",
            "name": "deserialize",
            "class": "inputEx.SerializeField",
            "module": "inputex-serialize"
        },
        {
            "file": "src/serialize/js/serialize.js",
            "line": 89,
            "description": "Sets the focus on this field",
            "itemtype": "method",
            "name": "focus",
            "class": "inputEx.SerializeField",
            "module": "inputex-serialize"
        },
        {
            "file": "src/serialize/js/serialize.js",
            "line": 113,
            "description": "serialize to JSON",
            "itemtype": "method",
            "name": "serialize",
            "static": 1,
            "class": "inputEx.SerializeField.serializers.json",
            "module": "inputex-serialize"
        },
        {
            "file": "src/serialize/js/serialize.js",
            "line": 122,
            "description": "deserialize from JSON",
            "itemtype": "method",
            "name": "deserialize",
            "static": 1,
            "class": "inputEx.SerializeField.serializers.json",
            "module": "inputex-serialize"
        },
        {
            "file": "src/serialize/js/serialize.js",
            "line": 139,
            "description": "serialize to XML",
            "itemtype": "method",
            "name": "serialize",
            "static": 1,
            "class": "inputEx.SerializeField.serializers.xml",
            "module": "inputex-serialize"
        },
        {
            "file": "src/serialize/js/serialize.js",
            "line": 153,
            "description": "deserialize from XML",
            "itemtype": "method",
            "name": "deserialize",
            "static": 1,
            "class": "inputEx.SerializeField.serializers.xml",
            "module": "inputex-serialize"
        },
        {
            "file": "src/slider/js/slider.js",
            "line": 18,
            "description": "Set the classname to 'inputEx-SliderField'",
            "itemtype": "method",
            "name": "setOptions",
            "params": [
                {
                    "name": "options",
                    "description": "Options object as passed to the constructor",
                    "type": "Object"
                }
            ],
            "class": "inputEx.SliderField",
            "module": "inputex-slider"
        },
        {
            "file": "src/slider/js/slider.js",
            "line": 34,
            "description": "render a slider widget",
            "itemtype": "method",
            "name": "renderComponent",
            "class": "inputEx.SliderField",
            "module": "inputex-slider"
        },
        {
            "file": "src/slider/js/slider.js",
            "line": 60,
            "itemtype": "method",
            "name": "initEvents",
            "class": "inputEx.SliderField",
            "module": "inputex-slider"
        },
        {
            "file": "src/slider/js/slider.js",
            "line": 77,
            "description": "Function to set the value",
            "itemtype": "method",
            "name": "setValue",
            "params": [
                {
                    "name": "value",
                    "description": "The new value",
                    "type": "Any"
                },
                {
                    "name": "sendUpdatedEvt",
                    "description": "(optional) Wether this setValue should fire the 'updated' event or not (default is true, pass false to NOT send the event)",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "inputEx.SliderField",
            "module": "inputex-slider"
        },
        {
            "file": "src/slider/js/slider.js",
            "line": 100,
            "description": "Get the value from the slider",
            "itemtype": "method",
            "name": "getValue",
            "return": {
                "description": "The integer value",
                "type": "Int"
            },
            "class": "inputEx.SliderField",
            "module": "inputex-slider"
        },
        {
            "file": "src/smdtester/js/smdtester.js",
            "line": 60,
            "description": "When the user select a SMD in the select",
            "itemtype": "method",
            "name": "loadSMD",
            "class": "inputEx.RPC.SMDTester",
            "module": "inputex-smdtester"
        },
        {
            "file": "src/smdtester/js/smdtester.js",
            "line": 72,
            "description": "When the SMD has been loaded",
            "itemtype": "method",
            "name": "onServiceLoaded",
            "class": "inputEx.RPC.SMDTester",
            "module": "inputex-smdtester"
        },
        {
            "file": "src/smdtester/js/smdtester.js",
            "line": 112,
            "description": "When a method has been selected :",
            "itemtype": "method",
            "name": "onServiceMethod",
            "class": "inputEx.RPC.SMDTester",
            "module": "inputex-smdtester"
        },
        {
            "file": "src/string/js/string.js",
            "line": 33,
            "description": "Set the default values of the options",
            "itemtype": "method",
            "name": "setOptions",
            "params": [
                {
                    "name": "options",
                    "description": "Options object as passed to the constructor",
                    "type": "Object"
                }
            ],
            "class": "inputEx.StringField",
            "module": "inputex-string"
        },
        {
            "file": "src/string/js/string.js",
            "line": 75,
            "description": "Render an 'INPUT' DOM node",
            "itemtype": "method",
            "name": "renderComponent",
            "class": "inputEx.StringField",
            "module": "inputex-string"
        },
        {
            "file": "src/string/js/string.js",
            "line": 115,
            "description": "Set the name of the field (or hidden field)",
            "itemtype": "method",
            "name": "setFieldName",
            "class": "inputEx.StringField",
            "module": "inputex-string"
        },
        {
            "file": "src/string/js/string.js",
            "line": 123,
            "description": "Register the change, focus and blur events",
            "itemtype": "method",
            "name": "initEvents",
            "class": "inputEx.StringField",
            "module": "inputex-string"
        },
        {
            "file": "src/string/js/string.js",
            "line": 144,
            "description": "Return the string value",
            "itemtype": "method",
            "name": "getValue",
            "params": [
                {
                    "name": "The",
                    "description": "string value",
                    "type": "String"
                }
            ],
            "class": "inputEx.StringField",
            "module": "inputex-string"
        },
        {
            "file": "src/string/js/string.js",
            "line": 160,
            "description": "Function to set the value",
            "itemtype": "method",
            "name": "setValue",
            "params": [
                {
                    "name": "value",
                    "description": "The new value",
                    "type": "String"
                },
                {
                    "name": "sendUpdatedEvt",
                    "description": "(optional) Wether this setValue should fire the 'updated' event or not (default is true, pass false to NOT send the event)",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "inputEx.StringField",
            "module": "inputex-string"
        },
        {
            "file": "src/string/js/string.js",
            "line": 174,
            "description": "Uses the optional regexp to validate the field value",
            "itemtype": "method",
            "name": "validate",
            "class": "inputEx.StringField",
            "module": "inputex-string"
        },
        {
            "file": "src/string/js/string.js",
            "line": 210,
            "description": "Disable the field",
            "itemtype": "method",
            "name": "disable",
            "class": "inputEx.StringField",
            "module": "inputex-string"
        },
        {
            "file": "src/string/js/string.js",
            "line": 219,
            "description": "Enable the field",
            "itemtype": "method",
            "name": "enable",
            "class": "inputEx.StringField",
            "module": "inputex-string"
        },
        {
            "file": "src/string/js/string.js",
            "line": 228,
            "description": "Set the focus to this field",
            "itemtype": "method",
            "name": "focus",
            "class": "inputEx.StringField",
            "module": "inputex-string"
        },
        {
            "file": "src/string/js/string.js",
            "line": 243,
            "description": "Add the minLength string message handling",
            "itemtype": "method",
            "name": "getStateString",
            "class": "inputEx.StringField",
            "module": "inputex-string"
        },
        {
            "file": "src/string/js/string.js",
            "line": 254,
            "description": "-- Legacy HTML5 Placeholder for old browsers --\nDisplay the type invite after setting the class",
            "itemtype": "method",
            "name": "setClassFromState",
            "class": "inputEx.StringField",
            "module": "inputex-string"
        },
        {
            "file": "src/string/js/string.js",
            "line": 274,
            "description": "-- Legacy HTML5 Placeholder for old browsers --",
            "itemtype": "method",
            "name": "updateTypeInvite",
            "class": "inputEx.StringField",
            "module": "inputex-string"
        },
        {
            "file": "src/string/js/string.js",
            "line": 306,
            "description": "-- Legacy HTML5 Placeholder for old browsers --\nClear the typeInvite when the field gains focus",
            "itemtype": "method",
            "name": "onFocus",
            "class": "inputEx.StringField",
            "module": "inputex-string"
        },
        {
            "file": "src/string/js/string.js",
            "line": 325,
            "itemtype": "method",
            "name": "onKeyPress",
            "class": "inputEx.StringField",
            "module": "inputex-string"
        },
        {
            "file": "src/string/js/string.js",
            "line": 332,
            "itemtype": "method",
            "name": "onKeyUp",
            "class": "inputEx.StringField",
            "module": "inputex-string"
        },
        {
            "file": "src/stringavailability/js/stringavailability.js",
            "line": 21,
            "itemtype": "method",
            "name": "setOptions",
            "params": [
                {
                    "name": "options",
                    "description": "Options object as passed to the constructor",
                    "type": "Object"
                }
            ],
            "class": "inputEx.StringAvailability",
            "module": "inputex-stringavailability"
        },
        {
            "file": "src/stringavailability/js/stringavailability.js",
            "line": 47,
            "itemtype": "method",
            "name": "render",
            "class": "inputEx.StringAvailability",
            "module": "inputex-stringavailability"
        },
        {
            "file": "src/stringavailability/js/stringavailability.js",
            "line": 59,
            "itemtype": "method",
            "name": "renderComponent",
            "class": "inputEx.StringAvailability",
            "module": "inputex-stringavailability"
        },
        {
            "file": "src/stringavailability/js/stringavailability.js",
            "line": 75,
            "itemtype": "method",
            "name": "initEvents",
            "class": "inputEx.StringAvailability",
            "module": "inputex-stringavailability"
        },
        {
            "file": "src/stringavailability/js/stringavailability.js",
            "line": 82,
            "itemtype": "method",
            "name": "onKeyPress",
            "class": "inputEx.StringAvailability",
            "module": "inputex-stringavailability"
        },
        {
            "file": "src/stringavailability/js/stringavailability.js",
            "line": 107,
            "itemtype": "method",
            "name": "resetTimer",
            "class": "inputEx.StringAvailability",
            "module": "inputex-stringavailability"
        },
        {
            "file": "src/stringavailability/js/stringavailability.js",
            "line": 115,
            "itemtype": "method",
            "name": "startTimer",
            "class": "inputEx.StringAvailability",
            "module": "inputex-stringavailability"
        },
        {
            "file": "src/stringavailability/js/stringavailability.js",
            "line": 125,
            "itemtype": "method",
            "name": "stopTimer",
            "class": "inputEx.StringAvailability",
            "module": "inputex-stringavailability"
        },
        {
            "file": "src/stringavailability/js/stringavailability.js",
            "line": 135,
            "description": "What to do when the string is available",
            "itemtype": "method",
            "name": "onAvailable",
            "class": "inputEx.StringAvailability",
            "module": "inputex-stringavailability"
        },
        {
            "file": "src/stringavailability/js/stringavailability.js",
            "line": 145,
            "description": "What to do when the string is NOT available",
            "itemtype": "method",
            "name": "onUnavailable",
            "class": "inputEx.StringAvailability",
            "module": "inputex-stringavailability"
        },
        {
            "file": "src/stringavailability/js/stringavailability.js",
            "line": 154,
            "description": "Problem during the request",
            "itemtype": "method",
            "name": "onFailure",
            "class": "inputEx.StringAvailability",
            "module": "inputex-stringavailability"
        },
        {
            "file": "src/stringavailability/js/stringavailability.js",
            "line": 164,
            "itemtype": "method",
            "name": "setAvailabilityState",
            "class": "inputEx.StringAvailability",
            "module": "inputex-stringavailability"
        },
        {
            "file": "src/stringavailability/js/stringavailability.js",
            "line": 197,
            "itemtype": "method",
            "name": "setClassFromState",
            "class": "inputEx.StringAvailability",
            "module": "inputex-stringavailability"
        },
        {
            "file": "src/stringavailability/js/stringavailability.js",
            "line": 210,
            "itemtype": "method",
            "name": "validate",
            "class": "inputEx.StringAvailability",
            "module": "inputex-stringavailability"
        },
        {
            "file": "src/stringavailability/js/stringavailability.js",
            "line": 227,
            "description": "Perform the Ajax request",
            "itemtype": "method",
            "name": "getAvailability",
            "class": "inputEx.StringAvailability",
            "module": "inputex-stringavailability"
        },
        {
            "file": "src/textarea/js/textarea.js",
            "line": 23,
            "description": "Set the specific options (rows and cols)",
            "itemtype": "method",
            "name": "setOptions",
            "params": [
                {
                    "name": "options",
                    "description": "Options object as passed to the constructor",
                    "type": "Object"
                }
            ],
            "class": "inputEx.Textarea",
            "module": "inputex-textarea"
        },
        {
            "file": "src/textarea/js/textarea.js",
            "line": 40,
            "description": "Render an 'INPUT' DOM node",
            "itemtype": "method",
            "name": "renderComponent",
            "class": "inputEx.Textarea",
            "module": "inputex-textarea"
        },
        {
            "file": "src/textarea/js/textarea.js",
            "line": 82,
            "description": "Uses the optional regexp to validate the field value",
            "itemtype": "method",
            "name": "validate",
            "class": "inputEx.Textarea",
            "module": "inputex-textarea"
        },
        {
            "file": "src/textarea/js/textarea.js",
            "line": 98,
            "description": "Add the minLength string message handling",
            "itemtype": "method",
            "name": "getStateString",
            "class": "inputEx.Textarea",
            "module": "inputex-textarea"
        },
        {
            "file": "src/textarea/js/textarea.js",
            "line": 112,
            "itemtype": "method",
            "name": "setClassFromState",
            "class": "inputEx.Textarea",
            "module": "inputex-textarea"
        },
        {
            "file": "src/textarea/js/textarea.js",
            "line": 126,
            "description": "Insert text at the current cursor position",
            "itemtype": "method",
            "name": "insert",
            "params": [
                {
                    "name": "text",
                    "description": "Text to insert",
                    "type": "String"
                }
            ],
            "class": "inputEx.Textarea",
            "module": "inputex-textarea"
        },
        {
            "file": "src/textautotag/js/textautotag.js",
            "line": 24,
            "description": "Set the specific options (autotagservice)",
            "itemtype": "method",
            "name": "setOptions",
            "params": [
                {
                    "name": "options",
                    "description": "Options object as passed to the constructor",
                    "type": "Object"
                }
            ],
            "class": "inputEx.TextAutoTag",
            "module": "inputex-textautotag"
        },
        {
            "file": "src/textautotag/js/textautotag.js",
            "line": 41,
            "itemtype": "method",
            "name": "initAutoTag",
            "class": "inputEx.TextAutoTag",
            "module": "inputex-textautotag"
        },
        {
            "file": "src/textautotag/js/textautotag.js",
            "line": 47,
            "itemtype": "method",
            "name": "addTags",
            "class": "inputEx.TextAutoTag",
            "module": "inputex-textautotag"
        },
        {
            "file": "src/textautotag/js/textautotag.js",
            "line": 53,
            "description": "Set the specific options (autotagservice)",
            "itemtype": "method",
            "name": "getTags",
            "params": [
                {
                    "name": "options",
                    "description": "Options object as passed to the constructor",
                    "type": "Object"
                }
            ],
            "class": "inputEx.TextAutoTag",
            "module": "inputex-textautotag"
        },
        {
            "file": "src/textautotag/js/textautotag.js",
            "line": 63,
            "description": "handleUpadte",
            "itemtype": "method",
            "name": "handleUpdate",
            "class": "inputEx.TextAutoTag",
            "module": "inputex-textautotag"
        },
        {
            "file": "src/textautotag/js/textautotag.js",
            "line": 86,
            "itemtype": "method",
            "name": "handleResponse",
            "class": "inputEx.TextAutoTag",
            "module": "inputex-textautotag"
        },
        {
            "file": "src/textautotag/js/textautotag.js",
            "line": 92,
            "description": "Decide wether or not we request",
            "itemtype": "method",
            "name": "doWeRequest",
            "params": [
                {
                    "name": "updated",
                    "description": "text",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "inputEx.TextAutoTag",
            "module": "inputex-textautotag"
        },
        {
            "file": "src/time/js/time.js",
            "line": 86,
            "description": "Returns a string like HH:MM:SS",
            "itemtype": "method",
            "name": "getValue",
            "return": {
                "description": "Hour string",
                "type": "String"
            },
            "class": "inputEx.TimeField",
            "module": "inputex-time"
        },
        {
            "file": "src/time/js/time.js",
            "line": 96,
            "description": "Set the value",
            "itemtype": "method",
            "name": "setValue",
            "params": [
                {
                    "name": "str",
                    "description": "Hour string (format HH:MM:SS)",
                    "type": "String"
                },
                {
                    "name": "sendUpdatedEvt",
                    "description": "(optional) Wether this setValue should fire the 'updated' event or not (default is true, pass false to NOT send the event)",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "inputEx.TimeField",
            "module": "inputex-time"
        },
        {
            "file": "src/timeinterval/js/timeinterval.js",
            "line": 21,
            "description": "Additional options",
            "itemtype": "method",
            "name": "setOptions",
            "class": "inputEx.TimeIntervalField",
            "module": "inputex-timeinterval"
        },
        {
            "file": "src/timeinterval/js/timeinterval.js",
            "line": 67,
            "description": "Concat the values to return a date",
            "itemtype": "method",
            "name": "getValue",
            "return": {
                "description": "the time interval in the field unit",
                "type": "Integer"
            },
            "class": "inputEx.TimeIntervalField",
            "module": "inputex-timeinterval"
        },
        {
            "file": "src/timeinterval/js/timeinterval.js",
            "line": 77,
            "description": "Set the value of both subfields",
            "itemtype": "method",
            "name": "setValue",
            "params": [
                {
                    "name": "val",
                    "description": "The time interval integer (with the given unit)",
                    "type": "Number"
                },
                {
                    "name": "sendUpdatedEvt",
                    "description": "(optional) Wether this setValue should fire the 'updated' event\nor not (default is true, pass false to NOT send the event)",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "inputEx.TimeIntervalField",
            "module": "inputex-timeinterval"
        },
        {
            "file": "src/timerange/js/timerange.js",
            "line": 63,
            "description": "Returns an array like [\"HH:MM\",\"HH:MM\"]",
            "itemtype": "method",
            "name": "getValue",
            "class": "inputEx.TinyMCEField",
            "module": "inputex-timerange"
        },
        {
            "file": "src/timerange/js/timerange.js",
            "line": 77,
            "description": "Set the value",
            "itemtype": "method",
            "name": "setValue",
            "params": [
                {
                    "name": "array",
                    "description": "with 4 Hour strings in display order (format [\"HH\",\"MM\", \"HH\",\"MM\"])",
                    "type": "Array"
                },
                {
                    "name": "sendUpdatedEvt",
                    "description": "(optional) Wether this setValue should fire the 'updated' event or not (default is true, pass false to NOT send the event)",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "inputEx.TinyMCEField",
            "module": "inputex-timerange"
        },
        {
            "file": "src/timerange/js/timerange.js",
            "line": 89,
            "description": "Disable the last selector and set it to \"00\" when the third one's value is 24\n(it will be inccorect to have an end superior to 24:00)",
            "itemtype": "method",
            "name": "toggleEndMinutes",
            "class": "inputEx.TinyMCEField",
            "module": "inputex-timerange"
        },
        {
            "file": "src/timerange/js/timerange.js",
            "line": 107,
            "description": "Add the minLength string message handling",
            "itemtype": "method",
            "name": "getStateString",
            "class": "inputEx.TinyMCEField",
            "module": "inputex-timerange"
        },
        {
            "file": "src/timerange/js/timerange.js",
            "line": 126,
            "itemtype": "method",
            "name": "validate",
            "class": "inputEx.TinyMCEField",
            "module": "inputex-timerange"
        },
        {
            "file": "src/tinymce/js/tinymce.js",
            "line": 46,
            "description": "Set the default values of the options",
            "itemtype": "method",
            "name": "setOptions",
            "params": [
                {
                    "name": "options",
                    "description": "Options object as passed to the constructor",
                    "type": "Object"
                }
            ],
            "class": "inputEx.TinyMCEField",
            "module": "inputex-tinymce"
        },
        {
            "file": "src/tinymce/js/tinymce.js",
            "line": 57,
            "description": "Render the field using the YUI Editor widget",
            "itemtype": "method",
            "name": "renderComponent",
            "class": "inputEx.TinyMCEField",
            "module": "inputex-tinymce"
        },
        {
            "file": "src/tinymce/js/tinymce.js",
            "line": 89,
            "description": "Set the html content",
            "itemtype": "method",
            "name": "setValue",
            "params": [
                {
                    "name": "value",
                    "description": "The html string",
                    "type": "String"
                },
                {
                    "name": "sendUpdatedEvt",
                    "description": "(optional) Wether this setValue should fire the 'updated' event or not (default is true, pass false to NOT send the event)",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "inputEx.TinyMCEField",
            "module": "inputex-tinymce"
        },
        {
            "file": "src/tinymce/js/tinymce.js",
            "line": 117,
            "description": "Get the html string",
            "itemtype": "method",
            "name": "getValue",
            "return": {
                "description": "the html string",
                "type": "String"
            },
            "class": "inputEx.TinyMCEField",
            "module": "inputex-tinymce"
        },
        {
            "file": "src/tinymce/js/tinymce.js",
            "line": 133,
            "itemtype": "method",
            "name": "getText",
            "class": "inputEx.TinyMCEField",
            "module": "inputex-tinymce"
        },
        {
            "file": "src/tree/js/tree.js",
            "line": 24,
            "description": "Adds a new line to the List Field",
            "itemtype": "method",
            "name": "renderSubField",
            "params": [
                {
                    "name": "value",
                    "description": "Value of the subelement",
                    "type": "Any"
                }
            ],
            "return": {
                "description": "instance of the created field (inputEx.Field or derivative)",
                "type": "inputEx.Field"
            },
            "class": "inputEx.TreeField",
            "module": "inputex-tree"
        },
        {
            "file": "src/tree/js/tree.js",
            "line": 68,
            "description": "Render the addButton and childContainer",
            "itemtype": "method",
            "name": "renderComponent",
            "class": "inputEx.TreeField",
            "module": "inputex-tree"
        },
        {
            "file": "src/tree/js/tree.js",
            "line": 103,
            "description": "Set the value",
            "itemtype": "method",
            "name": "setValue",
            "params": [
                {
                    "name": "obj",
                    "description": "The tree object",
                    "type": "Any"
                },
                {
                    "name": "sendUpdatedEvt",
                    "description": "(optional) Wether this setValue should fire the 'updated' event or not (default is true, pass false to NOT send the event)",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "inputEx.TreeField",
            "module": "inputex-tree"
        },
        {
            "file": "src/tree/js/tree.js",
            "line": 114,
            "description": "Get the value",
            "itemtype": "method",
            "name": "getValue",
            "return": {
                "description": "The tree object",
                "type": "Any"
            },
            "class": "inputEx.TreeField",
            "module": "inputex-tree"
        },
        {
            "file": "src/type/js/type.js",
            "line": 20,
            "description": "Render the TypeField: create a button with a property panel that contains the field options",
            "itemtype": "method",
            "name": "renderComponent",
            "class": "inputEx.TypeField",
            "module": "inputex-type"
        },
        {
            "file": "src/type/js/type.js",
            "line": 54,
            "description": "Adds 2 event listeners:\n - on the button to toggel the propertiesPanel",
            "itemtype": "method",
            "name": "initEvents",
            "class": "inputEx.TypeField",
            "module": "inputex-type"
        },
        {
            "file": "src/type/js/type.js",
            "line": 73,
            "description": "Regenerate the property form",
            "itemtype": "method",
            "name": "rebuildGroupOptions",
            "class": "inputEx.TypeField",
            "module": "inputex-type"
        },
        {
            "file": "src/type/js/type.js",
            "line": 120,
            "description": "Toggle the property panel",
            "itemtype": "method",
            "name": "onTogglePropertiesPanel",
            "class": "inputEx.TypeField",
            "module": "inputex-type"
        },
        {
            "file": "src/type/js/type.js",
            "line": 134,
            "description": "Update the fieldValue with the changed properties",
            "itemtype": "method",
            "name": "onChangeGroupOptions",
            "class": "inputEx.TypeField",
            "module": "inputex-type"
        },
        {
            "file": "src/type/js/type.js",
            "line": 147,
            "description": "Update the fieldValue",
            "itemtype": "method",
            "name": "updateFieldValue",
            "class": "inputEx.TypeField",
            "module": "inputex-type"
        },
        {
            "file": "src/type/js/type.js",
            "line": 180,
            "description": "Set the value of the label, typeProperties and group",
            "itemtype": "method",
            "name": "setValue",
            "params": [
                {
                    "name": "value",
                    "description": "Type object configuration",
                    "type": "Object"
                },
                {
                    "name": "sendUpdatedEvt",
                    "description": "(optional) Wether this setValue should fire the 'updated' event or not (default is true, pass false to NOT send the event)",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "inputEx.TypeField",
            "module": "inputex-type"
        },
        {
            "file": "src/type/js/type.js",
            "line": 217,
            "description": "Return the config for a entry in an Group",
            "itemtype": "method",
            "name": "getValue",
            "return": {
                "description": "Type object configuration",
                "type": "Object"
            },
            "class": "inputEx.TypeField",
            "module": "inputex-type"
        },
        {
            "file": "src/uneditable/js/uneditable.js",
            "line": 22,
            "description": "Set the default values of the options",
            "itemtype": "method",
            "name": "setOptions",
            "params": [
                {
                    "name": "options",
                    "description": "Options object as passed to the constructor",
                    "type": "Object"
                }
            ],
            "class": "inputEx.UneditableField",
            "module": "inputex-uneditable"
        },
        {
            "file": "src/uneditable/js/uneditable.js",
            "line": 32,
            "description": "Store the value and update the visu",
            "itemtype": "method",
            "name": "setValue",
            "params": [
                {
                    "name": "val",
                    "description": "The value that will be sent to the visu",
                    "type": "Any"
                },
                {
                    "name": "sendUpdatedEvt",
                    "description": "(optional) Wether this setValue should fire the 'updated' event\nor not (default is true, pass false to NOT send the event)",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "inputEx.UneditableField",
            "module": "inputex-uneditable"
        },
        {
            "file": "src/uneditable/js/uneditable.js",
            "line": 47,
            "description": "Return the stored value",
            "itemtype": "method",
            "name": "getValue",
            "return": {
                "description": "The previously stored value",
                "type": "Any"
            },
            "class": "inputEx.UneditableField",
            "module": "inputex-uneditable"
        },
        {
            "file": "src/uppercase/js/uppercase.js",
            "line": 20,
            "description": "Set the value and call toUpperCase",
            "itemtype": "method",
            "name": "setValue",
            "params": [
                {
                    "name": "val",
                    "description": "The string",
                    "type": "String"
                },
                {
                    "name": "sendUpdatedEvt",
                    "description": "(optional) Wether this setValue should fire the 'updated' event or not (default is true, pass false to NOT send the event)",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "inputEx.UpperCaseField",
            "module": "inputex-uppercase"
        },
        {
            "file": "src/uppercase/js/uppercase.js",
            "line": 34,
            "description": "Call setvalue on input to update the field with upper case value",
            "itemtype": "method",
            "name": "onKeyPress",
            "params": [
                {
                    "name": "e",
                    "description": "The original 'input' event",
                    "type": "Event"
                }
            ],
            "class": "inputEx.UpperCaseField",
            "module": "inputex-uppercase"
        },
        {
            "file": "src/url/js/url.js",
            "line": 23,
            "description": "Adds the invalid Url message",
            "itemtype": "method",
            "name": "setOptions",
            "params": [
                {
                    "name": "options",
                    "description": "Options object as passed to the constructor",
                    "type": "Object"
                }
            ],
            "class": "inputEx.UrlField",
            "module": "inputex-url"
        },
        {
            "file": "src/url/js/url.js",
            "line": 42,
            "description": "Adds a img tag before the field to display the favicon",
            "itemtype": "method",
            "name": "render",
            "class": "inputEx.UrlField",
            "module": "inputex-url"
        },
        {
            "file": "src/url/js/url.js",
            "line": 63,
            "itemtype": "method",
            "name": "setClassFromState",
            "class": "inputEx.UrlField",
            "module": "inputex-url"
        },
        {
            "file": "src/url/js/url.js",
            "line": 75,
            "itemtype": "method",
            "name": "updateFavicon",
            "class": "inputEx.UrlField",
            "module": "inputex-url"
        },
        {
            "file": "src/url/js/url.js",
            "line": 96,
            "description": "Display the favicon if the icon was found (use of the naturalWidth property)",
            "itemtype": "method",
            "name": "displayFavicon",
            "class": "inputEx.UrlField",
            "module": "inputex-url"
        },
        {
            "file": "src/url/js/url.js",
            "line": 104,
            "description": "Hide the favicon",
            "itemtype": "method",
            "name": "hideFavicon",
            "class": "inputEx.UrlField",
            "module": "inputex-url"
        },
        {
            "file": "src/url/js/url.js",
            "line": 112,
            "description": "overriding hide in order to hide the favicon too",
            "itemtype": "method",
            "name": "hide",
            "class": "inputEx.UrlField",
            "module": "inputex-url"
        },
        {
            "file": "src/vector/js/vector.js",
            "line": 17,
            "description": "Additional options for VectorField (dimension, size)",
            "itemtype": "method",
            "name": "setOptions",
            "class": "inputEx.VectorField",
            "module": "inputex-vector"
        },
        {
            "file": "src/visus/js/visus.js",
            "line": 14,
            "description": "Use a rendering function\noptions = {visuType: 'func', func: function(data) { ...code here...} }",
            "itemtype": "method",
            "name": "func",
            "class": "inputEx.visus",
            "module": "inputex-visus"
        },
        {
            "file": "src/visus/js/visus.js",
            "line": 23,
            "description": "Use Y.Lang.dump\noptions = {visuType: 'dump'}",
            "itemtype": "method",
            "name": "dump",
            "class": "inputEx.visus",
            "module": "inputex-visus"
        },
        {
            "file": "src/visus/js/visus.js",
            "line": 34,
            "description": "Render 'data' using a visualization function described by 'visuOptions'",
            "itemtype": "method",
            "name": "renderVisu",
            "static": 1,
            "params": [
                {
                    "name": "visuOptions",
                    "description": "The visu parameters object with: visuType: 'myType', ...args...",
                    "type": "Object"
                },
                {
                    "name": "data",
                    "description": "The input data to send to the template",
                    "type": "Object"
                },
                {
                    "name": "parentEl",
                    "description": "optional Set the result as content of parentEl",
                    "type": "HTMLElement || String"
                }
            ],
            "return": {
                "description": "Either the inserted HTMLElement or the String set to parentEl.innerHTML",
                "type": "HTMLElement || String"
            },
            "class": "inputEx.visus",
            "module": "inputex-visus"
        }
    ],
    "warnings": [
        {
            "message": "unknown tag: field",
            "line": " src/field/js/field.js:8"
        }
    ]
}